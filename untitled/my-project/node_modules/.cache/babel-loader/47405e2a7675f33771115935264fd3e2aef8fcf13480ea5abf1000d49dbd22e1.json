{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nimport ProfessionInput from \"./ProfessionInput.vue\";\nimport CityInput from \"./CityInput.vue\";\nimport PhotoInput from \"./PhotoInput.vue\";\nimport NameInput from \"./NameInput.vue\";\nimport EmailInput from \"./EmailInput.vue\";\nimport PhoneInput from \"./PhoneInput.vue\";\nimport BirthdayInput from \"./BirthdayInput.vue\";\nimport SalaryInput from \"./SalaryInput.vue\";\nimport SkillsInput from \"./SkillsInput.vue\";\nimport AboutMeInput from \"./AboutMeInput.vue\";\nimport EducationInput from \"./EducationInput.vue\";\nimport StatusInput from \"./StatusInput.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    ProfessionInput,\n    CityInput,\n    PhotoInput,\n    NameInput,\n    EmailInput,\n    PhoneInput,\n    BirthdayInput,\n    SalaryInput,\n    SkillsInput,\n    AboutMeInput,\n    EducationInput,\n    StatusInput\n  },\n  setup() {\n    const profession = ref(\"\");\n    const city = ref(\"\");\n    const photo = ref(\"\");\n    const name = ref(\"\");\n    const email = ref(\"\");\n    const phone = ref(\"\");\n    const birthday = ref(\"\");\n    const salary = ref(\"\");\n    const skills = ref(\"\");\n    const about_me = ref(\"\");\n    const status = ref(\"Новый\");\n\n    // Инициализация списка образования\n    const educationInfo = ref([{\n      id: Date.now(),\n      level: \"Среднее\",\n      institution: \"\",\n      faculty: \"\",\n      specialization: \"\",\n      yearOfGraduation: \"\"\n    }]);\n    const addEducation = () => {\n      educationInfo.value.push({\n        id: Date.now(),\n        level: \"Среднее\",\n        // Это можно сделать динамическим, передав уровень через параметр, если нужно\n        institution: \"\",\n        faculty: \"\",\n        specialization: \"\",\n        yearOfGraduation: \"\"\n      });\n    };\n    const removeEducation = index => {\n      educationInfo.value.splice(index, 1);\n    };\n    const saveResume = async () => {\n      try {\n        const resumeData = {\n          profession: profession.value,\n          city: city.value,\n          photo: photo.value,\n          name: name.value,\n          email: email.value,\n          phone: phone.value,\n          birthday: birthday.value,\n          salary: salary.value,\n          skills: skills.value,\n          about_me: about_me.value,\n          status: status.value,\n          education: educationInfo.value\n        };\n        await axios.post(\"http://localhost:3000/api/cv\", resumeData);\n        alert(\"Резюме успешно сохранено!\");\n\n        // Сброс данных после сохранения\n        profession.value = \"\";\n        city.value = \"\";\n        photo.value = \"\";\n        name.value = \"\";\n        email.value = \"\";\n        phone.value = \"\";\n        birthday.value = \"\";\n        salary.value = \"\";\n        skills.value = \"\";\n        about_me.value = \"\";\n        status.value = \"Новый\";\n        educationInfo.value = [{\n          id: Date.now(),\n          level: \"Среднее\",\n          institution: \"\",\n          faculty: \"\",\n          specialization: \"\",\n          yearOfGraduation: \"\"\n        }];\n      } catch (error) {\n        console.error(\"Ошибка при сохранении резюме:\", error);\n      }\n    };\n    return {\n      profession,\n      city,\n      photo,\n      name,\n      email,\n      phone,\n      birthday,\n      salary,\n      skills,\n      about_me,\n      status,\n      educationInfo,\n      addEducation,\n      removeEducation,\n      saveResume\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","ProfessionInput","CityInput","PhotoInput","NameInput","EmailInput","PhoneInput","BirthdayInput","SalaryInput","SkillsInput","AboutMeInput","EducationInput","StatusInput","name","components","setup","profession","city","photo","email","phone","birthday","salary","skills","about_me","status","educationInfo","id","Date","now","level","institution","faculty","specialization","yearOfGraduation","addEducation","value","push","removeEducation","index","splice","saveResume","resumeData","education","post","alert","error","console"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\ResumeForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <ResumeList />\r\n    <div class=\"form-container\">\r\n      <h2>Форма резюме</h2>\r\n      <ProfessionInput v-model=\"profession\" />\r\n      <CityInput v-model=\"city\" />\r\n      <PhotoInput v-model=\"photo\" />\r\n      <NameInput v-model=\"name\" />\r\n      <EmailInput v-model=\"email\" />\r\n      <PhoneInput v-model=\"phone\" />\r\n      <BirthdayInput v-model=\"birthday\" />\r\n      <StatusInput v-model=\"status\" />\r\n\r\n      <div v-for=\"(education, index) in educationInfo\" :key=\"education.id\">\r\n        <EducationInput\r\n            v-model=\"education\"\r\n            :educationInfo=\"educationInfo\"\r\n            :index=\"index\"\r\n            @remove=\"removeEducation\"\r\n        />\r\n      </div>\r\n\r\n      <button @click=\"addEducation\" class=\"add-education-btn\">Указать еще одно место обучения</button>\r\n\r\n      <SalaryInput v-model=\"salary\" />\r\n      <SkillsInput v-model=\"skills\" />\r\n      <AboutMeInput v-model=\"about_me\" />\r\n\r\n      <button @click=\"saveResume\" class=\"save-btn\">Сохранить резюме</button>\r\n    </div>\r\n\r\n    <div class=\"summary-container\">\r\n      <h2>Резюме</h2>\r\n      <p>Профессия: <span>{{ profession }}</span></p>\r\n      <p>Город: <span>{{ city }}</span></p>\r\n      <p>Фото:</p>\r\n      <div class=\"image-container\">\r\n        <img v-if=\"photo\" :src=\"photo\" width=\"200\" height=\"100\" alt=\"Фото\" class=\"profile-photo\" />\r\n      </div>\r\n      <p>Имя: <span>{{ name }}</span></p>\r\n      <p>Email: <span>{{ email }}</span></p>\r\n      <p>Телефон: <span>{{ phone }}</span></p>\r\n      <p>День Рождения: <span>{{ birthday }}</span></p>\r\n\r\n      <p>Образования:</p>\r\n      <div v-for=\"(education) in educationInfo\" :key=\"education.id\">\r\n        <div v-show=\"education.level !== 'Среднее'\">\r\n          <p>Учебное заведение: <span>{{ education.institution }}</span></p>\r\n          <p>Факультет: <span>{{ education.faculty }}</span></p>\r\n          <p>Специализация: <span>{{ education.specialization }}</span></p>\r\n          <p>Год окончания: <span>{{ education.yearOfGraduation }}</span></p>\r\n        </div>\r\n      </div>\r\n\r\n      <p>Желаемая зарплата: <span>{{ salary }}</span></p>\r\n      <p>Ключевые навыки: <span>{{ skills }}</span></p>\r\n      <p>О себе: <span>{{ about_me }}</span></p>\r\n      <p>Статус: <span>{{ status }}</span></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport axios from \"axios\";\r\nimport ProfessionInput from \"./ProfessionInput.vue\";\r\nimport CityInput from \"./CityInput.vue\";\r\nimport PhotoInput from \"./PhotoInput.vue\";\r\nimport NameInput from \"./NameInput.vue\";\r\nimport EmailInput from \"./EmailInput.vue\";\r\nimport PhoneInput from \"./PhoneInput.vue\";\r\nimport BirthdayInput from \"./BirthdayInput.vue\";\r\nimport SalaryInput from \"./SalaryInput.vue\";\r\nimport SkillsInput from \"./SkillsInput.vue\";\r\nimport AboutMeInput from \"./AboutMeInput.vue\";\r\nimport EducationInput from \"./EducationInput.vue\";\r\nimport StatusInput from \"./StatusInput.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    ProfessionInput,\r\n    CityInput,\r\n    PhotoInput,\r\n    NameInput,\r\n    EmailInput,\r\n    PhoneInput,\r\n    BirthdayInput,\r\n    SalaryInput,\r\n    SkillsInput,\r\n    AboutMeInput,\r\n    EducationInput,\r\n    StatusInput,\r\n  },\r\n  setup() {\r\n    const profession = ref(\"\");\r\n    const city = ref(\"\");\r\n    const photo = ref(\"\");\r\n    const name = ref(\"\");\r\n    const email = ref(\"\");\r\n    const phone = ref(\"\");\r\n    const birthday = ref(\"\");\r\n    const salary = ref(\"\");\r\n    const skills = ref(\"\");\r\n    const about_me = ref(\"\");\r\n    const status = ref(\"Новый\");\r\n\r\n    // Инициализация списка образования\r\n    const educationInfo = ref([\r\n      {\r\n        id: Date.now(),\r\n        level: \"Среднее\",\r\n        institution: \"\",\r\n        faculty: \"\",\r\n        specialization: \"\",\r\n        yearOfGraduation: \"\",\r\n      },\r\n    ]);\r\n\r\n    const addEducation = () => {\r\n      educationInfo.value.push({\r\n        id: Date.now(),\r\n        level: \"Среднее\",  // Это можно сделать динамическим, передав уровень через параметр, если нужно\r\n        institution: \"\",\r\n        faculty: \"\",\r\n        specialization: \"\",\r\n        yearOfGraduation: \"\",\r\n      });\r\n    };\r\n\r\n    const removeEducation = (index) => {\r\n      educationInfo.value.splice(index, 1);\r\n    };\r\n\r\n    const saveResume = async () => {\r\n      try {\r\n        const resumeData = {\r\n          profession: profession.value,\r\n          city: city.value,\r\n          photo: photo.value,\r\n          name: name.value,\r\n          email: email.value,\r\n          phone: phone.value,\r\n          birthday: birthday.value,\r\n          salary: salary.value,\r\n          skills: skills.value,\r\n          about_me: about_me.value,\r\n          status: status.value,\r\n          education: educationInfo.value,\r\n        };\r\n\r\n        await axios.post(\"http://localhost:3000/api/cv\", resumeData);\r\n        alert(\"Резюме успешно сохранено!\");\r\n\r\n        // Сброс данных после сохранения\r\n        profession.value = \"\";\r\n        city.value = \"\";\r\n        photo.value = \"\";\r\n        name.value = \"\";\r\n        email.value = \"\";\r\n        phone.value = \"\";\r\n        birthday.value = \"\";\r\n        salary.value = \"\";\r\n        skills.value = \"\";\r\n        about_me.value = \"\";\r\n        status.value = \"Новый\";\r\n        educationInfo.value = [\r\n          {\r\n            id: Date.now(),\r\n            level: \"Среднее\",\r\n            institution: \"\",\r\n            faculty: \"\",\r\n            specialization: \"\",\r\n            yearOfGraduation: \"\",\r\n          },\r\n        ];\r\n      } catch (error) {\r\n        console.error(\"Ошибка при сохранении резюме:\", error);\r\n      }\r\n    };\r\n\r\n    return {\r\n      profession,\r\n      city,\r\n      photo,\r\n      name,\r\n      email,\r\n      phone,\r\n      birthday,\r\n      salary,\r\n      skills,\r\n      about_me,\r\n      status,\r\n      educationInfo,\r\n      addEducation,\r\n      removeEducation,\r\n      saveResume,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style>\r\n.nav-button {\r\n  padding: 10px 15px;\r\n  margin: 5px;\r\n  background-color: #007acc;\r\n  color: white;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n  display: inline-block;\r\n  text-align: center;\r\n}\r\n\r\n.nav-button:hover {\r\n  background-color: #005f99;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f0f4f8;\r\n  color: #333;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 50px;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n  width: 700px; /* Фиксированная ширина контейнера */\r\n}\r\n\r\n.form-container, .summary-container {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  width: 320px; /* Фиксированная ширина для каждого блока */\r\n  min-height: 250px; /* Минимальная высота для симметрии */\r\n}\r\n\r\nh2 {\r\n  font-size: 1.5em;\r\n  color: #007acc;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-container > * {\r\n  margin-bottom: 15px;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 1em;\r\n}\r\n\r\ninput:focus {\r\n  border-color: #007acc;\r\n  outline: none;\r\n}\r\n\r\n.summary-container > p {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1em;\r\n  padding: 5px 0;\r\n}\r\n\r\n.summary-container > p span {\r\n  margin-left: 10px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}