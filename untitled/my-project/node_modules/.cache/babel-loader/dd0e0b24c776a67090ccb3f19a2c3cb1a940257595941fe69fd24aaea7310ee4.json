{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nimport draggable from 'vuedraggable';\nimport axios from 'axios';\nexport default {\n  components: {\n    draggable\n  },\n  name: \"HomePage\",\n  data() {\n    return {\n      columns: [{\n        status: 'Новый',\n        label: 'Новый'\n      }, {\n        status: 'Назначено собеседование',\n        label: 'Назначено собеседование'\n      }, {\n        status: 'Принят',\n        label: 'Принят'\n      }, {\n        status: 'Отказ',\n        label: 'Отказ'\n      }],\n      resumesByStatusMap: {} // Для хранения резюме по статусам\n    };\n  },\n  computed: {\n    ...mapGetters(['resumesByStatus']) // Получаем резюме из Vuex\n  },\n  watch: {\n    resumesByStatus: {\n      handler(newVal) {\n        this.resumesByStatusMap = this.groupByStatus(newVal);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    ...mapActions(['fetchResumes']),\n    // Подключаем действия Vuex\n    async updateResumeStatus({\n      commit\n    }, {\n      r,\n      newStatus\n    }) {\n      try {\n        // Это строка, в которой может быть ошибка:\n        const response = await axios.put(`http://localhost:3000/api/cv/${r._id}/status/update`, {\n          status: newStatus\n        });\n        if (response.status === 200) {\n          commit('updateResumeStatus', {\n            r,\n            newStatus\n          }); // Обновляем статус в Vuex\n          console.log(`Статус резюме ${r._id} обновлен на ${newStatus}`);\n        }\n      } catch (error) {\n        console.error('Ошибка при обновлении статуса:', error);\n      }\n    },\n    // Метод для группировки резюме по статусам\n    groupByStatus(resumes) {\n      const map = {\n        'Новый': [],\n        'Назначено собеседование': [],\n        'Принят': [],\n        'Отказ': []\n      };\n      resumes.forEach(resume => {\n        if (map[resume.status]) {\n          map[resume.status].push(resume);\n        }\n      });\n      return map;\n    },\n    // Метод для вычисления возраста\n    getAge(birthday) {\n      const birthDate = new Date(birthday);\n      const ageDifMs = Date.now() - birthDate.getTime();\n      const ageDate = new Date(ageDifMs);\n      return Math.abs(ageDate.getUTCFullYear() - 1970);\n    },\n    // Событие при начале перетаскивания\n    async onDragEnd(event) {\n      const {\n        to,\n        item\n      } = event;\n      const newStatus = to.dataset.status;\n      const draggedElement = item.__draggable_context.element;\n      console.log('Новый статус:', newStatus);\n      console.log('Перетащенный элемент:', draggedElement);\n      if (newStatus && draggedElement.status !== newStatus) {\n        draggedElement.status = newStatus;\n        try {\n          await this.$store.dispatch('updateResumeStatus', {\n            r: draggedElement,\n            // Передаем сам объект резюме\n            newStatus: newStatus\n          });\n          console.log('Статус успешно изменён:', newStatus);\n        } catch (error) {\n          console.error('Ошибка обновления статуса:', error);\n        }\n      } else {\n        console.warn('Статус не изменился или пустой');\n      }\n    }\n  },\n  // Загружаем резюме при создании компонента\n  async created() {\n    await this.fetchResumes();\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","draggable","axios","components","name","data","columns","status","label","resumesByStatusMap","computed","watch","resumesByStatus","handler","newVal","groupByStatus","immediate","methods","updateResumeStatus","commit","r","newStatus","response","put","_id","console","log","error","resumes","map","forEach","resume","push","getAge","birthday","birthDate","Date","ageDifMs","now","getTime","ageDate","Math","abs","getUTCFullYear","onDragEnd","event","to","item","dataset","draggedElement","__draggable_context","element","$store","dispatch","warn","created","fetchResumes"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"homepage\">\r\n    <div class=\"columns\">\r\n      <div v-for=\"column in columns\" :key=\"column.status\" class=\"column\" :data-status=\"column.status\">\r\n        <h3>{{ column.label }} ({{ resumesByStatusMap[column.status]?.length || 0 }})</h3>\r\n\r\n        <!-- Обновлённый draggable -->\r\n        <draggable\r\n            v-model=\"resumesByStatusMap[column.status]\"\r\n            @start=\"onDragStart\"\r\n            @end=\"onDragEnd\"\r\n            group=\"resumes\"\r\n            :key=\"column.status\"\r\n        >\r\n          <template #item=\"{ element }\">\r\n            <div\r\n                :key=\"element._id\"\r\n                class=\"resume-card\"\r\n                :data-id=\"element._id\"\r\n                @click=\"$router.push(`/edit/${element._id}`)\"\r\n            >\r\n              <img :src=\"element.photo\" alt=\"Фото\" />\r\n              <p><strong>{{ element.profession }}</strong></p>\r\n              <p>{{ element.name }}</p>\r\n              <p>{{ getAge(element.birthday) }} лет</p>\r\n            </div>\r\n          </template>\r\n        </draggable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\nimport draggable from 'vuedraggable';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: { draggable },\r\n  name: \"HomePage\",\r\n  data() {\r\n    return {\r\n      columns: [\r\n        { status: 'Новый', label: 'Новый' },\r\n        { status: 'Назначено собеседование', label: 'Назначено собеседование' },\r\n        { status: 'Принят', label: 'Принят' },\r\n        { status: 'Отказ', label: 'Отказ' },\r\n      ],\r\n      resumesByStatusMap: {}, // Для хранения резюме по статусам\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters(['resumesByStatus']), // Получаем резюме из Vuex\r\n  },\r\n\r\n  watch: {\r\n    resumesByStatus: {\r\n      handler(newVal) {\r\n        this.resumesByStatusMap = this.groupByStatus(newVal);\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions(['fetchResumes']), // Подключаем действия Vuex\r\n    async updateResumeStatus({ commit }, { r, newStatus }) {\r\n      try {\r\n        // Это строка, в которой может быть ошибка:\r\n        const response = await axios.put(`http://localhost:3000/api/cv/${r._id}/status/update`, {\r\n          status: newStatus\r\n        });\r\n\r\n\r\n        if (response.status === 200) {\r\n          commit('updateResumeStatus', { r, newStatus });  // Обновляем статус в Vuex\r\n          console.log(`Статус резюме ${r._id} обновлен на ${newStatus}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при обновлении статуса:', error);\r\n      }\r\n    },\r\n    // Метод для группировки резюме по статусам\r\n    groupByStatus(resumes) {\r\n      const map = {\r\n        'Новый': [],\r\n        'Назначено собеседование': [],\r\n        'Принят': [],\r\n        'Отказ': [],\r\n      };\r\n\r\n      resumes.forEach(resume => {\r\n        if (map[resume.status]) {\r\n          map[resume.status].push(resume);\r\n        }\r\n      });\r\n      return map;\r\n    },\r\n\r\n\r\n\r\n    // Метод для вычисления возраста\r\n    getAge(birthday) {\r\n      const birthDate = new Date(birthday);\r\n      const ageDifMs = Date.now() - birthDate.getTime();\r\n      const ageDate = new Date(ageDifMs);\r\n      return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    },\r\n\r\n    // Событие при начале перетаскивания\r\n    async onDragEnd(event) {\r\n      const { to, item } = event;\r\n      const newStatus = to.dataset.status;\r\n      const draggedElement = item.__draggable_context.element;\r\n\r\n      console.log('Новый статус:', newStatus);\r\n      console.log('Перетащенный элемент:', draggedElement);\r\n\r\n      if (newStatus && draggedElement.status !== newStatus) {\r\n        draggedElement.status = newStatus;\r\n\r\n        try {\r\n          await this.$store.dispatch('updateResumeStatus', {\r\n            r: draggedElement,  // Передаем сам объект резюме\r\n            newStatus: newStatus\r\n          });\r\n\r\n\r\n          console.log('Статус успешно изменён:', newStatus);\r\n        } catch (error) {\r\n          console.error('Ошибка обновления статуса:', error);\r\n        }\r\n      } else {\r\n        console.warn('Статус не изменился или пустой');\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n  },\r\n\r\n  // Загружаем резюме при создании компонента\r\n  async created() {\r\n    await this.fetchResumes();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для колонок и карточек */\r\n.new-resume-btn {\r\n  padding: 10px 20px;\r\n  background-color: #007acc;\r\n  color: white;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.new-resume-btn:hover {\r\n  background-color: #005f99;\r\n}\r\n\r\n.columns {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.column {\r\n  width: 22%;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh3 {\r\n  font-size: 1.2em;\r\n  color: #007acc;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.resume-card {\r\n  background-color: #f9f9f9;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.resume-card img {\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.resume-card p {\r\n  margin: 5px 0;\r\n}\r\n\r\n.column h3 {\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";AAkCA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,OAAOC,SAAQ,MAAO,cAAc;AACpC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IAAEF;EAAU,CAAC;EACzBG,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CACP;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC,EACnC;QAAED,MAAM,EAAE,yBAAyB;QAAEC,KAAK,EAAE;MAA0B,CAAC,EACvE;QAAED,MAAM,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EACrC;QAAED,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC,CACpC;MACDC,kBAAkB,EAAE,CAAC,CAAC,CAAE;IAC1B,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACR,GAAGV,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAE;EACtC,CAAC;EAEDW,KAAK,EAAE;IACLC,eAAe,EAAE;MACfC,OAAOA,CAACC,MAAM,EAAE;QACd,IAAI,CAACL,kBAAiB,GAAI,IAAI,CAACM,aAAa,CAACD,MAAM,CAAC;MACtD,CAAC;MACDE,SAAS,EAAE;IACb;EACF,CAAC;EAEDC,OAAO,EAAE;IACP,GAAGlB,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;IAAE;IACjC,MAAMmB,kBAAkBA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAEC,CAAC;MAAEC;IAAU,CAAC,EAAE;MACrD,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMpB,KAAK,CAACqB,GAAG,CAAC,gCAAgCH,CAAC,CAACI,GAAG,gBAAgB,EAAE;UACtFjB,MAAM,EAAEc;QACV,CAAC,CAAC;QAGF,IAAIC,QAAQ,CAACf,MAAK,KAAM,GAAG,EAAE;UAC3BY,MAAM,CAAC,oBAAoB,EAAE;YAAEC,CAAC;YAAEC;UAAU,CAAC,CAAC,EAAG;UACjDI,OAAO,CAACC,GAAG,CAAC,iBAAiBN,CAAC,CAACI,GAAG,gBAAgBH,SAAS,EAAE,CAAC;QAChE;MACF,EAAE,OAAOM,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACD;IACAZ,aAAaA,CAACa,OAAO,EAAE;MACrB,MAAMC,GAAE,GAAI;QACV,OAAO,EAAE,EAAE;QACX,yBAAyB,EAAE,EAAE;QAC7B,QAAQ,EAAE,EAAE;QACZ,OAAO,EAAE;MACX,CAAC;MAEDD,OAAO,CAACE,OAAO,CAACC,MAAK,IAAK;QACxB,IAAIF,GAAG,CAACE,MAAM,CAACxB,MAAM,CAAC,EAAE;UACtBsB,GAAG,CAACE,MAAM,CAACxB,MAAM,CAAC,CAACyB,IAAI,CAACD,MAAM,CAAC;QACjC;MACF,CAAC,CAAC;MACF,OAAOF,GAAG;IACZ,CAAC;IAID;IACAI,MAAMA,CAACC,QAAQ,EAAE;MACf,MAAMC,SAAQ,GAAI,IAAIC,IAAI,CAACF,QAAQ,CAAC;MACpC,MAAMG,QAAO,GAAID,IAAI,CAACE,GAAG,CAAC,IAAIH,SAAS,CAACI,OAAO,CAAC,CAAC;MACjD,MAAMC,OAAM,GAAI,IAAIJ,IAAI,CAACC,QAAQ,CAAC;MAClC,OAAOI,IAAI,CAACC,GAAG,CAACF,OAAO,CAACG,cAAc,CAAC,IAAI,IAAI,CAAC;IAClD,CAAC;IAED;IACA,MAAMC,SAASA,CAACC,KAAK,EAAE;MACrB,MAAM;QAAEC,EAAE;QAAEC;MAAK,IAAIF,KAAK;MAC1B,MAAMxB,SAAQ,GAAIyB,EAAE,CAACE,OAAO,CAACzC,MAAM;MACnC,MAAM0C,cAAa,GAAIF,IAAI,CAACG,mBAAmB,CAACC,OAAO;MAEvD1B,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,SAAS,CAAC;MACvCI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEuB,cAAc,CAAC;MAEpD,IAAI5B,SAAQ,IAAK4B,cAAc,CAAC1C,MAAK,KAAMc,SAAS,EAAE;QACpD4B,cAAc,CAAC1C,MAAK,GAAIc,SAAS;QAEjC,IAAI;UACF,MAAM,IAAI,CAAC+B,MAAM,CAACC,QAAQ,CAAC,oBAAoB,EAAE;YAC/CjC,CAAC,EAAE6B,cAAc;YAAG;YACpB5B,SAAS,EAAEA;UACb,CAAC,CAAC;UAGFI,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,SAAS,CAAC;QACnD,EAAE,OAAOM,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;MACF,OAAO;QACLF,OAAO,CAAC6B,IAAI,CAAC,gCAAgC,CAAC;MAChD;IACF;EAKF,CAAC;EAED;EACA,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}