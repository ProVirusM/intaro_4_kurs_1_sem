{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"homepage\"\n};\nconst _hoisted_2 = {\n  class: \"columns\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_draggable = _resolveComponent(\"draggable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/add')),\n    class: \"new-resume-btn\"\n  }, \"Новое резюме\"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.columns, column => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: column.status,\n      class: \"column\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(column.label) + \" (\" + _toDisplayString($options.resumesByStatusMap[column.status]?.length || 0) + \")\", 1 /* TEXT */), $options.resumesByStatusMap[column.status] && $options.resumesByStatusMap[column.status].length > 0 ? (_openBlock(), _createBlock(_component_draggable, {\n      modelValue: $options.resumesByStatusMap[column.status],\n      \"onUpdate:modelValue\": $event => $options.resumesByStatusMap[column.status] = $event,\n      onChange: $options.onDragEnd,\n      group: \"resumes\",\n      key: column.status\n    }, {\n      item: _withCtx(({\n        element\n      }) => [(_openBlock(), _createElementBlock(\"div\", {\n        key: element._id,\n        class: \"resume-card\",\n        onClick: $event => _ctx.$router.push(`/edit/${element._id}`)\n      }, [_createElementVNode(\"img\", {\n        src: element.photo,\n        alt: \"Фото\"\n      }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(element.profession), 1 /* TEXT */)]), _createElementVNode(\"p\", null, _toDisplayString(element.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($options.getAge(element.birthday)) + \" лет\", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_3))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","$event","_ctx","$router","push","_hoisted_2","_Fragment","_renderList","$data","columns","column","key","status","_toDisplayString","label","$options","resumesByStatusMap","length","_createBlock","_component_draggable","modelValue","onChange","onDragEnd","group","item","_withCtx","element","_id","src","photo","alt","_hoisted_4","profession","name","getAge","birthday","_hoisted_3","_","_createCommentVNode"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"homepage\">\r\n    <button @click=\"$router.push('/add')\" class=\"new-resume-btn\">Новое резюме</button>\r\n\r\n    <div class=\"columns\">\r\n      <div v-for=\"column in columns\" :key=\"column.status\" class=\"column\">\r\n        <h3>{{ column.label }} ({{ resumesByStatusMap[column.status]?.length || 0 }})</h3>\r\n\r\n        <draggable\r\n            v-if=\"resumesByStatusMap[column.status] && resumesByStatusMap[column.status].length > 0\"\r\n            v-model=\"resumesByStatusMap[column.status]\"\r\n            @change=\"onDragEnd\"\r\n            group=\"resumes\"\r\n            :key=\"column.status\"\r\n        >\r\n          <!-- Используем slot \"item\" для каждого элемента -->\r\n          <template #item=\"{ element }\">\r\n            <div\r\n                :key=\"element._id\"\r\n                class=\"resume-card\"\r\n                @click=\"$router.push(`/edit/${element._id}`)\"\r\n            >\r\n              <img :src=\"element.photo\" alt=\"Фото\" />\r\n              <p><strong>{{ element.profession }}</strong></p>\r\n              <p>{{ element.name }}</p>\r\n              <p>{{ getAge(element.birthday) }} лет</p>\r\n            </div>\r\n          </template>\r\n        </draggable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\nimport draggable from 'vuedraggable';\r\n\r\nexport default {\r\n  components: { draggable },\r\n  name: \"HomePage\",\r\n  data() {\r\n    return {\r\n      columns: [\r\n        { status: 'Новый', label: 'Новый' },\r\n        { status: 'Назначено собеседование', label: 'Назначено собеседование' },\r\n        { status: 'Принят', label: 'Принят' },\r\n        { status: 'Отказ', label: 'Отказ' },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['resumesByStatus']), // Получаем резюме из Vuex\r\n\r\n    resumesByStatusMap() {\r\n      // Группируем резюме по статусам\r\n      const map = {\r\n        'Новый': [],\r\n        'Назначено собеседование': [],\r\n        'Принят': [],\r\n        'Отказ': [],\r\n      };\r\n\r\n      this.resumesByStatus.forEach((resume) => {\r\n        if (map[resume.status]) {\r\n          map[resume.status].push(resume);\r\n        }\r\n      });\r\n\r\n      return map;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchResumes', 'updateResumeStatus']), // Подключаем Vuex действия\r\n\r\n    getAge(birthday) {\r\n      const birthDate = new Date(birthday);\r\n      const ageDifMs = Date.now() - birthDate.getTime();\r\n      const ageDate = new Date(ageDifMs);\r\n      return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    },\r\n\r\n    async onDragEnd(event) {\r\n      const { element, to } = event;\r\n      const newStatus = this.columns.find((col) => col.status === to.dataset.status).status;\r\n      await this.updateResumeStatus({ id: element._id, status: newStatus });\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchResumes(); // Загрузка резюме при создании компонента\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для колонок и карточек */\r\n.new-resume-btn {\r\n  padding: 10px 20px;\r\n  background-color: #007acc;\r\n  color: white;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.new-resume-btn:hover {\r\n  background-color: #005f99;\r\n}\r\n\r\n.columns {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.column {\r\n  width: 22%;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh3 {\r\n  font-size: 1.2em;\r\n  color: #007acc;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.resume-card {\r\n  background-color: #f9f9f9;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.resume-card img {\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.resume-card p {\r\n  margin: 5px 0;\r\n}\r\n\r\n.column h3 {\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;;EAGdA,KAAK,EAAC;AAAS;mBAJxB;mBAAA;;;uBACEC,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJC,mBAAA,CAAkF;IAAzEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;IAAUT,KAAK,EAAC;KAAiB,cAAY,GAEzEG,mBAAA,CA0BM,OA1BNO,UA0BM,I,kBAzBJT,mBAAA,CAwBMU,SAAA,QA7BZC,WAAA,CAK4BC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAlBd,mBAAA,CAwBM;MAxB0Be,GAAG,EAAED,MAAM,CAACE,MAAM;MAAEjB,KAAK,EAAC;QACxDG,mBAAA,CAAkF,YAAAe,gBAAA,CAA3EH,MAAM,CAACI,KAAK,IAAG,IAAE,GAAAD,gBAAA,CAAGE,QAAA,CAAAC,kBAAkB,CAACN,MAAM,CAACE,MAAM,GAAGK,MAAM,SAAQ,GAAC,iBAGnEF,QAAA,CAAAC,kBAAkB,CAACN,MAAM,CAACE,MAAM,KAAKG,QAAA,CAAAC,kBAAkB,CAACN,MAAM,CAACE,MAAM,EAAEK,MAAM,Q,cADvFC,YAAA,CAoBYC,oBAAA;MA5BpBC,UAAA,EAUqBL,QAAA,CAAAC,kBAAkB,CAACN,MAAM,CAACE,MAAM;MAVrD,uBAAAX,MAAA,IAUqBc,QAAA,CAAAC,kBAAkB,CAACN,MAAM,CAACE,MAAM,IAAAX,MAAA;MACxCoB,QAAM,EAAEN,QAAA,CAAAO,SAAS;MAClBC,KAAK,EAAC,SAAS;MACdZ,GAAG,EAAED,MAAM,CAACE;;MAGJY,IAAI,EAAAC,QAAA,CACb,CASM;QAVWC;MAAO,Q,cACxB9B,mBAAA,CASM;QARDe,GAAG,EAAEe,OAAO,CAACC,GAAG;QACjBhC,KAAK,EAAC,aAAa;QAClBI,OAAK,EAAAE,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI,UAAUsB,OAAO,CAACC,GAAG;UAE3C7B,mBAAA,CAAuC;QAAjC8B,GAAG,EAAEF,OAAO,CAACG,KAAK;QAAEC,GAAG,EAAC;8BAtB5CC,UAAA,GAuBcjC,mBAAA,CAAgD,YAA7CA,mBAAA,CAAyC,gBAAAe,gBAAA,CAA9Ba,OAAO,CAACM,UAAU,iB,GAChClC,mBAAA,CAAyB,WAAAe,gBAAA,CAAnBa,OAAO,CAACO,IAAI,kBAClBnC,mBAAA,CAAyC,WAAAe,gBAAA,CAAnCE,QAAA,CAAAmB,MAAM,CAACR,OAAO,CAACS,QAAQ,KAAI,MAAI,gB,iBAzBnDC,UAAA,G;MAAAC,CAAA;8FAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}