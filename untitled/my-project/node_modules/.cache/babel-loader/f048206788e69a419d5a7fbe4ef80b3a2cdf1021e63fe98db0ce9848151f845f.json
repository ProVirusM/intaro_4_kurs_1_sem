{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edit-resume\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"Редактирование резюме\", -1 /* HOISTED */)), _createCommentVNode(\" Форма редактирования \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.saveResume && $options.saveResume(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"name\"\n  }, \"Имя\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.resume.name = $event),\n    id: \"name\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.resume.name]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"profession\"\n  }, \"Профессия\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.resume.profession = $event),\n    id: \"profession\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.resume.profession]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"birthday\"\n  }, \"Дата рождения\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.resume.birthday = $event),\n    id: \"birthday\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.resume.birthday]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"status\"\n  }, \"Статус\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.resume.status = $event),\n    id: \"status\"\n  }, _cache[8] || (_cache[8] = [_createElementVNode(\"option\", {\n    value: \"Новый\"\n  }, \"Новый\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Назначено собеседование\"\n  }, \"Назначено собеседование\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Принят\"\n  }, \"Принят\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Отказ\"\n  }, \"Отказ\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.resume.status]])]), _cache[10] || (_cache[10] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Сохранить\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","saveResume","_hoisted_2","for","type","$event","$data","resume","name","id","required","_hoisted_3","profession","_hoisted_4","birthday","_hoisted_5","status","value"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\EditResumePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-resume\">\r\n    <h2>Редактирование резюме</h2>\r\n\r\n    <!-- Форма редактирования -->\r\n    <form @submit.prevent=\"saveResume\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Имя</label>\r\n        <input type=\"text\" v-model=\"resume.name\" id=\"name\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"profession\">Профессия</label>\r\n        <input type=\"text\" v-model=\"resume.profession\" id=\"profession\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"birthday\">Дата рождения</label>\r\n        <input type=\"date\" v-model=\"resume.birthday\" id=\"birthday\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"status\">Статус</label>\r\n        <select v-model=\"resume.status\" id=\"status\">\r\n          <option value=\"Новый\">Новый</option>\r\n          <option value=\"Назначено собеседование\">Назначено собеседование</option>\r\n          <option value=\"Принят\">Принят</option>\r\n          <option value=\"Отказ\">Отказ</option>\r\n        </select>\r\n      </div>\r\n\r\n      <button type=\"submit\">Сохранить</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  name: 'EditResume',\r\n  data() {\r\n    return {\r\n      resume: {\r\n        _id: '',\r\n        name: '',\r\n        profession: '',\r\n        birthday: '',\r\n        status: ''\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['resumesByStatus']), // Получаем резюме из Vuex\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchResume', 'updateResumeStatus']), // Подключаем действия Vuex\r\n\r\n    // Загружаем резюме по id, когда компонент создан\r\n    async loadResume() {\r\n      const resumeId = this.$route.params.id; // Получаем id из маршрута\r\n      const resume = this.resumesByStatus.find(res => res._id === resumeId);\r\n\r\n      if (resume) {\r\n        this.resume = { ...resume }; // Заполняем поля формы\r\n      } else {\r\n        console.error('Резюме не найдено');\r\n      }\r\n    },\r\n\r\n    // Обрабатываем сохранение изменений\r\n    async saveResume() {\r\n      try {\r\n        // Отправляем запрос на сервер для обновления резюме\r\n        await this.updateResumeStatus({\r\n          id: this.resume._id,\r\n          status: this.resume.status\r\n        });\r\n        console.log('Резюме обновлено!');\r\n        this.$router.push('/'); // После сохранения перенаправляем на главную страницу\r\n      } catch (error) {\r\n        console.error('Ошибка при сохранении резюме:', error);\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    await this.loadResume(); // Загружаем данные резюме при создании компонента\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для формы редактирования */\r\n.edit-resume {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-weight: bold;\r\n}\r\n\r\n.form-group input,\r\n.form-group select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 5px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #007acc;\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #005f99;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAKfA,KAAK,EAAC;AAAY;;EAKlBA,KAAK,EAAC;AAAY;;EAKlBA,KAAK,EAAC;AAAY;;EAKlBA,KAAK,EAAC;AAAY;;uBApB3BC,mBAAA,CAgCM,OAhCNC,UAgCM,G,4BA/BJC,mBAAA,CAA8B,YAA1B,uBAAqB,sBAEzBC,mBAAA,0BAA6B,EAC7BD,mBAAA,CA2BO;IA3BAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALjBC,cAAA,KAAAC,IAAA,KAK2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BL,mBAAA,CAGM,OAHNQ,UAGM,G,0BAFJR,mBAAA,CAA6B;IAAtBS,GAAG,EAAC;EAAM,GAAC,KAAG,sB,gBACrBT,mBAAA,CAA8D;IAAvDU,IAAI,EAAC,MAAM;IAR1B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAQoCC,KAAA,CAAAC,MAAM,CAACC,IAAI,GAAAH,MAAA;IAAEI,EAAE,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAvBJ,KAAA,CAAAC,MAAM,CAACC,IAAI,E,KAGzCd,mBAAA,CAGM,OAHNiB,UAGM,G,0BAFJjB,mBAAA,CAAyC;IAAlCS,GAAG,EAAC;EAAY,GAAC,WAAS,sB,gBACjCT,mBAAA,CAA0E;IAAnEU,IAAI,EAAC,MAAM;IAb1B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAaoCC,KAAA,CAAAC,MAAM,CAACK,UAAU,GAAAP,MAAA;IAAEI,EAAE,EAAC,YAAY;IAACC,QAAQ,EAAR;iDAAnCJ,KAAA,CAAAC,MAAM,CAACK,UAAU,E,KAG/ClB,mBAAA,CAGM,OAHNmB,UAGM,G,0BAFJnB,mBAAA,CAA2C;IAApCS,GAAG,EAAC;EAAU,GAAC,eAAa,sB,gBACnCT,mBAAA,CAAsE;IAA/DU,IAAI,EAAC,MAAM;IAlB1B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAkBoCC,KAAA,CAAAC,MAAM,CAACO,QAAQ,GAAAT,MAAA;IAAEI,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA/BJ,KAAA,CAAAC,MAAM,CAACO,QAAQ,E,KAG7CpB,mBAAA,CAQM,OARNqB,UAQM,G,0BAPJrB,mBAAA,CAAkC;IAA3BS,GAAG,EAAC;EAAQ,GAAC,QAAM,sB,gBAC1BT,mBAAA,CAKS;IA5BjB,uBAAAG,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAuByBC,KAAA,CAAAC,MAAM,CAACS,MAAM,GAAAX,MAAA;IAAEI,EAAE,EAAC;gCACjCf,mBAAA,CAAoC;IAA5BuB,KAAK,EAAC;EAAO,GAAC,OAAK,qBAC3BvB,mBAAA,CAAwE;IAAhEuB,KAAK,EAAC;EAAyB,GAAC,yBAAuB,qBAC/DvB,mBAAA,CAAsC;IAA9BuB,KAAK,EAAC;EAAQ,GAAC,QAAM,qBAC7BvB,mBAAA,CAAoC;IAA5BuB,KAAK,EAAC;EAAO,GAAC,OAAK,oB,2CAJZX,KAAA,CAAAC,MAAM,CAACS,MAAM,E,iCAQhCtB,mBAAA,CAAwC;IAAhCU,IAAI,EAAC;EAAQ,GAAC,WAAS,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}