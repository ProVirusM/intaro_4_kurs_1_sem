{"ast":null,"code":"import { ref, watch, computed, onMounted, onBeforeUnmount } from 'vue';\nexport default {\n  props: {\n    modelValue: String,\n    educationVars: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  setup(props) {\n    const SelectedEducationVars = ref(null);\n    const educationValue = ref(props.modelValue);\n    const educationalInstitutionValue = ref(props.modelValue);\n    const facultyValue = ref(props.modelValue);\n    const specializationValue = ref(props.modelValue);\n    const yearOfGraduationValue = ref(props.modelValue);\n    const isDropDownVisible = ref(false);\n    const dropDown = ref(null);\n    const toggleSelectedEducationVars = educationVar => {\n      SelectedEducationVars.value = educationVar;\n      isDropDownVisible.value = false;\n      educationValue.value = educationVar;\n      // emit('update:modelValue', SelectedEducationVars);\n    };\n    const mappedSelectedEducationVars = computed(() => {\n      return SelectedEducationVars.value?.name || SelectedEducationVars.value || 'Выбери';\n    });\n    watch(() => props.modelValue, newVal => {\n      educationValue.value = newVal;\n    });\n    const closeDropDown = element => {\n      if (!dropDown.value.contains(element.target)) {\n        isDropDownVisible.value = false;\n      }\n    };\n    onMounted(() => {\n      window.addEventListener('click', closeDropDown);\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('click', closeDropDown);\n    });\n    return {\n      yearOfGraduationValue,\n      specializationValue,\n      facultyValue,\n      educationalInstitutionValue,\n      educationValue,\n      SelectedEducationVars,\n      toggleSelectedEducationVars,\n      mappedSelectedEducationVars,\n      isDropDownVisible,\n      dropDown\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","computed","onMounted","onBeforeUnmount","props","modelValue","String","educationVars","type","Array","default","setup","SelectedEducationVars","educationValue","educationalInstitutionValue","facultyValue","specializationValue","yearOfGraduationValue","isDropDownVisible","dropDown","toggleSelectedEducationVars","educationVar","value","mappedSelectedEducationVars","name","newVal","closeDropDown","element","contains","target","window","addEventListener","removeEventListener"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\EducationInput.vue"],"sourcesContent":["<template>\r\n  <div ref=\"dropDown\">\r\n    <label>Образование:</label>\r\n<!--    <input type=\"text\" v-model=\"educationValue\" @input=\"$emit('update:modelValue', educationValue)\" />-->\r\n    <div @click=\"isDropDownVisible=true\">\r\n      {{mappedSelectedEducationVars}}\r\n    </div>\r\n    <div v-if=\"isDropDownVisible\">\r\n      <p v-for=\"(educationVar, index) in educationVars\" :key=\"index\" @click=\"toggleSelectedEducationVars(educationVar)\">\r\n        {{ educationVar.name || educationVar }}\r\n      </p>\r\n    </div>\r\n<!--    v-show=\"!SelectedEducationVars\"-->\r\n    <div v-show=\"SelectedEducationVars!==null && SelectedEducationVars.name!=='Среднее'\">\r\n      <label>Учебное заведение:</label>\r\n      <input type=\"text\" v-model=\"educationalInstitutionValue\" @input=\"$emit('update:modelValue', educationalInstitutionValue)\" />\r\n      <label>Факультет:</label>\r\n      <input type=\"text\" v-model=\"facultyValue\" @input=\"$emit('update:modelValue', facultyValue)\" />\r\n      <label>Специализация:</label>\r\n      <input type=\"text\" v-model=\"specializationValue\" @input=\"$emit('update:modelValue', specializationValue)\" />\r\n      <label>Год окончания:</label>\r\n      <input type=\"text\" v-model=\"yearOfGraduationValue\" @input=\"$emit('update:modelValue', yearOfGraduationValue)\" />\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, computed, onMounted, onBeforeUnmount} from 'vue'\r\n\r\nexport default {\r\n  props: {\r\n    modelValue: String,\r\n    educationVars: {\r\n      type: Array,\r\n      default(){\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  setup(props) {\r\n    const SelectedEducationVars=ref(null)\r\n    const educationValue = ref(props.modelValue)\r\n    const educationalInstitutionValue = ref(props.modelValue)\r\n    const facultyValue = ref(props.modelValue)\r\n    const specializationValue = ref(props.modelValue)\r\n    const yearOfGraduationValue = ref(props.modelValue)\r\n    const isDropDownVisible=ref(false)\r\n    const dropDown=ref(null)\r\n    const toggleSelectedEducationVars = (educationVar) => {\r\n      SelectedEducationVars.value=educationVar;\r\n      isDropDownVisible.value=false;\r\n      educationValue.value=educationVar\r\n      // emit('update:modelValue', SelectedEducationVars);\r\n    }\r\n    const mappedSelectedEducationVars = computed(() => {\r\n      return SelectedEducationVars.value?.name || SelectedEducationVars.value || 'Выбери';\r\n    })\r\n    watch(() => props.modelValue, (newVal) => {\r\n      educationValue.value = newVal\r\n    })\r\n    const closeDropDown=(element)=>{\r\n\r\n      if(!dropDown.value.contains(element.target)){\r\n        isDropDownVisible.value=false;\r\n      }\r\n    }\r\n    onMounted(()=>{\r\n      window.addEventListener('click', closeDropDown)\r\n    })\r\n    onBeforeUnmount(()=>{\r\n      window.removeEventListener('click', closeDropDown)\r\n    })\r\n    return { yearOfGraduationValue, specializationValue, facultyValue, educationalInstitutionValue, educationValue, SelectedEducationVars, toggleSelectedEducationVars,  mappedSelectedEducationVars, isDropDownVisible, dropDown}\r\n  }\r\n}\r\n</script>"],"mappings":"AA4BA,SAASA,GAAG,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,QAAO,KAAI;AAEpE,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAEC,MAAM;IAClBC,aAAa,EAAE;MACbC,IAAI,EAAEC,KAAK;MACXC,OAAOA,CAAA,EAAE;QACP,OAAO,EAAC;MACV;IACF;EACF,CAAC;EACDC,KAAKA,CAACP,KAAK,EAAE;IACX,MAAMQ,qBAAqB,GAACb,GAAG,CAAC,IAAI;IACpC,MAAMc,cAAa,GAAId,GAAG,CAACK,KAAK,CAACC,UAAU;IAC3C,MAAMS,2BAA0B,GAAIf,GAAG,CAACK,KAAK,CAACC,UAAU;IACxD,MAAMU,YAAW,GAAIhB,GAAG,CAACK,KAAK,CAACC,UAAU;IACzC,MAAMW,mBAAkB,GAAIjB,GAAG,CAACK,KAAK,CAACC,UAAU;IAChD,MAAMY,qBAAoB,GAAIlB,GAAG,CAACK,KAAK,CAACC,UAAU;IAClD,MAAMa,iBAAiB,GAACnB,GAAG,CAAC,KAAK;IACjC,MAAMoB,QAAQ,GAACpB,GAAG,CAAC,IAAI;IACvB,MAAMqB,2BAA0B,GAAKC,YAAY,IAAK;MACpDT,qBAAqB,CAACU,KAAK,GAACD,YAAY;MACxCH,iBAAiB,CAACI,KAAK,GAAC,KAAK;MAC7BT,cAAc,CAACS,KAAK,GAACD,YAAW;MAChC;IACF;IACA,MAAME,2BAA0B,GAAItB,QAAQ,CAAC,MAAM;MACjD,OAAOW,qBAAqB,CAACU,KAAK,EAAEE,IAAG,IAAKZ,qBAAqB,CAACU,KAAI,IAAK,QAAQ;IACrF,CAAC;IACDtB,KAAK,CAAC,MAAMI,KAAK,CAACC,UAAU,EAAGoB,MAAM,IAAK;MACxCZ,cAAc,CAACS,KAAI,GAAIG,MAAK;IAC9B,CAAC;IACD,MAAMC,aAAa,GAAEC,OAAO,IAAG;MAE7B,IAAG,CAACR,QAAQ,CAACG,KAAK,CAACM,QAAQ,CAACD,OAAO,CAACE,MAAM,CAAC,EAAC;QAC1CX,iBAAiB,CAACI,KAAK,GAAC,KAAK;MAC/B;IACF;IACApB,SAAS,CAAC,MAAI;MACZ4B,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEL,aAAa;IAChD,CAAC;IACDvB,eAAe,CAAC,MAAI;MAClB2B,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEN,aAAa;IACnD,CAAC;IACD,OAAO;MAAET,qBAAqB;MAAED,mBAAmB;MAAED,YAAY;MAAED,2BAA2B;MAAED,cAAc;MAAED,qBAAqB;MAAEQ,2BAA2B;MAAGG,2BAA2B;MAAEL,iBAAiB;MAAEC;IAAQ;EAC/N;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}