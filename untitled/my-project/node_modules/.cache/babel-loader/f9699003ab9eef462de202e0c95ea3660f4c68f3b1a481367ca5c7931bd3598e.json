{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, watch, onMounted } from 'vue';\nexport default {\n  props: {\n    modelValue: Object,\n    // Объект с данными об образовании\n    educationInfo: {\n      type: Array,\n      default: () => [] // Убедимся, что по умолчанию это пустой массив\n    },\n    index: Number // Индекс этого образования в списке\n  },\n  setup(props, {\n    emit\n  }) {\n    // Инициализация образования\n    const education = ref({\n      ...props.modelValue\n    });\n\n    // Уровень образования\n    const selectedEducationLevel = ref(education.value.level || 'Среднее');\n\n    // Кнопка для удаления образования\n    const canRemove = ref(props.educationInfo && props.educationInfo.length > 1); // Проверяем, что educationInfo существует и имеет длину\n\n    // Следим за изменениями в количестве образований, чтобы управлять кнопкой удаления\n    watch(() => props.educationInfo.length, newLength => {\n      canRemove.value = newLength > 1;\n    });\n\n    // Синхронизация изменений образования с родительским компонентом\n    watch(education, () => {\n      emit('update:modelValue', education.value);\n    }, {\n      deep: true\n    });\n\n    // Следим за изменением уровня образования и синхронизируем с объектом образования\n    watch(selectedEducationLevel, newLevel => {\n      education.value.level = newLevel; // Обновляем уровень образования\n    });\n\n    // Удаление образования\n    const removeEducation = () => {\n      emit('remove', props.index);\n    };\n\n    // Инициализация данных при монтировании компонента\n    onMounted(() => {\n      if (props.modelValue) {\n        education.value = {\n          ...props.modelValue\n        };\n        selectedEducationLevel.value = props.modelValue.level || 'Среднее';\n      }\n    });\n\n    // Университеты, найденные через VK API\n    const universities = ref([]);\n\n    // Функция для поиска университетов через VK API\n    const searchUniversities = async () => {\n      if (education.value.institution.trim() === '') {\n        universities.value = [];\n        return;\n      }\n      const params = new URLSearchParams({\n        q: education.value.institution,\n        v: '5.131',\n        count: 10\n      });\n      try {\n        const response = await fetch(`https://api.vk.com/method/database.getUniversities?${params.toString()}&access_token=95d4a79995d4a79995d4a799df96cb3f6e995d495d4a799f329b17073154c54fe52893a`);\n        const data = await response.json();\n        if (data.response && data.response.items) {\n          universities.value = data.response.items;\n        }\n      } catch (error) {\n        console.error('Error fetching universities:', error);\n      }\n    };\n\n    // Функция для выбора университета\n    const selectUniversity = university => {\n      education.value.institution = university.title;\n      universities.value = [];\n    };\n    return {\n      selectedEducationLevel,\n      education,\n      removeEducation,\n      canRemove,\n      searchUniversities,\n      universities,\n      selectUniversity\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","props","modelValue","Object","educationInfo","type","Array","default","index","Number","setup","emit","education","selectedEducationLevel","value","level","canRemove","length","newLength","deep","newLevel","removeEducation","universities","searchUniversities","institution","trim","params","URLSearchParams","q","v","count","response","fetch","toString","data","json","items","error","console","selectUniversity","university","title"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\EducationInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"education-input\">\r\n    <label for=\"education-level\">Уровень образования:</label>\r\n    <select v-model=\"selectedEducationLevel\" id=\"education-level\">\r\n      <option value=\"Среднее\">Среднее</option>\r\n      <option value=\"Среднее специальное\">Среднее специальное</option>\r\n      <option value=\"Неоконченное высшее\">Неоконченное высшее</option>\r\n      <option value=\"Высшее\">Высшее</option>\r\n    </select>\r\n\r\n    <div v-if=\"selectedEducationLevel !== 'Среднее'\">\r\n      <div class=\"education-fields\">\r\n        <label for=\"institution\">Учебное заведение:</label>\r\n        <input\r\n            v-model=\"education.institution\"\r\n            id=\"institution\"\r\n            type=\"text\"\r\n            placeholder=\"Введите учебное заведение\"\r\n            @input=\"searchUniversities\"\r\n        />\r\n        <ul v-if=\"universities.length > 0\" class=\"autocomplete-list\">\r\n          <li\r\n              v-for=\"(university, index) in universities\"\r\n              :key=\"index\"\r\n              @click=\"selectUniversity(university)\"\r\n          >\r\n            {{ university.title }}\r\n          </li>\r\n        </ul>\r\n\r\n        <label for=\"faculty\">Факультет:</label>\r\n        <input v-model=\"education.faculty\" id=\"faculty\" type=\"text\" placeholder=\"Введите факультет\" />\r\n\r\n        <label for=\"specialization\">Специализация:</label>\r\n        <input v-model=\"education.specialization\" id=\"specialization\" type=\"text\" placeholder=\"Введите специализацию\" />\r\n\r\n        <label for=\"yearOfGraduation\">Год окончания:</label>\r\n        <input v-model=\"education.yearOfGraduation\" id=\"yearOfGraduation\" type=\"date\" placeholder=\"Выберите год окончания\" />\r\n      </div>\r\n    </div>\r\n\r\n    <button v-if=\"canRemove\" @click=\"removeEducation\" class=\"remove-education-btn\">×</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, onMounted } from 'vue';\r\n\r\nexport default {\r\n  props: {\r\n    modelValue: Object, // Объект с данными об образовании\r\n    educationInfo: {\r\n      type: Array,\r\n      default: () => []  // Убедимся, что по умолчанию это пустой массив\r\n    },\r\n    index: Number, // Индекс этого образования в списке\r\n  },\r\n  setup(props, { emit }) {\r\n    // Инициализация образования\r\n    const education = ref({ ...props.modelValue });\r\n\r\n    // Уровень образования\r\n    const selectedEducationLevel = ref(education.value.level || 'Среднее');\r\n\r\n    // Кнопка для удаления образования\r\n    const canRemove = ref(props.educationInfo && props.educationInfo.length > 1); // Проверяем, что educationInfo существует и имеет длину\r\n\r\n    // Следим за изменениями в количестве образований, чтобы управлять кнопкой удаления\r\n    watch(() => props.educationInfo.length, (newLength) => {\r\n      canRemove.value = newLength > 1;\r\n    });\r\n\r\n    // Синхронизация изменений образования с родительским компонентом\r\n    watch(education, () => {\r\n      emit('update:modelValue', education.value);\r\n    }, { deep: true });\r\n\r\n    // Следим за изменением уровня образования и синхронизируем с объектом образования\r\n    watch(selectedEducationLevel, (newLevel) => {\r\n      education.value.level = newLevel; // Обновляем уровень образования\r\n    });\r\n\r\n    // Удаление образования\r\n    const removeEducation = () => {\r\n      emit('remove', props.index);\r\n    };\r\n\r\n    // Инициализация данных при монтировании компонента\r\n    onMounted(() => {\r\n      if (props.modelValue) {\r\n        education.value = { ...props.modelValue };\r\n        selectedEducationLevel.value = props.modelValue.level || 'Среднее';\r\n      }\r\n    });\r\n\r\n    // Университеты, найденные через VK API\r\n    const universities = ref([]);\r\n\r\n    // Функция для поиска университетов через VK API\r\n    const searchUniversities = async () => {\r\n      if (education.value.institution.trim() === '') {\r\n        universities.value = [];\r\n        return;\r\n      }\r\n\r\n      const params = new URLSearchParams({\r\n        q: education.value.institution,\r\n        v: '5.131',\r\n        count: 10\r\n      });\r\n\r\n      try {\r\n        const response = await fetch(`https://api.vk.com/method/database.getUniversities?${params.toString()}&access_token=95d4a79995d4a79995d4a799df96cb3f6e995d495d4a799f329b17073154c54fe52893a`);\r\n        const data = await response.json();\r\n\r\n        if (data.response && data.response.items) {\r\n          universities.value = data.response.items;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching universities:', error);\r\n      }\r\n    };\r\n\r\n    // Функция для выбора университета\r\n    const selectUniversity = (university) => {\r\n      education.value.institution = university.title;\r\n      universities.value = [];\r\n    };\r\n\r\n    return {\r\n      selectedEducationLevel,\r\n      education,\r\n      removeEducation,\r\n      canRemove,\r\n      searchUniversities,\r\n      universities,\r\n      selectUniversity\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nselect {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 1em;\r\n}\r\n.education-input {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.education-fields {\r\n  margin-top: 10px;\r\n}\r\n\r\n.education-fields input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin: 5px 0;\r\n}\r\n\r\n.remove-education-btn {\r\n  margin-top: 10px;\r\n  padding: 8px;\r\n  background-color: #ff4d4d;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  line-height: 1;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.remove-education-btn:hover {\r\n  background-color: #d13636;\r\n}\r\n\r\n.autocomplete-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  max-height: 150px;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  background-color: #fff;\r\n  position: absolute;\r\n  width: 100%;\r\n  z-index: 100;\r\n}\r\n\r\n.autocomplete-list li {\r\n  padding: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.autocomplete-list li:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}