{"ast":null,"code":"import { mapActions, mapGetters } from 'vuex';\nimport draggable from 'vuedraggable';\nexport default {\n  components: {\n    draggable\n  },\n  data() {\n    return {\n      resumesByStatusMap: this.getResumesByStatusMap(),\n      columns: [{\n        status: 'Новый',\n        label: 'Новый'\n      }, {\n        status: 'Назначено собеседование',\n        label: 'Назначено собеседование'\n      }, {\n        status: 'Принят',\n        label: 'Принят'\n      }, {\n        status: 'Отказ',\n        label: 'Отказ'\n      }]\n    };\n  },\n  computed: {\n    ...mapGetters(['resumesByStatus'])\n  },\n  methods: {\n    ...mapActions(['fetchResumes', 'updateResumeStatus']),\n    getAge(birthday) {\n      const birthDate = new Date(birthday);\n      const ageDifMs = Date.now() - birthDate.getTime();\n      const ageDate = new Date(ageDifMs);\n      return Math.abs(ageDate.getUTCFullYear() - 1970);\n    },\n    async onDragEnd(event) {\n      const {\n        element,\n        to\n      } = event;\n      const newStatus = this.columns.find(col => col.status === to.dataset.status).status;\n      await this.updateResumeStatus({\n        id: element._id,\n        status: newStatus\n      });\n    }\n  },\n  async created() {\n    await this.fetchResumes();\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","draggable","components","data","resumesByStatusMap","getResumesByStatusMap","columns","status","label","computed","methods","getAge","birthday","birthDate","Date","ageDifMs","now","getTime","ageDate","Math","abs","getUTCFullYear","onDragEnd","event","element","to","newStatus","find","col","dataset","updateResumeStatus","id","_id","created","fetchResumes"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"homepage\">\r\n    <button @click=\"$router.push('/add')\" class=\"new-resume-btn\">Новое резюме</button>\r\n\r\n    <div class=\"columns\">\r\n      <div v-for=\"column in columns\" :key=\"column.status\" class=\"column\">\r\n        <h3>{{ column.label }} ({{ resumesByStatus(column.status).length }})</h3>\r\n        <draggable\r\n            v-model=\"resumesByStatusMap[columnStatus]\"\r\n            @change=\"onDragEnd\"\r\n            group=\"resumes\"\r\n        >\r\n          <div\r\n              v-for=\"resume in resumesByStatus(column.status)\"\r\n              :key=\"resume._id\"\r\n              class=\"resume-card\"\r\n              @click=\"$router.push(`/edit/${resume._id}`)\"\r\n          >\r\n            <img :src=\"resume.photo\" alt=\"Фото\" />\r\n            <p><strong>{{ resume.profession }}</strong></p>\r\n            <p>{{ resume.name }}</p>\r\n            <p>{{ getAge(resume.birthday) }} лет</p>\r\n          </div>\r\n        </draggable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\nimport draggable from 'vuedraggable';\r\n\r\nexport default {\r\n  components: { draggable },\r\n  data() {\r\n    return {\r\n      resumesByStatusMap: this.getResumesByStatusMap(),\r\n      columns: [\r\n        { status: 'Новый', label: 'Новый' },\r\n        { status: 'Назначено собеседование', label: 'Назначено собеседование' },\r\n        { status: 'Принят', label: 'Принят' },\r\n        { status: 'Отказ', label: 'Отказ' },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['resumesByStatus']),\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchResumes', 'updateResumeStatus']),\r\n    getAge(birthday) {\r\n      const birthDate = new Date(birthday);\r\n      const ageDifMs = Date.now() - birthDate.getTime();\r\n      const ageDate = new Date(ageDifMs);\r\n      return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    },\r\n    async onDragEnd(event) {\r\n      const { element, to } = event;\r\n      const newStatus = this.columns.find((col) => col.status === to.dataset.status).status;\r\n      await this.updateResumeStatus({ id: element._id, status: newStatus });\r\n    },\r\n  },\r\n  async created() {\r\n    await this.fetchResumes();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Добавьте стили для колонок и карточек */\r\n</style>\r\n"],"mappings":"AA8BA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,OAAOC,SAAQ,MAAO,cAAc;AAEpC,eAAe;EACbC,UAAU,EAAE;IAAED;EAAU,CAAC;EACzBE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,kBAAkB,EAAE,IAAI,CAACC,qBAAqB,CAAC,CAAC;MAChDC,OAAO,EAAE,CACP;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC,EACnC;QAAED,MAAM,EAAE,yBAAyB;QAAEC,KAAK,EAAE;MAA0B,CAAC,EACvE;QAAED,MAAM,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EACrC;QAAED,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC;IAEvC,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGT,UAAU,CAAC,CAAC,iBAAiB,CAAC;EACnC,CAAC;EACDU,OAAO,EAAE;IACP,GAAGX,UAAU,CAAC,CAAC,cAAc,EAAE,oBAAoB,CAAC,CAAC;IACrDY,MAAMA,CAACC,QAAQ,EAAE;MACf,MAAMC,SAAQ,GAAI,IAAIC,IAAI,CAACF,QAAQ,CAAC;MACpC,MAAMG,QAAO,GAAID,IAAI,CAACE,GAAG,CAAC,IAAIH,SAAS,CAACI,OAAO,CAAC,CAAC;MACjD,MAAMC,OAAM,GAAI,IAAIJ,IAAI,CAACC,QAAQ,CAAC;MAClC,OAAOI,IAAI,CAACC,GAAG,CAACF,OAAO,CAACG,cAAc,CAAC,IAAI,IAAI,CAAC;IAClD,CAAC;IACD,MAAMC,SAASA,CAACC,KAAK,EAAE;MACrB,MAAM;QAAEC,OAAO;QAAEC;MAAG,IAAIF,KAAK;MAC7B,MAAMG,SAAQ,GAAI,IAAI,CAACpB,OAAO,CAACqB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACrB,MAAK,KAAMkB,EAAE,CAACI,OAAO,CAACtB,MAAM,CAAC,CAACA,MAAM;MACrF,MAAM,IAAI,CAACuB,kBAAkB,CAAC;QAAEC,EAAE,EAAEP,OAAO,CAACQ,GAAG;QAAEzB,MAAM,EAAEmB;MAAU,CAAC,CAAC;IACvE;EACF,CAAC;EACD,MAAMO,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}