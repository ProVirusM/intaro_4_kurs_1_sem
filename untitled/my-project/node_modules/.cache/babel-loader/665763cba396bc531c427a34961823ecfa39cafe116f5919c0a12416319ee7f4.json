{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, vModelText as _vModelText, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"education-input\"\n};\nconst _hoisted_2 = {\n  class: \"dropdown\",\n  ref: \"dropDown\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"education-fields\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"education-dropdown\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.toggleDropDown && _ctx.toggleDropDown(...args))\n  }, [_createElementVNode(\"p\", null, _toDisplayString($setup.mappedSelectedEducationVars), 1 /* TEXT */), _withDirectives(_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.educationVars, (educationVar, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      onClick: $event => $setup.toggleSelectedEducationVars(educationVar)\n    }, _toDisplayString(educationVar.name), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vShow, $setup.isDropDownVisible]])]), $setup.SelectedEducationVars?.name && $setup.SelectedEducationVars.name !== 'Среднее' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"institution\"\n  }, \"Учебное заведение:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.educationData.institution = $event),\n    type: \"text\",\n    id: \"institution\",\n    placeholder: \"Укажите учебное заведение\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.educationData.institution]]), _cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"faculty\"\n  }, \"Факультет:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.educationData.faculty = $event),\n    type: \"text\",\n    id: \"faculty\",\n    placeholder: \"Укажите факультет\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.educationData.faculty]]), _cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"specialization\"\n  }, \"Специализация:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.educationData.specialization = $event),\n    type: \"text\",\n    id: \"specialization\",\n    placeholder: \"Укажите специализацию\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.educationData.specialization]]), _cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"yearOfGraduation\"\n  }, \"Год окончания:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.educationData.yearOfGraduation = $event),\n    type: \"text\",\n    id: \"yearOfGraduation\",\n    placeholder: \"Укажите год окончания\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.educationData.yearOfGraduation]])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","_ctx","toggleDropDown","_toDisplayString","$setup","mappedSelectedEducationVars","_hoisted_2","_Fragment","_renderList","$props","educationVars","educationVar","index","$event","toggleSelectedEducationVars","name","_hoisted_3","isDropDownVisible","SelectedEducationVars","_hoisted_4","for","educationData","institution","type","id","placeholder","faculty","specialization","yearOfGraduation","_createCommentVNode"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\EducationInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"education-input\">\r\n    <div class=\"education-dropdown\" @click=\"toggleDropDown\">\r\n      <p>{{ mappedSelectedEducationVars }}</p>\r\n      <div v-show=\"isDropDownVisible\" class=\"dropdown\" ref=\"dropDown\">\r\n        <div\r\n            v-for=\"(educationVar, index) in educationVars\"\r\n            :key=\"index\"\r\n            @click=\"toggleSelectedEducationVars(educationVar)\">\r\n          {{ educationVar.name }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"SelectedEducationVars?.name && SelectedEducationVars.name !== 'Среднее'\" class=\"education-fields\">\r\n      <label for=\"institution\">Учебное заведение:</label>\r\n      <input v-model=\"educationData.institution\" type=\"text\" id=\"institution\" placeholder=\"Укажите учебное заведение\" />\r\n\r\n      <label for=\"faculty\">Факультет:</label>\r\n      <input v-model=\"educationData.faculty\" type=\"text\" id=\"faculty\" placeholder=\"Укажите факультет\" />\r\n\r\n      <label for=\"specialization\">Специализация:</label>\r\n      <input v-model=\"educationData.specialization\" type=\"text\" id=\"specialization\" placeholder=\"Укажите специализацию\" />\r\n\r\n      <label for=\"yearOfGraduation\">Год окончания:</label>\r\n      <input v-model=\"educationData.yearOfGraduation\" type=\"text\" id=\"yearOfGraduation\" placeholder=\"Укажите год окончания\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, watch } from 'vue';\r\n\r\nexport default {\r\n  props: {\r\n    modelValue: Object,\r\n    educationVars: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  setup(props, { emit }) {\r\n    const SelectedEducationVars = ref(null); // Начальное значение null\r\n    const isDropDownVisible = ref(false);\r\n    const dropDown = ref(null);\r\n    const educationData = ref({\r\n      education: '',\r\n      institution: '',\r\n      faculty: '',\r\n      specialization: '',\r\n      yearOfGraduation: '',\r\n    });\r\n\r\n    const updateModel = () => {\r\n      if (!educationData.value.institution || !educationData.value.faculty || !educationData.value.specialization || !educationData.value.yearOfGraduation) {\r\n        return; // Не обновляем модель, если есть пустые поля\r\n      }\r\n      emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });\r\n    };\r\n\r\n    const toggleSelectedEducationVars = (educationVar) => {\r\n      SelectedEducationVars.value = educationVar;\r\n      isDropDownVisible.value = false;\r\n      educationData.value.education = educationVar;\r\n\r\n      if (SelectedEducationVars.value?.name === 'Среднее') {\r\n        educationData.value.institution = '';\r\n        educationData.value.faculty = '';\r\n        educationData.value.specialization = '';\r\n        educationData.value.yearOfGraduation = '';\r\n      } else {\r\n        educationData.value.institution = null;\r\n        educationData.value.faculty = null;\r\n        educationData.value.specialization = null;\r\n        educationData.value.yearOfGraduation = null;\r\n      }\r\n\r\n      updateModel();\r\n    };\r\n\r\n    const mappedSelectedEducationVars = computed(() => {\r\n      return SelectedEducationVars.value?.name || SelectedEducationVars.value || 'Выбери';\r\n    });\r\n\r\n    const closeDropDown = (element) => {\r\n      if (dropDown.value && !dropDown.value.contains(element.target)) {\r\n        isDropDownVisible.value = false;\r\n      }\r\n    };\r\n\r\n    watch(SelectedEducationVars, (newVal) => {\r\n      if (newVal && newVal.name === 'Среднее') {\r\n        educationData.value.institution = '';\r\n        educationData.value.faculty = '';\r\n        educationData.value.specialization = '';\r\n        educationData.value.yearOfGraduation = '';\r\n      }\r\n    });\r\n\r\n    return {\r\n      closeDropDown, educationData, updateModel, SelectedEducationVars, toggleSelectedEducationVars,\r\n      mappedSelectedEducationVars, isDropDownVisible, dropDown\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--const computedEducation = computed({-->\r\n<!--get: () => SelectedEducationVars.value?.name || SelectedEducationVars.value || 'Выбери',-->\r\n<!--set: (newValue) => {-->\r\n<!--SelectedEducationVars.value = newValue;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->\r\n\r\n<!--const institution = computed({-->\r\n<!--get: () => educationData.value.institution,-->\r\n<!--set: (value) => {-->\r\n<!--educationData.value.institution = value;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->\r\n\r\n<!--const faculty = computed({-->\r\n<!--get: () => educationData.value.faculty,-->\r\n<!--set: (value) => {-->\r\n<!--educationData.value.faculty = value;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->\r\n\r\n<!--const specialization = computed({-->\r\n<!--get: () => educationData.value.specialization,-->\r\n<!--set: (value) => {-->\r\n<!--educationData.value.specialization = value;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->\r\n\r\n<!--const yearOfGraduation = computed({-->\r\n<!--get: () => educationData.value.yearOfGraduation,-->\r\n<!--set: (value) => {-->\r\n<!--educationData.value.yearOfGraduation = value;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAGQA,KAAK,EAAC,UAAU;EAACC,GAAG,EAAC;;mBAJ3D;;EAAAC,GAAA;EAcwFF,KAAK,EAAC;;;uBAb5FG,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,CAUM;IAVDL,KAAK,EAAC,oBAAoB;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,cAAA,IAAAD,IAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;MACpDH,mBAAA,CAAwC,WAAAM,gBAAA,CAAlCC,MAAA,CAAAC,2BAA2B,kB,gBACjCR,mBAAA,CAOM,OAPNS,UAOM,I,kBANJX,mBAAA,CAKMY,SAAA,QAVdC,WAAA,CAM4CC,MAAA,CAAAC,aAAa,EANzD,CAMoBC,YAAY,EAAEC,KAAK;yBAD/BjB,mBAAA,CAKM;MAHDD,GAAG,EAAEkB,KAAK;MACVd,OAAK,EAAAe,MAAA,IAAET,MAAA,CAAAU,2BAA2B,CAACH,YAAY;wBAC/CA,YAAY,CAACI,IAAI,wBAT9BC,UAAA;oEAImBZ,MAAA,CAAAa,iBAAiB,E,KAUrBb,MAAA,CAAAc,qBAAqB,EAAEH,IAAI,IAAIX,MAAA,CAAAc,qBAAqB,CAACH,IAAI,kB,cAApEpB,mBAAA,CAYM,OAZNwB,UAYM,G,0BAXJtB,mBAAA,CAAmD;IAA5CuB,GAAG,EAAC;EAAa,GAAC,oBAAkB,sB,gBAC3CvB,mBAAA,CAAkH;IAhBxH,uBAAAE,MAAA,QAAAA,MAAA,MAAAc,MAAA,IAgBsBT,MAAA,CAAAiB,aAAa,CAACC,WAAW,GAAAT,MAAA;IAAEU,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,aAAa;IAACC,WAAW,EAAC;iDAApErB,MAAA,CAAAiB,aAAa,CAACC,WAAW,E,6BAEzCzB,mBAAA,CAAuC;IAAhCuB,GAAG,EAAC;EAAS,GAAC,YAAU,sB,gBAC/BvB,mBAAA,CAAkG;IAnBxG,uBAAAE,MAAA,QAAAA,MAAA,MAAAc,MAAA,IAmBsBT,MAAA,CAAAiB,aAAa,CAACK,OAAO,GAAAb,MAAA;IAAEU,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,SAAS;IAACC,WAAW,EAAC;iDAA5DrB,MAAA,CAAAiB,aAAa,CAACK,OAAO,E,6BAErC7B,mBAAA,CAAkD;IAA3CuB,GAAG,EAAC;EAAgB,GAAC,gBAAc,sB,gBAC1CvB,mBAAA,CAAoH;IAtB1H,uBAAAE,MAAA,QAAAA,MAAA,MAAAc,MAAA,IAsBsBT,MAAA,CAAAiB,aAAa,CAACM,cAAc,GAAAd,MAAA;IAAEU,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,gBAAgB;IAACC,WAAW,EAAC;iDAA1ErB,MAAA,CAAAiB,aAAa,CAACM,cAAc,E,6BAE5C9B,mBAAA,CAAoD;IAA7CuB,GAAG,EAAC;EAAkB,GAAC,gBAAc,sB,gBAC5CvB,mBAAA,CAAwH;IAzB9H,uBAAAE,MAAA,QAAAA,MAAA,MAAAc,MAAA,IAyBsBT,MAAA,CAAAiB,aAAa,CAACO,gBAAgB,GAAAf,MAAA;IAAEU,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,kBAAkB;IAACC,WAAW,EAAC;iDAA9ErB,MAAA,CAAAiB,aAAa,CAACO,gBAAgB,E,OAzBpDC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}