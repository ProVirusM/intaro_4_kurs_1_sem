{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  className: \"edit-resume\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ResumeForm = _resolveComponent(\"ResumeForm\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Редактировать резюме\", -1 /* HOISTED */)), $data.resume ? (_openBlock(), _createBlock(_component_ResumeForm, {\n    key: 0,\n    initialData: $data.resume,\n    onSubmit: $options.updateResume\n  }, null, 8 /* PROPS */, [\"initialData\", \"onSubmit\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"Загрузка...\"))]);\n}","map":{"version":3,"names":["className","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","resume","_createBlock","_component_ResumeForm","initialData","onSubmit","$options","updateResume","_hoisted_2"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\EditResumePage.vue"],"sourcesContent":["<template>\r\n  <div className=\"edit-resume\">\r\n    <h1>Редактировать резюме</h1>\r\n    <ResumeForm v-if=\"resume\" :initialData=\"resume\" @submit=\"updateResume\"/>\r\n    <p v-else>Загрузка...</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport ResumeForm from '../components/ResumeForm.vue';\r\n\r\nexport default {\r\n  components: {ResumeForm},\r\n  data() {\r\n    return {\r\n      resume: null, // Хранение данных резюме\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Загружаем данные резюме по ID из URL\r\n      const {data} = await axios.get(`http://localhost:3000/api/cv/${this.$route.params.id}`);\r\n      this.resume = data; // Присваиваем полученные данные в переменную resume\r\n    } catch (error) {\r\n      // В случае ошибки (например, если резюме не найдено) показываем предупреждение\r\n      alert('Резюме не найдено');\r\n      this.$router.push('/'); // Перенаправляем на главную страницу\r\n    }\r\n  },\r\n  methods: {\r\n    async updateResume(updatedData) {\r\n      try {\r\n        // Отправляем POST-запрос для обновления резюме\r\n        const response = await axios.post(`http://localhost:3000/api/cv/${this.$route.params.id}/edit`, updatedData);\r\n\r\n        // Если запрос успешен, редиректим на главную страницу\r\n        if (response.status === 200) {\r\n          this.$router.push('/');\r\n        }\r\n      } catch (error) {\r\n        // В случае ошибки при обновлении, показываем сообщение\r\n        alert('Ошибка при обновлении резюме');\r\n        console.error(error); // Логирование ошибки\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для страницы редактирования */\r\n.edit-resume {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,SAAS,EAAC;AAAa;;EAD9BC,GAAA;AAAA;;;uBACEC,mBAAA,CAIM,OAJNC,UAIM,G,0BAHJC,mBAAA,CAA6B,YAAzB,sBAAoB,sBACNC,KAAA,CAAAC,MAAM,I,cAAxBC,YAAA,CAAwEC,qBAAA;IAH5EP,GAAA;IAG+BQ,WAAW,EAAEJ,KAAA,CAAAC,MAAM;IAAGI,QAAM,EAAEC,QAAA,CAAAC;yEACzDV,mBAAA,CAAyB,KAJ7BW,UAAA,EAIc,aAAW,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}