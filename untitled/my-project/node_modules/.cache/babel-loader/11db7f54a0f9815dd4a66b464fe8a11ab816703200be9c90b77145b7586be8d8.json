{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dropdown mb-3\",\n  id: \"dd\"\n};\nconst _hoisted_2 = {\n  class: \"btn btn-secondary dropdown-toggle\",\n  type: \"button\",\n  id: \"dropdownMenuButton\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n};\nconst _hoisted_3 = {\n  class: \"dropdown-menu\",\n  \"aria-labelledby\": \"dropdownMenuButton\"\n};\nconst _hoisted_4 = {\n  class: \"p-2\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"dropdown-item text-muted\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"dd\"\n  }, \"Город\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", _hoisted_2, _toDisplayString($setup.selectedLabel), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_3, [_createCommentVNode(\" Поле для поиска \"), _createElementVNode(\"li\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    onInput: $setup.searchCities,\n    placeholder: \"Поиск...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.searchQuery]])]), _cache[1] || (_cache[1] = _createElementVNode(\"li\", null, [_createElementVNode(\"hr\", {\n    class: \"dropdown-divider\"\n  })], -1 /* HOISTED */)), _createCommentVNode(\" Список опций \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredOptions, option => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: option.id,\n      class: \"dropdown-item\",\n      onClick: $event => $setup.selectOption(option)\n    }, _toDisplayString(option.label), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Если опций нет \"), $setup.filteredOptions.length === 0 ? (_openBlock(), _createElementBlock(\"li\", _hoisted_6, \" Ничего не найдено \")) : _createCommentVNode(\"v-if\", true)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","id","type","key","_createElementBlock","_Fragment","_createElementVNode","for","_hoisted_1","_hoisted_2","_toDisplayString","$setup","selectedLabel","_hoisted_3","_createCommentVNode","_hoisted_4","_cache","$event","searchQuery","onInput","searchCities","placeholder","_renderList","filteredOptions","option","onClick","selectOption","label","_hoisted_5","length","_hoisted_6"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\CityInput.vue"],"sourcesContent":["<template>\r\n  <label for=\"dd\">Город</label>\r\n  <div class=\"dropdown mb-3\" id=\"dd\">\r\n    <button\r\n        class=\"btn btn-secondary dropdown-toggle\"\r\n        type=\"button\"\r\n        id=\"dropdownMenuButton\"\r\n        data-bs-toggle=\"dropdown\"\r\n        aria-expanded=\"false\"\r\n    >\r\n      {{ selectedLabel }}\r\n    </button>\r\n    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n      <!-- Поле для поиска -->\r\n      <li class=\"p-2\">\r\n        <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            v-model=\"searchQuery\"\r\n            @input=\"searchCities\"\r\n            placeholder=\"Поиск...\"\r\n        />\r\n      </li>\r\n      <li>\r\n        <hr class=\"dropdown-divider\" />\r\n      </li>\r\n      <!-- Список опций -->\r\n      <li\r\n          v-for=\"option in filteredOptions\"\r\n          :key=\"option.id\"\r\n          class=\"dropdown-item\"\r\n          @click=\"selectOption(option)\"\r\n      >\r\n        {{ option.label }}\r\n      </li>\r\n      <!-- Если опций нет -->\r\n      <li v-if=\"filteredOptions.length === 0\" class=\"dropdown-item text-muted\">\r\n        Ничего не найдено\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from \"vue\";\r\n\r\n// Объявляем событие для передачи выбранного города в родительский компонент\r\nconst emit = defineEmits(['update:modelValue']);\r\n\r\nconst searchQuery = ref(\"\"); // Поисковый запрос\r\nconst selectedOption = ref(null); // Выбранный элемент\r\n\r\n// Фильтрованные опции\r\nconst filteredOptions = ref([]);\r\n\r\n// Метка для выбранного элемента\r\nconst selectedLabel = ref(\"Выберите элемент\");\r\n\r\n// Обработчик выбора элемента\r\nconst selectOption = (option) => {\r\n  selectedLabel.value = option.label;\r\n  selectedOption.value = option;\r\n  // Отправляем выбранный город родителю\r\n  emit('update:modelValue', option);\r\n};\r\n\r\n// Функция для поиска городов\r\nconst searchCities = async () => {\r\n  const params = new URLSearchParams({\r\n    v: '5.81',\r\n    country_id: '1',\r\n    region_id: '0',\r\n    offset: '0',\r\n    need_all: '0',\r\n    count: '10',\r\n    q: searchQuery.value\r\n  });\r\n\r\n  try {\r\n    const response = await fetch(`/api/method/database.getCities?${params}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        'Authorization': 'Bearer 95d4a79995d4a79995d4a799df96cb3f6e995d495d4a799f329b17073154c54fe52893a'\r\n      }\r\n    });\r\n    const data = await response.json();\r\n    if (data.response && data.response.items) {\r\n      filteredOptions.value = filterCities(data.response.items);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching cities:', error);\r\n  }\r\n};\r\n\r\n// Фильтрация полученных данных\r\nconst filterCities = (cities) => {\r\n  return cities.map(city => ({\r\n    label: city.title,\r\n    id: city.id\r\n  }));\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для списка */\r\n.dropdown-item {\r\n  cursor: pointer;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n"],"mappings":";;EAEOA,KAAK,EAAC,eAAe;EAACC,EAAE,EAAC;;;EAExBD,KAAK,EAAC,mCAAmC;EACzCE,IAAI,EAAC,QAAQ;EACbD,EAAE,EAAC,oBAAoB;EACvB,gBAAc,EAAC,UAAU;EACzB,eAAa,EAAC;;;EAIdD,KAAK,EAAC,eAAe;EAAC,iBAAe,EAAC;;;EAEpCA,KAAK,EAAC;AAAK;mBAdrB;;EAAAG,GAAA;EAoC8CH,KAAK,EAAC;;;uBApCpDI,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAA6B;IAAtBC,GAAG,EAAC;EAAI,GAAC,OAAK,sBACrBD,mBAAA,CAsCM,OAtCNE,UAsCM,GArCJF,mBAAA,CAQS,UARTG,UAQS,EAAAC,gBAAA,CADJC,MAAA,CAAAC,aAAa,kBAElBN,mBAAA,CA2BK,MA3BLO,UA2BK,GA1BHC,mBAAA,qBAAwB,EACxBR,mBAAA,CAQK,MARLS,UAQK,G,gBAPHT,mBAAA,CAME;IALEJ,IAAI,EAAC,MAAM;IACXF,KAAK,EAAC,cAAc;IAjBhC,uBAAAgB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAkBqBN,MAAA,CAAAO,WAAW,GAAAD,MAAA;IACnBE,OAAK,EAAER,MAAA,CAAAS,YAAY;IACpBC,WAAW,EAAC;iEAFHV,MAAA,CAAAO,WAAW,E,+BAK1BZ,mBAAA,CAEK,aADHA,mBAAA,CAA+B;IAA3BN,KAAK,EAAC;EAAkB,G,sBAE9Bc,mBAAA,kBAAqB,G,kBACrBV,mBAAA,CAOKC,SAAA,QAlCXiB,WAAA,CA4B2BX,MAAA,CAAAY,eAAe,EAAzBC,MAAM;yBADjBpB,mBAAA,CAOK;MALAD,GAAG,EAAEqB,MAAM,CAACvB,EAAE;MACfD,KAAK,EAAC,eAAe;MACpByB,OAAK,EAAAR,MAAA,IAAEN,MAAA,CAAAe,YAAY,CAACF,MAAM;wBAE1BA,MAAM,CAACG,KAAK,wBAjCvBC,UAAA;kCAmCMd,mBAAA,oBAAuB,EACbH,MAAA,CAAAY,eAAe,CAACM,MAAM,U,cAAhCzB,mBAAA,CAEK,MAFL0B,UAEK,EAFoE,qBAEzE,KAtCNhB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}