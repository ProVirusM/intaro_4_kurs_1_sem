{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"homepage\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  class: \"columns\"\n};\nconst _hoisted_4 = [\"data-status\"];\nconst _hoisted_5 = [\"data-id\", \"onClick\"];\nconst _hoisted_6 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_draggable = _resolveComponent(\"draggable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Вывод ошибки \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.columns, column => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: column.status,\n      class: \"column\",\n      \"data-status\": column.status\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(column.label) + \" (\" + _toDisplayString($data.resumesByStatusMap[column.status]?.length || 0) + \")\", 1 /* TEXT */), _createCommentVNode(\" Обновлённый draggable \"), (_openBlock(), _createBlock(_component_draggable, {\n      modelValue: $data.resumesByStatusMap[column.status],\n      \"onUpdate:modelValue\": $event => $data.resumesByStatusMap[column.status] = $event,\n      onStart: _ctx.onDragStart,\n      onEnd: $options.onDragEnd,\n      group: \"resumes\",\n      key: column.status\n    }, {\n      item: _withCtx(({\n        element\n      }) => [(_openBlock(), _createElementBlock(\"div\", {\n        key: element._id,\n        class: \"resume-card\",\n        \"data-id\": element._id,\n        onClick: $event => _ctx.$router.push(`/edit/${element._id}`)\n      }, [_createElementVNode(\"img\", {\n        src: element.photo,\n        alt: \"Фото\"\n      }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(element.profession), 1 /* TEXT */)]), _createElementVNode(\"p\", null, _toDisplayString(element.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($options.getAge(element.birthday)) + \" лет\", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_5))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onStart\", \"onEnd\"]))], 8 /* PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode","_createElementVNode","_hoisted_3","_Fragment","_renderList","columns","column","status","label","resumesByStatusMap","length","_createBlock","_component_draggable","modelValue","$event","onStart","_ctx","onDragStart","onEnd","$options","onDragEnd","group","item","_withCtx","element","_id","onClick","$router","push","src","photo","alt","_hoisted_6","profession","name","getAge","birthday","_hoisted_5","_","_hoisted_4"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"homepage\">\r\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>  <!-- Вывод ошибки -->\r\n    <div class=\"columns\">\r\n      <div v-for=\"column in columns\" :key=\"column.status\" class=\"column\" :data-status=\"column.status\">\r\n        <h3>{{ column.label }} ({{ resumesByStatusMap[column.status]?.length || 0 }})</h3>\r\n\r\n        <!-- Обновлённый draggable -->\r\n        <draggable\r\n            v-model=\"resumesByStatusMap[column.status]\"\r\n            @start=\"onDragStart\"\r\n            @end=\"onDragEnd\"\r\n            group=\"resumes\"\r\n            :key=\"column.status\"\r\n        >\r\n          <template #item=\"{ element }\">\r\n            <div\r\n                :key=\"element._id\"\r\n                class=\"resume-card\"\r\n                :data-id=\"element._id\"\r\n                @click=\"$router.push(`/edit/${element._id}`)\"\r\n            >\r\n              <img :src=\"element.photo\" alt=\"Фото\" />\r\n              <p><strong>{{ element.profession }}</strong></p>\r\n              <p>{{ element.name }}</p>\r\n              <p>{{ getAge(element.birthday) }} лет</p>\r\n            </div>\r\n          </template>\r\n        </draggable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\nimport draggable from 'vuedraggable';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: { draggable },\r\n  name: \"HomePage\",\r\n  data() {\r\n    return {\r\n      errorMessage: null,  // Переменная для хранения сообщения об ошибке\r\n      columns: [\r\n        { status: 'Новый', label: 'Новый' },\r\n        { status: 'Назначено собеседование', label: 'Назначено собеседование' },\r\n        { status: 'Принят', label: 'Принят' },\r\n        { status: 'Отказ', label: 'Отказ' },\r\n      ],\r\n      resumesByStatusMap: {},\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters(['resumesByStatus']), // Получаем резюме из Vuex\r\n  },\r\n\r\n  watch: {\r\n    resumesByStatus: {\r\n      handler(newVal) {\r\n        this.resumesByStatusMap = this.groupByStatus(newVal);\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions(['fetchResumes']), // Подключаем действия Vuex\r\n    async updateResumeStatus({ commit }, { r, newStatus }) {\r\n      try {\r\n        const response = await axios.put(`http://localhost:3000/api/cv/${r._id}/status/update`, {\r\n          status: newStatus\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          commit('updateResumeStatus', { r, newStatus });\r\n          console.log(`Статус резюме ${r._id} обновлен на ${newStatus}`);\r\n        }\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          this.errorMessage = 'Резюме не найдено!';\r\n        } else {\r\n          console.error('Ошибка при обновлении статуса:', error);\r\n          this.errorMessage = 'Ошибка при обновлении статуса!';\r\n        }\r\n      }\r\n    },\r\n\r\n    // Метод для группировки резюме по статусам\r\n    groupByStatus(resumes) {\r\n      const map = {\r\n        'Новый': [],\r\n        'Назначено собеседование': [],\r\n        'Принят': [],\r\n        'Отказ': [],\r\n      };\r\n\r\n      resumes.forEach(resume => {\r\n        if (map[resume.status]) {\r\n          map[resume.status].push(resume);\r\n        }\r\n      });\r\n      return map;\r\n    },\r\n\r\n\r\n\r\n    // Метод для вычисления возраста\r\n    getAge(birthday) {\r\n      const birthDate = new Date(birthday);\r\n      const ageDifMs = Date.now() - birthDate.getTime();\r\n      const ageDate = new Date(ageDifMs);\r\n      return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    },\r\n\r\n    // Событие при начале перетаскивания\r\n    async onDragEnd(event) {\r\n      const { to, item } = event;\r\n      const newStatus = to.dataset.status;\r\n      const draggedElement = item.__draggable_context.element;\r\n\r\n      console.log('Новый статус:', newStatus);\r\n      console.log('Перетащенный элемент:', draggedElement);\r\n\r\n      if (newStatus && draggedElement.status !== newStatus) {\r\n        draggedElement.status = newStatus;\r\n\r\n        try {\r\n          // Вызываем локальный метод для обновления статуса\r\n          await this.updateResumeStatus({\r\n            r: draggedElement,  // Передаем сам объект резюме\r\n            newStatus: newStatus\r\n          });\r\n\r\n          console.log('Статус успешно изменён:', newStatus);\r\n        } catch (error) {\r\n          console.error('Ошибка обновления статуса:', error);\r\n        }\r\n      } else {\r\n        console.warn('Статус не изменился или пустой');\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  },\r\n\r\n  // Загружаем резюме при создании компонента\r\n  async created() {\r\n    await this.fetchResumes();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для колонок и карточек */\r\n.new-resume-btn {\r\n  padding: 10px 20px;\r\n  background-color: #007acc;\r\n  color: white;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.new-resume-btn:hover {\r\n  background-color: #005f99;\r\n}\r\n\r\n.columns {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.column {\r\n  width: 22%;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n.error-message {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\nh3 {\r\n  font-size: 1.2em;\r\n  color: #007acc;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.resume-card {\r\n  background-color: #f9f9f9;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.resume-card img {\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.resume-card p {\r\n  margin: 5px 0;\r\n}\r\n\r\n.column h3 {\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;;EADvBC,GAAA;EAE6BD,KAAK,EAAC;;;EAC1BA,KAAK,EAAC;AAAS;mBAHxB;mBAAA;mBAAA;;;uBACEE,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BOC,KAAA,CAAAC,YAAY,I,cAAvBH,mBAAA,CAAuE,OAAvEI,UAAuE,EAAAC,gBAAA,CAArBH,KAAA,CAAAC,YAAY,oBAFlEG,mBAAA,gBAE6EA,mBAAA,kBAAqB,EAC9FC,mBAAA,CA2BM,OA3BNC,UA2BM,I,kBA1BJR,mBAAA,CAyBMS,SAAA,QA7BZC,WAAA,CAI4BR,KAAA,CAAAS,OAAO,EAAjBC,MAAM;yBAAlBZ,mBAAA,CAyBM;MAzB0BD,GAAG,EAAEa,MAAM,CAACC,MAAM;MAAEf,KAAK,EAAC,QAAQ;MAAE,aAAW,EAAEc,MAAM,CAACC;QACtFN,mBAAA,CAAkF,YAAAF,gBAAA,CAA3EO,MAAM,CAACE,KAAK,IAAG,IAAE,GAAAT,gBAAA,CAAGH,KAAA,CAAAa,kBAAkB,CAACH,MAAM,CAACC,MAAM,GAAGG,MAAM,SAAQ,GAAC,iBAE7EV,mBAAA,2BAA8B,G,cAC9BW,YAAA,CAoBYC,oBAAA;MA5BpBC,UAAA,EASqBjB,KAAA,CAAAa,kBAAkB,CAACH,MAAM,CAACC,MAAM;MATrD,uBAAAO,MAAA,IASqBlB,KAAA,CAAAa,kBAAkB,CAACH,MAAM,CAACC,MAAM,IAAAO,MAAA;MACxCC,OAAK,EAAEC,IAAA,CAAAC,WAAW;MAClBC,KAAG,EAAEC,QAAA,CAAAC,SAAS;MACfC,KAAK,EAAC,SAAS;MACd5B,GAAG,EAAEa,MAAM,CAACC;;MAEJe,IAAI,EAAAC,QAAA,CACb,CAUM;QAXWC;MAAO,Q,cACxB9B,mBAAA,CAUM;QATDD,GAAG,EAAE+B,OAAO,CAACC,GAAG;QACjBjC,KAAK,EAAC,aAAa;QAClB,SAAO,EAAEgC,OAAO,CAACC,GAAG;QACpBC,OAAK,EAAAZ,MAAA,IAAEE,IAAA,CAAAW,OAAO,CAACC,IAAI,UAAUJ,OAAO,CAACC,GAAG;UAE3CxB,mBAAA,CAAuC;QAAjC4B,GAAG,EAAEL,OAAO,CAACM,KAAK;QAAEC,GAAG,EAAC;8BAtB5CC,UAAA,GAuBc/B,mBAAA,CAAgD,YAA7CA,mBAAA,CAAyC,gBAAAF,gBAAA,CAA9ByB,OAAO,CAACS,UAAU,iB,GAChChC,mBAAA,CAAyB,WAAAF,gBAAA,CAAnByB,OAAO,CAACU,IAAI,kBAClBjC,mBAAA,CAAyC,WAAAF,gBAAA,CAAnCoB,QAAA,CAAAgB,MAAM,CAACX,OAAO,CAACY,QAAQ,KAAI,MAAI,gB,iBAzBnDC,UAAA,G;MAAAC,CAAA;qHAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}