{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"homepage\"\n};\nconst _hoisted_2 = {\n  class: \"columns\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache) {\n  const _component_draggable = _resolveComponent(\"draggable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/add')),\n    class: \"new-resume-btn\"\n  }, \"Новое резюме\"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.columns, column => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: column.status,\n      class: \"column\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(column.label) + \" (\" + _toDisplayString(_ctx.resumesByStatus(column.status).length) + \")\", 1 /* TEXT */), _createVNode(_component_draggable, {\n      modelValue: _ctx.resumesByStatusMap[_ctx.columnStatus],\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.resumesByStatusMap[_ctx.columnStatus] = $event),\n      onChange: _ctx.onDragEnd,\n      group: \"resumes\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.resumesByStatus(column.status), resume => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: resume._id,\n          class: \"resume-card\",\n          onClick: $event => _ctx.$router.push(`/edit/${resume._id}`)\n        }, [_createElementVNode(\"img\", {\n          src: resume.photo,\n          alt: \"Фото\"\n        }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(resume.profession), 1 /* TEXT */)]), _createElementVNode(\"p\", null, _toDisplayString(resume.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(_ctx.getAge(resume.birthday)) + \" лет\", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_3);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onChange\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","$event","_ctx","$router","push","_hoisted_2","_Fragment","_renderList","columns","column","key","status","_toDisplayString","label","resumesByStatus","length","_createVNode","_component_draggable","modelValue","resumesByStatusMap","columnStatus","onChange","onDragEnd","group","default","_withCtx","resume","_id","src","photo","alt","_hoisted_4","profession","name","getAge","birthday","_hoisted_3","_"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"homepage\">\r\n    <button @click=\"$router.push('/add')\" class=\"new-resume-btn\">Новое резюме</button>\r\n\r\n    <div class=\"columns\">\r\n      <div v-for=\"column in columns\" :key=\"column.status\" class=\"column\">\r\n        <h3>{{ column.label }} ({{ resumesByStatus(column.status).length }})</h3>\r\n        <draggable\r\n            v-model=\"resumesByStatusMap[columnStatus]\"\r\n            @change=\"onDragEnd\"\r\n            group=\"resumes\"\r\n        >\r\n          <div\r\n              v-for=\"resume in resumesByStatus(column.status)\"\r\n              :key=\"resume._id\"\r\n              class=\"resume-card\"\r\n              @click=\"$router.push(`/edit/${resume._id}`)\"\r\n          >\r\n            <img :src=\"resume.photo\" alt=\"Фото\" />\r\n            <p><strong>{{ resume.profession }}</strong></p>\r\n            <p>{{ resume.name }}</p>\r\n            <p>{{ getAge(resume.birthday) }} лет</p>\r\n          </div>\r\n        </draggable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\nimport draggable from 'vuedraggable';\r\n\r\nexport default {\r\n  components: { draggable },\r\n  name: \"HomePage\",\r\n  data() {\r\n    return {\r\n      resumesByStatusMap: this.getResumesByStatusMap(),\r\n      columnStatus: \"someStatus\", // Статус для примера\r\n\r\n      columns: [\r\n        { status: 'Новый', label: 'Новый' },\r\n        { status: 'Назначено собеседование', label: 'Назначено собеседование' },\r\n        { status: 'Принят', label: 'Принят' },\r\n        { status: 'Отказ', label: 'Отказ' },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['resumesByStatus']),\r\n  },\r\n  methods: {\r\n    getResumesByStatusMap() {\r\n      // Возвращаем данные по статусам (например, пустые массивы)\r\n      return {\r\n        someStatus: [], // Это будет ваш маппинг резюме по статусу\r\n        otherStatus: [],\r\n      };\r\n    },\r\n  },\r\n    ...mapActions(['fetchResumes', 'updateResumeStatus']),\r\n    getAge(birthday) {\r\n      const birthDate = new Date(birthday);\r\n      const ageDifMs = Date.now() - birthDate.getTime();\r\n      const ageDate = new Date(ageDifMs);\r\n      return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    },\r\n    async onDragEnd(event) {\r\n      const { element, to } = event;\r\n      const newStatus = this.columns.find((col) => col.status === to.dataset.status).status;\r\n      await this.updateResumeStatus({ id: element._id, status: newStatus });\r\n    },\r\n  },\r\n  async created() {\r\n    await this.fetchResumes();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Добавьте стили для колонок и карточек */\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;;EAGdA,KAAK,EAAC;AAAS;mBAJxB;mBAAA;;;uBACEC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,CAAkF;IAAzEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;IAAUT,KAAK,EAAC;KAAiB,cAAY,GAEzEG,mBAAA,CAqBM,OArBNO,UAqBM,I,kBApBJT,mBAAA,CAmBMU,SAAA,QAxBZC,WAAA,CAK4BL,IAAA,CAAAM,OAAO,EAAjBC,MAAM;yBAAlBb,mBAAA,CAmBM;MAnB0Bc,GAAG,EAAED,MAAM,CAACE,MAAM;MAAEhB,KAAK,EAAC;QACxDG,mBAAA,CAAyE,YAAAc,gBAAA,CAAlEH,MAAM,CAACI,KAAK,IAAG,IAAE,GAAAD,gBAAA,CAAGV,IAAA,CAAAY,eAAe,CAACL,MAAM,CAACE,MAAM,EAAEI,MAAM,IAAG,GAAC,iBACpEC,YAAA,CAgBYC,oBAAA;MAvBpBC,UAAA,EAQqBhB,IAAA,CAAAiB,kBAAkB,CAACjB,IAAA,CAAAkB,YAAY;MARpD,uBAAApB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQqBC,IAAA,CAAAiB,kBAAkB,CAACjB,IAAA,CAAAkB,YAAY,IAAAnB,MAAA;MACvCoB,QAAM,EAAEnB,IAAA,CAAAoB,SAAS;MAClBC,KAAK,EAAC;;MAVlBC,OAAA,EAAAC,QAAA,CAac,MAAgD,E,kBADpD7B,mBAAA,CAUMU,SAAA,QAtBhBC,WAAA,CAa+BL,IAAA,CAAAY,eAAe,CAACL,MAAM,CAACE,MAAM,GAAvCe,MAAM;6BADjB9B,mBAAA,CAUM;UARDc,GAAG,EAAEgB,MAAM,CAACC,GAAG;UAChBhC,KAAK,EAAC,aAAa;UAClBI,OAAK,EAAAE,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI,UAAUsB,MAAM,CAACC,GAAG;YAE1C7B,mBAAA,CAAsC;UAAhC8B,GAAG,EAAEF,MAAM,CAACG,KAAK;UAAEC,GAAG,EAAC;gCAlBzCC,UAAA,GAmBYjC,mBAAA,CAA+C,YAA5CA,mBAAA,CAAwC,gBAAAc,gBAAA,CAA7Bc,MAAM,CAACM,UAAU,iB,GAC/BlC,mBAAA,CAAwB,WAAAc,gBAAA,CAAlBc,MAAM,CAACO,IAAI,kBACjBnC,mBAAA,CAAwC,WAAAc,gBAAA,CAAlCV,IAAA,CAAAgC,MAAM,CAACR,MAAM,CAACS,QAAQ,KAAI,MAAI,gB,iBArBhDC,UAAA;;MAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}