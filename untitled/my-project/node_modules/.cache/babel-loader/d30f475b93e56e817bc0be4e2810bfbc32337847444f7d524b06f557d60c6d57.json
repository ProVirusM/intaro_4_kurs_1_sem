{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    modelValue: String,\n    // Текущее значение университета\n    city: String // Город, выбранный в CityInput\n  },\n  emits: ['update:modelValue'],\n  data() {\n    return {\n      query: this.modelValue || '',\n      universities: []\n    };\n  },\n  watch: {\n    modelValue(newValue) {\n      if (newValue !== this.query) {\n        this.query = newValue;\n      }\n    }\n  },\n  methods: {\n    async fetchUniversities() {\n      if (this.query.length < 2 || !this.city) {\n        this.universities = [];\n        return;\n      }\n      try {\n        const response = await axios.get('/api/database.getUniversities', {\n          params: {\n            access_token: process.env.VUE_APP_VK_ACCESS_TOKEN,\n            v: process.env.VUE_APP_VK_API_VERSION,\n            q: this.query,\n            city_id: this.city,\n            // ID города\n            count: 10\n          }\n        });\n        this.universities = response.data.response.items;\n      } catch (error) {\n        console.error('Ошибка при получении университетов:', error);\n      }\n    },\n    selectUniversity(university) {\n      this.query = university.title;\n      this.universities = [];\n      this.$emit('update:modelValue', university.title);\n    }\n  }\n};","map":{"version":3,"names":["axios","props","modelValue","String","city","emits","data","query","universities","watch","newValue","methods","fetchUniversities","length","response","get","params","access_token","process","env","VUE_APP_VK_ACCESS_TOKEN","v","VUE_APP_VK_API_VERSION","q","city_id","count","items","error","console","selectUniversity","university","title","$emit"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\UniversityInput.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label for=\"university\">Учебное заведение:</label>\r\n    <input\r\n        id=\"university\"\r\n        type=\"text\"\r\n        v-model=\"query\"\r\n        @input=\"fetchUniversities\"\r\n        placeholder=\"Начните вводить название университета\"\r\n    />\r\n    <ul v-if=\"universities.length\" class=\"suggestions\">\r\n      <li\r\n          v-for=\"university in universities\"\r\n          :key=\"university.id\"\r\n          @click=\"selectUniversity(university)\"\r\n      >\r\n        {{ university.title }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: {\r\n    modelValue: String, // Текущее значение университета\r\n    city: String, // Город, выбранный в CityInput\r\n  },\r\n  emits: ['update:modelValue'],\r\n  data() {\r\n    return {\r\n      query: this.modelValue || '',\r\n      universities: [],\r\n    };\r\n  },\r\n  watch: {\r\n    modelValue(newValue) {\r\n      if (newValue !== this.query) {\r\n        this.query = newValue;\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchUniversities() {\r\n      if (this.query.length < 2 || !this.city) {\r\n        this.universities = [];\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get('/api/database.getUniversities', {\r\n          params: {\r\n            access_token: process.env.VUE_APP_VK_ACCESS_TOKEN,\r\n            v: process.env.VUE_APP_VK_API_VERSION,\r\n            q: this.query,\r\n            city_id: this.city, // ID города\r\n            count: 10,\r\n          },\r\n        });\r\n        this.universities = response.data.response.items;\r\n      } catch (error) {\r\n        console.error('Ошибка при получении университетов:', error);\r\n      }\r\n    },\r\n    selectUniversity(university) {\r\n      this.query = university.title;\r\n      this.universities = [];\r\n      this.$emit('update:modelValue', university.title);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.suggestions {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 1px solid #ddd;\r\n  max-height: 150px;\r\n  overflow-y: auto;\r\n  background: #fff;\r\n}\r\n\r\n.suggestions li {\r\n  padding: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.suggestions li:hover {\r\n  background: #f0f0f0;\r\n}\r\n</style>\r\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAEC,MAAM;IAAE;IACpBC,IAAI,EAAED,MAAM,CAAE;EAChB,CAAC;EACDE,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAC5BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI,CAACL,UAAS,IAAK,EAAE;MAC5BM,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLP,UAAUA,CAACQ,QAAQ,EAAE;MACnB,IAAIA,QAAO,KAAM,IAAI,CAACH,KAAK,EAAE;QAC3B,IAAI,CAACA,KAAI,GAAIG,QAAQ;MACvB;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAAA,EAAG;MACxB,IAAI,IAAI,CAACL,KAAK,CAACM,MAAK,GAAI,KAAK,CAAC,IAAI,CAACT,IAAI,EAAE;QACvC,IAAI,CAACI,YAAW,GAAI,EAAE;QACtB;MACF;MACA,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,+BAA+B,EAAE;UAChEC,MAAM,EAAE;YACNC,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,uBAAuB;YACjDC,CAAC,EAAEH,OAAO,CAACC,GAAG,CAACG,sBAAsB;YACrCC,CAAC,EAAE,IAAI,CAAChB,KAAK;YACbiB,OAAO,EAAE,IAAI,CAACpB,IAAI;YAAE;YACpBqB,KAAK,EAAE;UACT;QACF,CAAC,CAAC;QACF,IAAI,CAACjB,YAAW,GAAIM,QAAQ,CAACR,IAAI,CAACQ,QAAQ,CAACY,KAAK;MAClD,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IACDE,gBAAgBA,CAACC,UAAU,EAAE;MAC3B,IAAI,CAACvB,KAAI,GAAIuB,UAAU,CAACC,KAAK;MAC7B,IAAI,CAACvB,YAAW,GAAI,EAAE;MACtB,IAAI,CAACwB,KAAK,CAAC,mBAAmB,EAAEF,UAAU,CAACC,KAAK,CAAC;IACnD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}