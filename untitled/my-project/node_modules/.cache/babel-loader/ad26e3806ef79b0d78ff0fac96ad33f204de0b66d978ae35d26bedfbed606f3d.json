{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport EducationInput from './components/EducationInput.vue';\nexport default {\n  components: {\n    EducationInput\n  },\n  setup() {\n    const educationVars = ref([{\n      name: 'Среднее'\n    }, {\n      name: 'Высшее'\n    }, {\n      name: 'Неоконченное высшее'\n    }]);\n    const educationInfo = ref([{\n      institution: '',\n      faculty: '',\n      specialization: '',\n      yearOfGraduation: ''\n    }]);\n    const addEducation = () => {\n      // Добавляем пустое образование\n      educationInfo.value.push({\n        institution: '',\n        faculty: '',\n        specialization: '',\n        yearOfGraduation: ''\n      });\n    };\n    const removeEducation = index => {\n      // Удаляем элемент только если массив не пуст\n      if (educationInfo.value?.length > 1) {\n        educationInfo.value.splice(index, 1);\n      }\n    };\n    return {\n      educationVars,\n      educationInfo,\n      addEducation,\n      removeEducation\n    };\n  }\n};","map":{"version":3,"names":["ref","EducationInput","components","setup","educationVars","name","educationInfo","institution","faculty","specialization","yearOfGraduation","addEducation","value","push","removeEducation","index","length","splice"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\EducationInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"form-container\">\r\n      <h2>Форма резюме</h2>\r\n      <!-- Остальные поля ввода -->\r\n\r\n      <div v-for=\"(education, index) in educationInfo\" :key=\"index\" class=\"education-block\">\r\n        <EducationInput\r\n            v-model=\"education\"\r\n            :educationVars=\"educationVars\"\r\n        />\r\n        <button\r\n            v-if=\"educationInfo?.length > 1\"\r\n            @click=\"removeEducation(index)\"\r\n            class=\"remove-education-btn\">×</button>\r\n      </div>\r\n\r\n      <button @click=\"addEducation\" class=\"add-education-btn\">Указать еще одно место обучения</button>\r\n\r\n      <!-- Остальные поля ввода -->\r\n    </div>\r\n\r\n    <div class=\"summary-container\">\r\n      <h2>Резюме</h2>\r\n      <p>Образования:</p>\r\n      <div v-for=\"(education, index) in educationInfo\" :key=\"index\">\r\n        <div v-show=\"education?.institution\">\r\n          <p>Учебное заведение: <span>{{ education.institution }}</span></p>\r\n          <p>Факультет: <span>{{ education.faculty }}</span></p>\r\n          <p>Специализация: <span>{{ education.specialization }}</span></p>\r\n          <p>Год окончания: <span>{{ education.yearOfGraduation }}</span></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport EducationInput from './components/EducationInput.vue';\r\n\r\nexport default {\r\n  components: {\r\n    EducationInput,\r\n  },\r\n  setup() {\r\n    const educationVars = ref([\r\n      { name: 'Среднее' },\r\n      { name: 'Высшее' },\r\n      { name: 'Неоконченное высшее' },\r\n    ]);\r\n    const educationInfo = ref([\r\n      { institution: '', faculty: '', specialization: '', yearOfGraduation: '' }\r\n    ]);\r\n\r\n    const addEducation = () => {\r\n      // Добавляем пустое образование\r\n      educationInfo.value.push({\r\n        institution: '',\r\n        faculty: '',\r\n        specialization: '',\r\n        yearOfGraduation: ''\r\n      });\r\n    };\r\n\r\n    const removeEducation = (index) => {\r\n      // Удаляем элемент только если массив не пуст\r\n      if (educationInfo.value?.length > 1) {\r\n        educationInfo.value.splice(index, 1);\r\n      }\r\n    };\r\n\r\n    return {\r\n      educationVars,\r\n      educationInfo,\r\n      addEducation,\r\n      removeEducation,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n.education-input {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.education-fields {\r\n  margin-top: 10px;\r\n}\r\n\r\n.education-fields input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin: 5px 0;\r\n}\r\n\r\n.remove-education-btn {\r\n  margin-top: 10px;\r\n  padding: 8px;\r\n  background-color: #ff4d4d;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  line-height: 1;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.remove-education-btn:hover {\r\n  background-color: #d13636;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--const computedEducation = computed({-->\r\n<!--get: () => SelectedEducationVars.value?.name || SelectedEducationVars.value || 'Выбери',-->\r\n<!--set: (newValue) => {-->\r\n<!--SelectedEducationVars.value = newValue;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->\r\n\r\n<!--const institution = computed({-->\r\n<!--get: () => educationData.value.institution,-->\r\n<!--set: (value) => {-->\r\n<!--educationData.value.institution = value;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->\r\n\r\n<!--const faculty = computed({-->\r\n<!--get: () => educationData.value.faculty,-->\r\n<!--set: (value) => {-->\r\n<!--educationData.value.faculty = value;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->\r\n\r\n<!--const specialization = computed({-->\r\n<!--get: () => educationData.value.specialization,-->\r\n<!--set: (value) => {-->\r\n<!--educationData.value.specialization = value;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->\r\n\r\n<!--const yearOfGraduation = computed({-->\r\n<!--get: () => educationData.value.yearOfGraduation,-->\r\n<!--set: (value) => {-->\r\n<!--educationData.value.yearOfGraduation = value;-->\r\n<!--emit('update:modelValue', { selected: SelectedEducationVars.value, ...educationData.value });-->\r\n<!--}-->\r\n<!--});-->"],"mappings":";AAsCA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,cAAa,MAAO,iCAAiC;AAE5D,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAKA,CAAA,EAAG;IACN,MAAMC,aAAY,GAAIJ,GAAG,CAAC,CACxB;MAAEK,IAAI,EAAE;IAAU,CAAC,EACnB;MAAEA,IAAI,EAAE;IAAS,CAAC,EAClB;MAAEA,IAAI,EAAE;IAAsB,CAAC,CAChC,CAAC;IACF,MAAMC,aAAY,GAAIN,GAAG,CAAC,CACxB;MAAEO,WAAW,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,cAAc,EAAE,EAAE;MAAEC,gBAAgB,EAAE;IAAG,EAC1E,CAAC;IAEF,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACzB;MACAL,aAAa,CAACM,KAAK,CAACC,IAAI,CAAC;QACvBN,WAAW,EAAE,EAAE;QACfC,OAAO,EAAE,EAAE;QACXC,cAAc,EAAE,EAAE;QAClBC,gBAAgB,EAAE;MACpB,CAAC,CAAC;IACJ,CAAC;IAED,MAAMI,eAAc,GAAKC,KAAK,IAAK;MACjC;MACA,IAAIT,aAAa,CAACM,KAAK,EAAEI,MAAK,GAAI,CAAC,EAAE;QACnCV,aAAa,CAACM,KAAK,CAACK,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACtC;IACF,CAAC;IAED,OAAO;MACLX,aAAa;MACbE,aAAa;MACbK,YAAY;MACZG;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}