{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'EditResume',\n  data() {\n    return {\n      resume: {\n        _id: '',\n        name: '',\n        profession: '',\n        birthday: '',\n        email: '',\n        phone: '',\n        address: '',\n        // Город сохраняем здесь\n        status: '',\n        education: [{\n          degree: '',\n          institution: ''\n        }],\n        // Образование теперь массив объектов\n        salary: '',\n        skills: '',\n        aboutMe: '',\n        photo: '' // Здесь сохраняем URL фото\n      }\n    };\n  },\n  methods: {\n    ...mapActions(['fetchResumes', 'updateResumeStatus']),\n    // Подключаем действия Vuex\n\n    // Загружаем резюме по id, когда компонент создан\n    async loadResume() {\n      await this.fetchResumes(); // Загружаем все резюме\n\n      const resumeId = this.$route.params.id; // Получаем id из маршрута\n      const resume = this.$store.state.resumes.find(res => res._id === resumeId); // Ищем резюме по id\n\n      if (resume) {\n        this.resume = {\n          ...resume\n        }; // Заполняем поля формы\n      } else {\n        console.error('Резюме не найдено');\n      }\n    },\n    // Обрабатываем сохранение изменений\n    async saveResume() {\n      try {\n        // Отправляем запрос на сервер для обновления резюме\n        await this.updateResumeStatus({\n          id: this.resume._id,\n          ...this.resume // Отправляем все поля\n        });\n        console.log('Резюме обновлено!');\n        this.$router.push('/'); // После сохранения перенаправляем на главную страницу\n      } catch (error) {\n        console.error('Ошибка при сохранении резюме:', error);\n      }\n    },\n    // Метод для добавления нового образования\n    addEducation() {\n      this.resume.education.push({\n        degree: '',\n        institution: ''\n      });\n    }\n  },\n  async created() {\n    await this.loadResume(); // Загружаем данные резюме при создании компонента\n  }\n};","map":{"version":3,"names":["mapActions","name","data","resume","_id","profession","birthday","email","phone","address","status","education","degree","institution","salary","skills","aboutMe","photo","methods","loadResume","fetchResumes","resumeId","$route","params","id","$store","state","resumes","find","res","console","error","saveResume","updateResumeStatus","log","$router","push","addEducation","created"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\EditResumePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-resume\">\r\n    <h2>Редактирование резюме</h2>\r\n\r\n    <!-- Форма редактирования -->\r\n    <div class=\"container\">\r\n      <div class=\"form-container\">\r\n        <form @submit.prevent=\"saveResume\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Имя</label>\r\n            <input type=\"text\" v-model=\"resume.name\" id=\"name\" required />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"profession\">Профессия</label>\r\n            <input type=\"text\" v-model=\"resume.profession\" id=\"profession\" required />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"birthday\">Дата рождения</label>\r\n            <input type=\"date\" v-model=\"resume.birthday\" id=\"birthday\" required />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <input type=\"email\" v-model=\"resume.email\" id=\"email\" required />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"phone\">Телефон</label>\r\n            <input type=\"tel\" v-model=\"resume.phone\" id=\"phone\" required />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"address\">Город</label>\r\n            <input type=\"text\" v-model=\"resume.address\" id=\"address\" required />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"status\">Статус</label>\r\n            <select v-model=\"resume.status\" id=\"status\">\r\n              <option value=\"Новый\">Новый</option>\r\n              <option value=\"Назначено собеседование\">Назначено собеседование</option>\r\n              <option value=\"Принят\">Принят</option>\r\n              <option value=\"Отказ\">Отказ</option>\r\n            </select>\r\n          </div>\r\n\r\n          <!-- Образование -->\r\n          <div class=\"form-group\">\r\n            <label for=\"education\">Образование</label>\r\n            <div v-for=\"(edu, index) in resume.education\" :key=\"index\">\r\n              <input\r\n                  type=\"text\"\r\n                  v-model=\"edu.degree\"\r\n                  placeholder=\"Уровень образования\"\r\n                  readonly\r\n              />\r\n              <input\r\n                  type=\"text\"\r\n                  v-model=\"edu.institution\"\r\n                  placeholder=\"Учебное заведение\"\r\n                  readonly\r\n              />\r\n            </div>\r\n            <!-- Добавление нового образования, поле нельзя редактировать, только просмотр -->\r\n            <button type=\"button\" @click=\"addEducation\">Добавить образование</button>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"salary\">Желаемая зарплата</label>\r\n            <input type=\"number\" v-model=\"resume.salary\" id=\"salary\" placeholder=\"Введите желаемую зарплату\" />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"skills\">Навыки</label>\r\n            <textarea v-model=\"resume.skills\" id=\"skills\" placeholder=\"Перечислите навыки\" rows=\"4\"></textarea>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"aboutMe\">О себе</label>\r\n            <textarea v-model=\"resume.aboutMe\" id=\"aboutMe\" placeholder=\"Информация о вас\" rows=\"6\"></textarea>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"photo\">Фото (URL)</label>\r\n            <input type=\"text\" v-model=\"resume.photo\" id=\"photo\" placeholder=\"Введите URL фото\" />\r\n            <div v-if=\"resume.photo\" class=\"image-preview\">\r\n              <img :src=\"resume.photo\" alt=\"Фото\" style=\"max-width: 100px; margin-top: 10px;\" />\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\">Сохранить</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\n\r\nexport default {\r\n  name: 'EditResume',\r\n  data() {\r\n    return {\r\n      resume: {\r\n        _id: '',\r\n        name: '',\r\n        profession: '',\r\n        birthday: '',\r\n        email: '',\r\n        phone: '',\r\n        address: '', // Город сохраняем здесь\r\n        status: '',\r\n        education: [{ degree: '', institution: '' }], // Образование теперь массив объектов\r\n        salary: '',\r\n        skills: '',\r\n        aboutMe: '',\r\n        photo: '', // Здесь сохраняем URL фото\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchResumes', 'updateResumeStatus']), // Подключаем действия Vuex\r\n\r\n    // Загружаем резюме по id, когда компонент создан\r\n    async loadResume() {\r\n      await this.fetchResumes(); // Загружаем все резюме\r\n\r\n      const resumeId = this.$route.params.id; // Получаем id из маршрута\r\n      const resume = this.$store.state.resumes.find(res => res._id === resumeId); // Ищем резюме по id\r\n\r\n      if (resume) {\r\n        this.resume = { ...resume }; // Заполняем поля формы\r\n      } else {\r\n        console.error('Резюме не найдено');\r\n      }\r\n    },\r\n\r\n    // Обрабатываем сохранение изменений\r\n    async saveResume() {\r\n      try {\r\n        // Отправляем запрос на сервер для обновления резюме\r\n        await this.updateResumeStatus({\r\n          id: this.resume._id,\r\n          ...this.resume, // Отправляем все поля\r\n        });\r\n        console.log('Резюме обновлено!');\r\n        this.$router.push('/'); // После сохранения перенаправляем на главную страницу\r\n      } catch (error) {\r\n        console.error('Ошибка при сохранении резюме:', error);\r\n      }\r\n    },\r\n\r\n    // Метод для добавления нового образования\r\n    addEducation() {\r\n      this.resume.education.push({ degree: '', institution: '' });\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    await this.loadResume(); // Загружаем данные резюме при создании компонента\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для формы редактирования */\r\n.edit-resume {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n}\r\n\r\n.form-container {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 600px;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.5em;\r\n  color: #007acc;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-weight: bold;\r\n}\r\n\r\n.form-group input,\r\n.form-group select,\r\n.form-group textarea {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 5px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #007acc;\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #005f99;\r\n}\r\n\r\nimg {\r\n  margin-top: 10px;\r\n  max-width: 100px;\r\n}\r\n</style>\r\n"],"mappings":";AAoGA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;QACNC,GAAG,EAAE,EAAE;QACPH,IAAI,EAAE,EAAE;QACRI,UAAU,EAAE,EAAE;QACdC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QAAE;QACbC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,CAAC;UAAEC,MAAM,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAG,CAAC,CAAC;QAAE;QAC9CC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE,EAAE,CAAE;MACb;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGlB,UAAU,CAAC,CAAC,cAAc,EAAE,oBAAoB,CAAC,CAAC;IAAE;;IAEvD;IACA,MAAMmB,UAAUA,CAAA,EAAG;MACjB,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;;MAE3B,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;MACxC,MAAMrB,MAAK,GAAI,IAAI,CAACsB,MAAM,CAACC,KAAK,CAACC,OAAO,CAACC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACzB,GAAE,KAAMiB,QAAQ,CAAC,EAAE;;MAE5E,IAAIlB,MAAM,EAAE;QACV,IAAI,CAACA,MAAK,GAAI;UAAE,GAAGA;QAAO,CAAC,EAAE;MAC/B,OAAO;QACL2B,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;MACpC;IACF,CAAC;IAED;IACA,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAM,IAAI,CAACC,kBAAkB,CAAC;UAC5BT,EAAE,EAAE,IAAI,CAACrB,MAAM,CAACC,GAAG;UACnB,GAAG,IAAI,CAACD,MAAM,CAAE;QAClB,CAAC,CAAC;QACF2B,OAAO,CAACI,GAAG,CAAC,mBAAmB,CAAC;QAChC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B,EAAE,OAAOL,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAED;IACAM,YAAYA,CAAA,EAAG;MACb,IAAI,CAAClC,MAAM,CAACQ,SAAS,CAACyB,IAAI,CAAC;QAAExB,MAAM,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC,CAAC;IAC7D;EACF,CAAC;EAED,MAAMyB,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACnB,UAAU,CAAC,CAAC,EAAE;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}