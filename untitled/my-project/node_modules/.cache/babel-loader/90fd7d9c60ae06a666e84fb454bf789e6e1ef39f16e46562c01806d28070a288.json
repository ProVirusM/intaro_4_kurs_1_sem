{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"dropDown\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"Образование:\", -1 /* HOISTED */)), _createCommentVNode(\"    <input type=\\\"text\\\" v-model=\\\"educationValue\\\" @input=\\\"$emit('update:modelValue', educationValue)\\\" />\"), _createElementVNode(\"div\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.isDropDownVisible = true)\n  }, _toDisplayString($setup.mappedSelectedEducationVars), 1 /* TEXT */), $setup.isDropDownVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.educationVars, (educationVar, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index,\n      onClick: $event => $setup.toggleSelectedEducationVars(educationVar)\n    }, _toDisplayString(educationVar.name || educationVar), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Образование:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.educationValue = $event),\n    onInput: _cache[2] || (_cache[2] = $event => _ctx.$emit('update:modelValue', $setup.educationValue))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.educationValue]]), _cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Образование:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.educationValue = $event),\n    onInput: _cache[4] || (_cache[4] = $event => _ctx.$emit('update:modelValue', $setup.educationValue))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.educationValue]]), _cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"Образование:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.educationValue = $event),\n    onInput: _cache[6] || (_cache[6] = $event => _ctx.$emit('update:modelValue', $setup.educationValue))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.educationValue]])])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","onClick","_cache","$event","$setup","isDropDownVisible","mappedSelectedEducationVars","_hoisted_2","_Fragment","_renderList","$props","educationVars","educationVar","index","toggleSelectedEducationVars","name","_hoisted_3","type","educationValue","onInput","_ctx","$emit"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\EducationInput.vue"],"sourcesContent":["<template>\r\n  <div ref=\"dropDown\">\r\n    <label>Образование:</label>\r\n<!--    <input type=\"text\" v-model=\"educationValue\" @input=\"$emit('update:modelValue', educationValue)\" />-->\r\n    <div @click=\"isDropDownVisible=true\">\r\n      {{mappedSelectedEducationVars}}\r\n    </div>\r\n    <div v-if=\"isDropDownVisible\">\r\n      <p v-for=\"(educationVar, index) in educationVars\" :key=\"index\" @click=\"toggleSelectedEducationVars(educationVar)\">\r\n        {{ educationVar.name || educationVar }}\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <label>Образование:</label>\r\n      <input type=\"text\" v-model=\"educationValue\" @input=\"$emit('update:modelValue', educationValue)\" />\r\n      <label>Образование:</label>\r\n      <input type=\"text\" v-model=\"educationValue\" @input=\"$emit('update:modelValue', educationValue)\" />\r\n      <label>Образование:</label>\r\n      <input type=\"text\" v-model=\"educationValue\" @input=\"$emit('update:modelValue', educationValue)\" />\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, computed, onMounted, onBeforeUnmount} from 'vue'\r\n\r\nexport default {\r\n  props: {\r\n    modelValue: String,\r\n    educationVars: {\r\n      type: Array,\r\n      default(){\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  setup(props, {emit}) {\r\n    const SelectedEducationVars=ref(null)\r\n    const educationValue = ref(props.modelValue)\r\n    const isDropDownVisible=ref(false)\r\n    const dropDown=ref(null)\r\n    const toggleSelectedEducationVars = (educationVar) => {\r\n      SelectedEducationVars.value=educationVar;\r\n      isDropDownVisible.value=false;\r\n      educationValue.value=educationVar\r\n      emit('update:modelValue', SelectedEducationVars);\r\n    }\r\n    const mappedSelectedEducationVars = computed(() => {\r\n      return SelectedEducationVars.value?.name || SelectedEducationVars.value || 'Выбери';\r\n    })\r\n    watch(() => props.modelValue, (newVal) => {\r\n      educationValue.value = newVal\r\n    })\r\n    const closeDropDown=(element)=>{\r\n\r\n      if(!dropDown.value.contains(element.target)){\r\n        isDropDownVisible.value=false;\r\n      }\r\n    }\r\n    onMounted(()=>{\r\n      window.addEventListener('click', closeDropDown)\r\n    })\r\n    onBeforeUnmount(()=>{\r\n      window.removeEventListener('click', closeDropDown)\r\n    })\r\n    return { educationValue, SelectedEducationVars, toggleSelectedEducationVars,  mappedSelectedEducationVars, isDropDownVisible}\r\n  }\r\n}\r\n</script>"],"mappings":";;EACOA,GAAG,EAAC;AAAU;;EADrBC,GAAA;AAAA;mBAAA;;uBACEC,mBAAA,CAoBM,OApBNC,UAoBM,G,4BAnBJC,mBAAA,CAA2B,eAApB,cAAY,sBACvBC,mBAAA,gHAA6G,EACzGD,mBAAA,CAEM;IAFAE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,iBAAiB;sBAC1BD,MAAA,CAAAE,2BAA2B,kBAEpBF,MAAA,CAAAC,iBAAiB,I,cAA5BR,mBAAA,CAIM,OAXVU,UAAA,I,kBAQMV,mBAAA,CAEIW,SAAA,QAVVC,WAAA,CAQyCC,MAAA,CAAAC,aAAa,EARtD,CAQiBC,YAAY,EAAEC,KAAK;yBAA9BhB,mBAAA,CAEI;MAF+CD,GAAG,EAAEiB,KAAK;MAAGZ,OAAK,EAAAE,MAAA,IAAEC,MAAA,CAAAU,2BAA2B,CAACF,YAAY;wBAC1GA,YAAY,CAACG,IAAI,IAAIH,YAAY,wBAT5CI,UAAA;sCAAAhB,mBAAA,gBAYID,mBAAA,CAOM,c,0BANJA,mBAAA,CAA2B,eAApB,cAAY,sB,gBACnBA,mBAAA,CAAkG;IAA3FkB,IAAI,EAAC,MAAM;IAdxB,uBAAAf,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAckCC,MAAA,CAAAc,cAAc,GAAAf,MAAA;IAAGgB,OAAK,EAAAjB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEiB,IAAA,CAAAC,KAAK,sBAAsBjB,MAAA,CAAAc,cAAc;iEAAjEd,MAAA,CAAAc,cAAc,E,6BAC1CnB,mBAAA,CAA2B,eAApB,cAAY,sB,gBACnBA,mBAAA,CAAkG;IAA3FkB,IAAI,EAAC,MAAM;IAhBxB,uBAAAf,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBkCC,MAAA,CAAAc,cAAc,GAAAf,MAAA;IAAGgB,OAAK,EAAAjB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEiB,IAAA,CAAAC,KAAK,sBAAsBjB,MAAA,CAAAc,cAAc;iEAAjEd,MAAA,CAAAc,cAAc,E,6BAC1CnB,mBAAA,CAA2B,eAApB,cAAY,sB,gBACnBA,mBAAA,CAAkG;IAA3FkB,IAAI,EAAC,MAAM;IAlBxB,uBAAAf,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAkBkCC,MAAA,CAAAc,cAAc,GAAAf,MAAA;IAAGgB,OAAK,EAAAjB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEiB,IAAA,CAAAC,KAAK,sBAAsBjB,MAAA,CAAAc,cAAc;iEAAjEd,MAAA,CAAAc,cAAc,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}