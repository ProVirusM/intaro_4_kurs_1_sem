{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, watch, onMounted, defineEmits } from 'vue';\nexport default {\n  props: {\n    modelValue: Object,\n    educationInfo: {\n      type: Array,\n      default: () => []\n    },\n    index: Number\n  },\n  setup(props) {\n    const education = ref({\n      ...props.modelValue\n    });\n    const selectedEducationLevel = ref(education.value.level || 'Среднее');\n    const canRemove = ref(props.educationInfo && props.educationInfo.length > 1);\n    watch(() => props.educationInfo.length, newLength => {\n      canRemove.value = newLength > 1;\n    });\n    watch(education, () => {\n      emit('update:modelValue', education.value);\n    }, {\n      deep: true\n    });\n    watch(selectedEducationLevel, newLevel => {\n      education.value.level = newLevel;\n    });\n    const removeEducation = () => {\n      emit('remove', props.index);\n    };\n    onMounted(() => {\n      if (props.modelValue) {\n        education.value = {\n          ...props.modelValue\n        };\n        selectedEducationLevel.value = props.modelValue.level || 'Среднее';\n      }\n    });\n    ////////////////////////////////////////////////////////////////////////////////////////////////\n    // Объявляем событие для передачи выбранного города в родительский компонент\n    const emit = defineEmits(['update:modelValue']);\n    const searchQuery = ref(\"\"); // Поисковый запрос\n    const selectedOption = ref(null); // Выбранный элемент\n\n    // Фильтрованные опции\n    const filteredOptions = ref([]);\n\n    // Метка для выбранного элемента\n    const selectedLabel = ref(\"Выберите элемент\");\n\n    // Обработчик выбора элемента\n    const selectOption = option => {\n      selectedLabel.value = option.label;\n      selectedOption.value = option;\n      // Отправляем выбранный город родителю\n      emit('update:modelValue', option);\n    };\n\n    // Функция для поиска городов\n    const searchCities = async () => {\n      const params = new URLSearchParams({\n        v: '5.81',\n        country_id: '1',\n        region_id: '0',\n        offset: '0',\n        need_all: '0',\n        count: '10',\n        q: searchQuery.value\n      });\n      try {\n        const response = await fetch(`/api/method/database.getCities?${params}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': 'Bearer 95d4a79995d4a79995d4a799df96cb3f6e995d495d4a799f329b17073154c54fe52893a'\n          }\n        });\n        const data = await response.json();\n        if (data.response && data.response.items) {\n          filteredOptions.value = filterCities(data.response.items);\n        }\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      }\n    };\n\n    // Фильтрация полученных данных\n    const filterCities = cities => {\n      return cities.map(city => ({\n        label: city.title,\n        id: city.id\n      }));\n    };\n    /////////////////////////////////////////////////////////////////////////\n    // Стейт для университетов и поискового запроса\n    //const universities = ref([]);\n    //const filteredOptions = ref([]);\n    //const selectedLabel = ref(\"Выберите учебное заведение\");\n    //const searchQuery = ref(\"\");\n\n    // Функция для поиска университетов\n    const searchUniversities = async () => {\n      if (!searchQuery.value.trim()) {\n        filteredOptions.value = [];\n        return;\n      }\n      const params = new URLSearchParams({\n        q: searchQuery.value,\n        v: '5.131',\n        // Версия API VK\n        count: '10' // Ограничение на количество результатов\n      });\n      try {\n        const response = await fetch(`https://api.vk.com/method/database.getUniversities?${params.toString()}&access_token=95d4a79995d4a79995d4a799df96cb3f6e995d495d4a799f329b17073154c54fe52893a`);\n        const data = await response.json();\n        if (data.response && data.response.items) {\n          filteredOptions.value = data.response.items.map(item => ({\n            label: item.title,\n            id: item.id\n          }));\n        } else {\n          filteredOptions.value = [];\n        }\n      } catch (error) {\n        console.error('Error fetching universities:', error);\n      }\n    };\n\n    // Функция для выбора учебного заведения\n    // const selectOption = (option) => {\n    //   selectedLabel.value = option.label;\n    //   education.value.institution = option.label; // Заполняем название учебного заведения\n    //   filteredOptions.value = []; // Очищаем список после выбора\n    //   emit('update:modelValue', education.value);\n    // };\n\n    return {\n      selectedEducationLevel,\n      education,\n      removeEducation,\n      canRemove,\n      searchUniversities,\n      filteredOptions,\n      selectedLabel,\n      selectOption,\n      searchQuery\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","defineEmits","props","modelValue","Object","educationInfo","type","Array","default","index","Number","setup","education","selectedEducationLevel","value","level","canRemove","length","newLength","emit","deep","newLevel","removeEducation","searchQuery","selectedOption","filteredOptions","selectedLabel","selectOption","option","label","searchCities","params","URLSearchParams","v","country_id","region_id","offset","need_all","count","q","response","fetch","method","headers","data","json","items","filterCities","error","console","cities","map","city","title","id","searchUniversities","trim","toString","item"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\EducationInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"education-input\">\r\n    <label for=\"education-level\">Уровень образования:</label>\r\n    <select v-model=\"selectedEducationLevel\" id=\"education-level\">\r\n      <option value=\"Среднее\">Среднее</option>\r\n      <option value=\"Среднее специальное\">Среднее специальное</option>\r\n      <option value=\"Неоконченное высшее\">Неоконченное высшее</option>\r\n      <option value=\"Высшее\">Высшее</option>\r\n    </select>\r\n\r\n    <div v-if=\"selectedEducationLevel !== 'Среднее'\">\r\n      <div class=\"education-fields\">\r\n        <label for=\"institution\">Учебное заведение:</label>\r\n        <div class=\"dropdown mb-3\" id=\"dd\" style=\"position: relative;\">\r\n          <button\r\n              class=\"btn btn-outline-primary dropdown-toggle w-100 text-start\"\r\n              type=\"button\"\r\n              id=\"dropdownMenuButton\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n          >\r\n            {{ selectedLabel }}\r\n          </button>\r\n          <ul class=\"dropdown-menu w-100\" aria-labelledby=\"dropdownMenuButton\">\r\n            <!-- Поле для поиска -->\r\n            <li class=\"p-2\">\r\n              <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  v-model=\"searchQuery\"\r\n                  @input=\"searchCities\"\r\n                  placeholder=\"Поиск...\"\r\n              />\r\n            </li>\r\n            <li>\r\n              <hr class=\"dropdown-divider\" />\r\n            </li>\r\n            <!-- Список опций -->\r\n            <li\r\n                v-for=\"option in filteredOptions\"\r\n                :key=\"option.id\"\r\n                class=\"dropdown-item\"\r\n                @click=\"selectOption(option)\"\r\n            >\r\n              {{ option.label }}\r\n            </li>\r\n            <!-- Если опций нет -->\r\n            <li v-if=\"filteredOptions.length === 0\" class=\"dropdown-item text-muted\">\r\n              Ничего не найдено\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <label for=\"faculty\">Факультет:</label>\r\n        <input v-model=\"education.faculty\" id=\"faculty\" type=\"text\" placeholder=\"Введите факультет\" />\r\n\r\n        <label for=\"specialization\">Специализация:</label>\r\n        <input v-model=\"education.specialization\" id=\"specialization\" type=\"text\" placeholder=\"Введите специализацию\" />\r\n\r\n        <label for=\"yearOfGraduation\">Год окончания:</label>\r\n        <input v-model=\"education.yearOfGraduation\" id=\"yearOfGraduation\" type=\"date\" placeholder=\"Выберите год окончания\" />\r\n      </div>\r\n    </div>\r\n\r\n    <button v-if=\"canRemove\" @click=\"removeEducation\" class=\"remove-education-btn\">×</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, onMounted, defineEmits } from 'vue';\r\n\r\nexport default {\r\n  props: {\r\n    modelValue: Object,\r\n    educationInfo: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    index: Number,\r\n  },\r\n  setup(props) {\r\n    const education = ref({ ...props.modelValue });\r\n    const selectedEducationLevel = ref(education.value.level || 'Среднее');\r\n    const canRemove = ref(props.educationInfo && props.educationInfo.length > 1);\r\n\r\n    watch(() => props.educationInfo.length, (newLength) => {\r\n      canRemove.value = newLength > 1;\r\n    });\r\n\r\n    watch(education, () => {\r\n      emit('update:modelValue', education.value);\r\n    }, { deep: true });\r\n\r\n    watch(selectedEducationLevel, (newLevel) => {\r\n      education.value.level = newLevel;\r\n    });\r\n\r\n    const removeEducation = () => {\r\n      emit('remove', props.index);\r\n    };\r\n\r\n    onMounted(() => {\r\n      if (props.modelValue) {\r\n        education.value = { ...props.modelValue };\r\n        selectedEducationLevel.value = props.modelValue.level || 'Среднее';\r\n      }\r\n    });\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Объявляем событие для передачи выбранного города в родительский компонент\r\n    const emit = defineEmits(['update:modelValue']);\r\n\r\n    const searchQuery = ref(\"\"); // Поисковый запрос\r\n    const selectedOption = ref(null); // Выбранный элемент\r\n\r\n// Фильтрованные опции\r\n    const filteredOptions = ref([]);\r\n\r\n// Метка для выбранного элемента\r\n    const selectedLabel = ref(\"Выберите элемент\");\r\n\r\n// Обработчик выбора элемента\r\n    const selectOption = (option) => {\r\n      selectedLabel.value = option.label;\r\n      selectedOption.value = option;\r\n      // Отправляем выбранный город родителю\r\n      emit('update:modelValue', option);\r\n    };\r\n\r\n// Функция для поиска городов\r\n    const searchCities = async () => {\r\n      const params = new URLSearchParams({\r\n        v: '5.81',\r\n        country_id: '1',\r\n        region_id: '0',\r\n        offset: '0',\r\n        need_all: '0',\r\n        count: '10',\r\n        q: searchQuery.value\r\n      });\r\n\r\n      try {\r\n        const response = await fetch(`/api/method/database.getCities?${params}`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            'Authorization': 'Bearer 95d4a79995d4a79995d4a799df96cb3f6e995d495d4a799f329b17073154c54fe52893a'\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        if (data.response && data.response.items) {\r\n          filteredOptions.value = filterCities(data.response.items);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching cities:', error);\r\n      }\r\n    };\r\n\r\n// Фильтрация полученных данных\r\n    const filterCities = (cities) => {\r\n      return cities.map(city => ({\r\n        label: city.title,\r\n        id: city.id\r\n      }));\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////\r\n    // Стейт для университетов и поискового запроса\r\n    //const universities = ref([]);\r\n    //const filteredOptions = ref([]);\r\n    //const selectedLabel = ref(\"Выберите учебное заведение\");\r\n    //const searchQuery = ref(\"\");\r\n\r\n    // Функция для поиска университетов\r\n    const searchUniversities = async () => {\r\n      if (!searchQuery.value.trim()) {\r\n        filteredOptions.value = [];\r\n        return;\r\n      }\r\n\r\n      const params = new URLSearchParams({\r\n        q: searchQuery.value,\r\n        v: '5.131', // Версия API VK\r\n        count: '10', // Ограничение на количество результатов\r\n      });\r\n\r\n      try {\r\n        const response = await fetch(\r\n            `https://api.vk.com/method/database.getUniversities?${params.toString()}&access_token=95d4a79995d4a79995d4a799df96cb3f6e995d495d4a799f329b17073154c54fe52893a`\r\n        );\r\n        const data = await response.json();\r\n\r\n        if (data.response && data.response.items) {\r\n          filteredOptions.value = data.response.items.map(item => ({\r\n            label: item.title,\r\n            id: item.id\r\n          }));\r\n        } else {\r\n          filteredOptions.value = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching universities:', error);\r\n      }\r\n    };\r\n\r\n    // Функция для выбора учебного заведения\r\n    // const selectOption = (option) => {\r\n    //   selectedLabel.value = option.label;\r\n    //   education.value.institution = option.label; // Заполняем название учебного заведения\r\n    //   filteredOptions.value = []; // Очищаем список после выбора\r\n    //   emit('update:modelValue', education.value);\r\n    // };\r\n\r\n    return {\r\n      selectedEducationLevel,\r\n      education,\r\n      removeEducation,\r\n      canRemove,\r\n      searchUniversities,\r\n      filteredOptions,\r\n      selectedLabel,\r\n      selectOption,\r\n      searchQuery\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для кнопки и выпадающего меню */\r\n.dropdown-toggle {\r\n  background-color: #ffffff;\r\n  border-color: #cccccc;\r\n  color: #333333;\r\n  font-weight: 500;\r\n}\r\n\r\n.dropdown-toggle:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);\r\n}\r\n\r\n.dropdown-menu {\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.dropdown-item {\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f8f9fa;\r\n  color: #007bff;\r\n}\r\n\r\n.dropdown-item:active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.text-muted {\r\n  color: #6c757d !important;\r\n}\r\n\r\n/* Стили для поля поиска */\r\n.form-control {\r\n  font-size: 14px;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.form-control:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);\r\n}\r\n\r\n/* Дополнительные стили */\r\n.label {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}