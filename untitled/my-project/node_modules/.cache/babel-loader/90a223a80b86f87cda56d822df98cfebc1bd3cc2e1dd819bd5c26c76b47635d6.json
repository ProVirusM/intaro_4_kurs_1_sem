{"ast":null,"code":"import { ref, watch } from 'vue';\nexport default {\n  props: {\n    modelValue: String\n  },\n  setup(props, {\n    emit\n  }) {\n    const phoneValue = ref(props.modelValue);\n    const error = ref(null);\n    const validateInput = () => {\n      const phonePattern = /^\\+7\\d{10}$/;\n      if (!phoneValue.value) {\n        error.value = \"Поле 'Номер телефона' обязательно для заполнения.\";\n      } else if (!phoneValue.value.startsWith(\"+7\")) {\n        error.value = \"Номер телефона должен начинаться с +7.\";\n      } else if (!phonePattern.test(phoneValue.value)) {\n        error.value = \"Введите корректный номер телефона в формате +7XXXXXXXXXX.\";\n      } else {\n        error.value = null;\n      }\n      emit('update:modelValue', phoneValue.value);\n    };\n    // Обновляем значение, если оно меняется из основного компонента\n    watch(() => props.modelValue, newVal => {\n      phoneValue.value = newVal;\n      validateInput();\n    });\n    return {\n      phoneValue,\n      error,\n      validateInput\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","props","modelValue","String","setup","emit","phoneValue","error","validateInput","phonePattern","value","startsWith","test","newVal"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\PhoneInput.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label>Телефон:</label>\r\n    <input type=\"tel\" v-model=\"phoneValue\" @input=\"validateInput\" :class=\"{'input-error': error}\" />\r\n    <small v-if=\"error\" class=\"error-note\" >{{error}}</small>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch } from 'vue'\r\n\r\nexport default {\r\n  props: {\r\n    modelValue: String\r\n  },\r\n  setup(props, {emit}) {\r\n    const phoneValue = ref(props.modelValue)\r\n    const error=ref(null)\r\n    const validateInput=()=>{\r\n      const phonePattern=/^\\+7\\d{10}$/\r\n      if (!phoneValue.value) {\r\n        error.value = \"Поле 'Номер телефона' обязательно для заполнения.\"\r\n      } else if (!phoneValue.value.startsWith(\"+7\")) {\r\n        error.value = \"Номер телефона должен начинаться с +7.\"\r\n      } else if (!phonePattern.test(phoneValue.value)) {\r\n        error.value = \"Введите корректный номер телефона в формате +7XXXXXXXXXX.\"\r\n      } else {\r\n        error.value = null\r\n      }\r\n      emit('update:modelValue', phoneValue.value)\r\n    }\r\n    // Обновляем значение, если оно меняется из основного компонента\r\n    watch(() => props.modelValue, (newVal) => {\r\n      phoneValue.value = newVal\r\n      validateInput()\r\n    })\r\n\r\n    return { phoneValue, error, validateInput }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ninput {\r\n  padding: 8px;\r\n  margin-top: 4px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n.input-error {\r\n  border-color: red;\r\n}\r\n\r\n.error-note {\r\n  color: red;\r\n  font-size: 0.8em;\r\n  margin-top: 4px;\r\n}\r\n</style>\r\n"],"mappings":"AASA,SAASA,GAAG,EAAEC,KAAI,QAAS,KAAI;AAE/B,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAEC;EACd,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IAACI;EAAI,CAAC,EAAE;IACnB,MAAMC,UAAS,GAAIP,GAAG,CAACE,KAAK,CAACC,UAAU;IACvC,MAAMK,KAAK,GAACR,GAAG,CAAC,IAAI;IACpB,MAAMS,aAAa,GAACA,CAAA,KAAI;MACtB,MAAMC,YAAY,GAAC,aAAY;MAC/B,IAAI,CAACH,UAAU,CAACI,KAAK,EAAE;QACrBH,KAAK,CAACG,KAAI,GAAI,mDAAkD;MAClE,OAAO,IAAI,CAACJ,UAAU,CAACI,KAAK,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC7CJ,KAAK,CAACG,KAAI,GAAI,wCAAuC;MACvD,OAAO,IAAI,CAACD,YAAY,CAACG,IAAI,CAACN,UAAU,CAACI,KAAK,CAAC,EAAE;QAC/CH,KAAK,CAACG,KAAI,GAAI,2DAA0D;MAC1E,OAAO;QACLH,KAAK,CAACG,KAAI,GAAI,IAAG;MACnB;MACAL,IAAI,CAAC,mBAAmB,EAAEC,UAAU,CAACI,KAAK;IAC5C;IACA;IACAV,KAAK,CAAC,MAAMC,KAAK,CAACC,UAAU,EAAGW,MAAM,IAAK;MACxCP,UAAU,CAACI,KAAI,GAAIG,MAAK;MACxBL,aAAa,CAAC;IAChB,CAAC;IAED,OAAO;MAAEF,UAAU;MAAEC,KAAK;MAAEC;IAAc;EAC5C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}