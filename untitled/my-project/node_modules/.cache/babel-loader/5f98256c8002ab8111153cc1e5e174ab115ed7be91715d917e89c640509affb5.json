{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, watch, onMounted, defineEmits } from 'vue';\nexport default {\n  props: {\n    modelValue: Object,\n    educationInfo: {\n      type: Array,\n      default: () => []\n    },\n    index: Number\n  },\n  setup(props, {\n    emit\n  }) {\n    const education = ref({\n      ...props.modelValue\n    });\n    const selectedEducationLevel = ref(education.value.level || 'Среднее');\n    const canRemove = ref(props.educationInfo && props.educationInfo.length > 1);\n    watch(() => props.educationInfo.length, newLength => {\n      canRemove.value = newLength > 1;\n    });\n    watch(education, () => {\n      emit('update:modelValue', education.value);\n    }, {\n      deep: true\n    });\n    watch(selectedEducationLevel, newLevel => {\n      education.value.level = newLevel;\n    });\n    const removeEducation = () => {\n      emit('remove', props.index);\n    };\n    onMounted(() => {\n      if (props.modelValue) {\n        education.value = {\n          ...props.modelValue\n        };\n        selectedEducationLevel.value = props.modelValue.level || 'Среднее';\n      }\n    });\n\n    // Университеты, найденные через VK API\n    const universities = ref([]);\n    const showSuggestions = ref(false);\n    const searchUniversities = async () => {\n      if (!education.value.institution.trim()) {\n        universities.value = [];\n        showSuggestions.value = false;\n        return;\n      }\n      showSuggestions.value = true;\n      const params = new URLSearchParams({\n        q: education.value.institution,\n        v: '5.131',\n        count: '10'\n      });\n      try {\n        const response = await fetch(`https://api.vk.com/method/database.getUniversities?${params.toString()}&access_token=YOUR_ACCESS_TOKEN`);\n        const data = await response.json();\n        if (data.response && data.response.items) {\n          universities.value = data.response.items;\n        } else {\n          universities.value = [];\n        }\n      } catch (error) {\n        console.error('Error fetching universities:', error);\n      }\n    };\n    const selectUniversity = university => {\n      education.value.institution = university.title;\n      universities.value = [];\n      showSuggestions.value = false;\n    };\n    const onInputFocus = () => {\n      if (education.value.institution.trim() !== '') {\n        showSuggestions.value = true;\n      }\n    };\n    const filteredOptions = ref([]);\n    const selectedLabel = ref(\"Выберите учебное заведение\");\n    const selectOption = option => {\n      selectedLabel.value = option.label;\n      filteredOptions.value = [option]; // Выбираем один элемент\n      emit('update:modelValue', option); // Отправляем родителю выбранное значение\n    };\n    return {\n      selectedEducationLevel,\n      education,\n      removeEducation,\n      canRemove,\n      searchUniversities,\n      universities,\n      selectUniversity,\n      showSuggestions,\n      onInputFocus,\n      filteredOptions,\n      selectedLabel,\n      selectOption\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","defineEmits","props","modelValue","Object","educationInfo","type","Array","default","index","Number","setup","emit","education","selectedEducationLevel","value","level","canRemove","length","newLength","deep","newLevel","removeEducation","universities","showSuggestions","searchUniversities","institution","trim","params","URLSearchParams","q","v","count","response","fetch","toString","data","json","items","error","console","selectUniversity","university","title","onInputFocus","filteredOptions","selectedLabel","selectOption","option","label"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\EducationInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"education-input\">\r\n    <label for=\"education-level\">Уровень образования:</label>\r\n    <select v-model=\"selectedEducationLevel\" id=\"education-level\">\r\n      <option value=\"Среднее\">Среднее</option>\r\n      <option value=\"Среднее специальное\">Среднее специальное</option>\r\n      <option value=\"Неоконченное высшее\">Неоконченное высшее</option>\r\n      <option value=\"Высшее\">Высшее</option>\r\n    </select>\r\n\r\n    <div v-if=\"selectedEducationLevel !== 'Среднее'\">\r\n      <div class=\"education-fields\">\r\n        <label for=\"institution\">Учебное заведение:</label>\r\n        <div class=\"dropdown mb-3\" id=\"dd\" style=\"position: relative;\">\r\n          <button\r\n              class=\"btn btn-outline-primary dropdown-toggle w-100 text-start\"\r\n              type=\"button\"\r\n              id=\"dropdownMenuButton\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n          >\r\n            {{ selectedLabel }}\r\n          </button>\r\n          <ul class=\"dropdown-menu w-100\" aria-labelledby=\"dropdownMenuButton\">\r\n            <!-- Поле для поиска -->\r\n            <li class=\"p-2\">\r\n              <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  v-model=\"searchQuery\"\r\n                  @input=\"searchUniversities\"\r\n                  placeholder=\"Поиск...\"\r\n              />\r\n            </li>\r\n            <li>\r\n              <hr class=\"dropdown-divider\" />\r\n            </li>\r\n            <!-- Список опций -->\r\n            <li\r\n                v-for=\"option in filteredOptions\"\r\n                :key=\"option.id\"\r\n                class=\"dropdown-item\"\r\n                @click=\"selectOption(option)\"\r\n            >\r\n              {{ option.label }}\r\n            </li>\r\n            <!-- Если опций нет -->\r\n            <li v-if=\"filteredOptions.length === 0\" class=\"dropdown-item text-muted\">\r\n              Ничего не найдено\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <label for=\"faculty\">Факультет:</label>\r\n        <input v-model=\"education.faculty\" id=\"faculty\" type=\"text\" placeholder=\"Введите факультет\" />\r\n\r\n        <label for=\"specialization\">Специализация:</label>\r\n        <input v-model=\"education.specialization\" id=\"specialization\" type=\"text\" placeholder=\"Введите специализацию\" />\r\n\r\n        <label for=\"yearOfGraduation\">Год окончания:</label>\r\n        <input v-model=\"education.yearOfGraduation\" id=\"yearOfGraduation\" type=\"date\" placeholder=\"Выберите год окончания\" />\r\n      </div>\r\n    </div>\r\n\r\n    <button v-if=\"canRemove\" @click=\"removeEducation\" class=\"remove-education-btn\">×</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, onMounted, defineEmits } from 'vue';\r\n\r\nexport default {\r\n  props: {\r\n    modelValue: Object,\r\n    educationInfo: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    index: Number,\r\n  },\r\n  setup(props, { emit }) {\r\n    const education = ref({ ...props.modelValue });\r\n    const selectedEducationLevel = ref(education.value.level || 'Среднее');\r\n    const canRemove = ref(props.educationInfo && props.educationInfo.length > 1);\r\n\r\n    watch(() => props.educationInfo.length, (newLength) => {\r\n      canRemove.value = newLength > 1;\r\n    });\r\n\r\n    watch(education, () => {\r\n      emit('update:modelValue', education.value);\r\n    }, { deep: true });\r\n\r\n    watch(selectedEducationLevel, (newLevel) => {\r\n      education.value.level = newLevel;\r\n    });\r\n\r\n    const removeEducation = () => {\r\n      emit('remove', props.index);\r\n    };\r\n\r\n    onMounted(() => {\r\n      if (props.modelValue) {\r\n        education.value = { ...props.modelValue };\r\n        selectedEducationLevel.value = props.modelValue.level || 'Среднее';\r\n      }\r\n    });\r\n\r\n    // Университеты, найденные через VK API\r\n    const universities = ref([]);\r\n    const showSuggestions = ref(false);\r\n\r\n    const searchUniversities = async () => {\r\n      if (!education.value.institution.trim()) {\r\n        universities.value = [];\r\n        showSuggestions.value = false;\r\n        return;\r\n      }\r\n\r\n      showSuggestions.value = true;\r\n\r\n      const params = new URLSearchParams({\r\n        q: education.value.institution,\r\n        v: '5.131',\r\n        count: '10',\r\n      });\r\n\r\n      try {\r\n        const response = await fetch(\r\n            `https://api.vk.com/method/database.getUniversities?${params.toString()}&access_token=YOUR_ACCESS_TOKEN`\r\n        );\r\n        const data = await response.json();\r\n\r\n        if (data.response && data.response.items) {\r\n          universities.value = data.response.items;\r\n        } else {\r\n          universities.value = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching universities:', error);\r\n      }\r\n    };\r\n\r\n    const selectUniversity = (university) => {\r\n      education.value.institution = university.title;\r\n      universities.value = [];\r\n      showSuggestions.value = false;\r\n    };\r\n\r\n    const onInputFocus = () => {\r\n      if (education.value.institution.trim() !== '') {\r\n        showSuggestions.value = true;\r\n      }\r\n    };\r\n\r\n    const filteredOptions = ref([]);\r\n    const selectedLabel = ref(\"Выберите учебное заведение\");\r\n\r\n    const selectOption = (option) => {\r\n      selectedLabel.value = option.label;\r\n      filteredOptions.value = [option]; // Выбираем один элемент\r\n      emit('update:modelValue', option); // Отправляем родителю выбранное значение\r\n    };\r\n\r\n    return {\r\n      selectedEducationLevel,\r\n      education,\r\n      removeEducation,\r\n      canRemove,\r\n      searchUniversities,\r\n      universities,\r\n      selectUniversity,\r\n      showSuggestions,\r\n      onInputFocus,\r\n      filteredOptions,\r\n      selectedLabel,\r\n      selectOption,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Добавьте свои стили здесь */\r\n</style>\r\n\r\n\r\n<style scoped>\r\nselect {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 1em;\r\n}\r\n\r\n.education-input {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.education-fields {\r\n  margin-top: 10px;\r\n}\r\n\r\n.education-fields input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin: 5px 0;\r\n}\r\n\r\n.remove-education-btn {\r\n  margin-top: 10px;\r\n  padding: 8px;\r\n  background-color: #ff4d4d;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  line-height: 1;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.remove-education-btn:hover {\r\n  background-color: #d13636;\r\n}\r\n\r\n.autocomplete-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  max-height: 150px;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  background-color: #fff;\r\n  position: absolute;\r\n  width: 100%;\r\n  z-index: 100;\r\n}\r\n\r\n.autocomplete-list li {\r\n  padding: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.autocomplete-list li:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}