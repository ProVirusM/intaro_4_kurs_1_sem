{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"homepage\"\n};\nconst _hoisted_2 = {\n  class: \"columns\"\n};\nconst _hoisted_3 = [\"data-status\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_draggable = _resolveComponent(\"draggable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.columns, column => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: column.status,\n      class: \"column\",\n      \"data-status\": column.status\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(column.label) + \" (\" + _toDisplayString($options.resumesByStatusMap[column.status]?.length || 0) + \")\", 1 /* TEXT */), _createCommentVNode(\" Обновленный draggable \"), (_openBlock(), _createBlock(_component_draggable, {\n      modelValue: $options.resumesByStatusMap[column.status],\n      \"onUpdate:modelValue\": $event => $options.resumesByStatusMap[column.status] = $event,\n      onStart: $options.onDragStart,\n      onEnd: $options.onDragEnd,\n      group: \"resumes\",\n      key: column.status\n    }, {\n      item: _withCtx(({\n        element\n      }) => [(_openBlock(), _createElementBlock(\"div\", {\n        key: element._id,\n        class: \"resume-card\",\n        onClick: $event => _ctx.$router.push(`/edit/${element._id}`)\n      }, [_createElementVNode(\"img\", {\n        src: element.photo,\n        alt: \"Фото\"\n      }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(element.profession), 1 /* TEXT */)]), _createElementVNode(\"p\", null, _toDisplayString(element.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($options.getAge(element.birthday)) + \" лет\", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_4))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onStart\", \"onEnd\"]))], 8 /* PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","columns","column","key","status","_toDisplayString","label","$options","resumesByStatusMap","length","_createCommentVNode","_createBlock","_component_draggable","modelValue","$event","onStart","onDragStart","onEnd","onDragEnd","group","item","_withCtx","element","_id","onClick","_ctx","$router","push","src","photo","alt","_hoisted_5","profession","name","getAge","birthday","_hoisted_4","_","_hoisted_3"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"homepage\">\r\n    <div class=\"columns\">\r\n      <div v-for=\"column in columns\" :key=\"column.status\" class=\"column\" :data-status=\"column.status\">\r\n        <h3>{{ column.label }} ({{ resumesByStatusMap[column.status]?.length || 0 }})</h3>\r\n\r\n        <!-- Обновленный draggable -->\r\n        <draggable\r\n            v-model=\"resumesByStatusMap[column.status]\"\r\n            @start=\"onDragStart\"\r\n            @end=\"onDragEnd\"\r\n            group=\"resumes\"\r\n            :key=\"column.status\"\r\n        >\r\n          <template #item=\"{ element }\">\r\n            <div\r\n                :key=\"element._id\"\r\n                class=\"resume-card\"\r\n                @click=\"$router.push(`/edit/${element._id}`)\"\r\n            >\r\n              <img :src=\"element.photo\" alt=\"Фото\" />\r\n              <p><strong>{{ element.profession }}</strong></p>\r\n              <p>{{ element.name }}</p>\r\n              <p>{{ getAge(element.birthday) }} лет</p>\r\n            </div>\r\n          </template>\r\n        </draggable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\nimport draggable from 'vuedraggable';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: { draggable },\r\n  name: \"HomePage\",\r\n  data() {\r\n    return {\r\n      columns: [\r\n        { status: 'Новый', label: 'Новый' },\r\n        { status: 'Назначено собеседование', label: 'Назначено собеседование' },\r\n        { status: 'Принят', label: 'Принят' },\r\n        { status: 'Отказ', label: 'Отказ' },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['resumesByStatus']), // Получаем резюме из Vuex\r\n\r\n    resumesByStatusMap() {\r\n      const map = {\r\n        'Новый': [],\r\n        'Назначено собеседование': [],\r\n        'Принят': [],\r\n        'Отказ': [],\r\n      };\r\n\r\n      // Группируем резюме по статусам\r\n      this.resumesByStatus.forEach((resume) => {\r\n        if (map[resume.status]) {\r\n          map[resume.status].push(resume);\r\n        }\r\n      });\r\n\r\n      return map;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchResumes']), // Подключаем действия Vuex\r\n\r\n    getAge(birthday) {\r\n      const birthDate = new Date(birthday);\r\n      const ageDifMs = Date.now() - birthDate.getTime();\r\n      const ageDate = new Date(ageDifMs);\r\n      return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    },\r\n\r\n    // Событие при начале перетаскивания\r\n    onDragStart(event) {\r\n      console.log('Начало перетаскивания', event);\r\n    },\r\n\r\n    // Событие при завершении перетаскивания\r\n    async onDragEnd(event) {\r\n      const {element, to} = event;\r\n      const newStatus = to.dataset.status; // Получаем новый статус из data-атрибута колонки\r\n\r\n      console.log('Элемент перед обновлением:', element);\r\n      console.log('Новый статус:', newStatus);\r\n\r\n      // Если статус изменился\r\n      if (newStatus && element.status !== newStatus) {\r\n        try {\r\n          // Отправляем запрос на сервер для обновления статуса\r\n          const response = await axios.post(`http://localhost:3000/api/cv/${element._id}/status/update`, {status: newStatus});\r\n\r\n          if (response.status === 200) {\r\n            console.log(`Резюме ${element._id} перемещено в статус \"${newStatus}\"`);\r\n\r\n            // Обновляем статус в Vuex после успешного обновления на сервере\r\n            this.$store.commit('updateResumeStatus', {id: element._id, status: newStatus});\r\n          }\r\n        } catch (error) {\r\n          console.error('Ошибка обновления статуса:', error);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchResumes(); // Загружаем резюме при создании компонента\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для колонок и карточек */\r\n.new-resume-btn {\r\n  padding: 10px 20px;\r\n  background-color: #007acc;\r\n  color: white;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.new-resume-btn:hover {\r\n  background-color: #005f99;\r\n}\r\n\r\n.columns {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.column {\r\n  width: 22%;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh3 {\r\n  font-size: 1.2em;\r\n  color: #007acc;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.resume-card {\r\n  background-color: #f9f9f9;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.resume-card img {\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.resume-card p {\r\n  margin: 5px 0;\r\n}\r\n\r\n.column h3 {\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAS;mBAFxB;mBAAA;mBAAA;;;uBACEC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,CA0BM,OA1BNC,UA0BM,I,kBAzBJH,mBAAA,CAwBMI,SAAA,QA3BZC,WAAA,CAG4BC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAlBR,mBAAA,CAwBM;MAxB0BS,GAAG,EAAED,MAAM,CAACE,MAAM;MAAEX,KAAK,EAAC,QAAQ;MAAE,aAAW,EAAES,MAAM,CAACE;QACtFR,mBAAA,CAAkF,YAAAS,gBAAA,CAA3EH,MAAM,CAACI,KAAK,IAAG,IAAE,GAAAD,gBAAA,CAAGE,QAAA,CAAAC,kBAAkB,CAACN,MAAM,CAACE,MAAM,GAAGK,MAAM,SAAQ,GAAC,iBAE7EC,mBAAA,2BAA8B,G,cAC9BC,YAAA,CAmBYC,oBAAA;MA1BpBC,UAAA,EAQqBN,QAAA,CAAAC,kBAAkB,CAACN,MAAM,CAACE,MAAM;MARrD,uBAAAU,MAAA,IAQqBP,QAAA,CAAAC,kBAAkB,CAACN,MAAM,CAACE,MAAM,IAAAU,MAAA;MACxCC,OAAK,EAAER,QAAA,CAAAS,WAAW;MAClBC,KAAG,EAAEV,QAAA,CAAAW,SAAS;MACfC,KAAK,EAAC,SAAS;MACdhB,GAAG,EAAED,MAAM,CAACE;;MAEJgB,IAAI,EAAAC,QAAA,CACb,CASM;QAVWC;MAAO,Q,cACxB5B,mBAAA,CASM;QARDS,GAAG,EAAEmB,OAAO,CAACC,GAAG;QACjB9B,KAAK,EAAC,aAAa;QAClB+B,OAAK,EAAAV,MAAA,IAAEW,IAAA,CAAAC,OAAO,CAACC,IAAI,UAAUL,OAAO,CAACC,GAAG;UAE3C3B,mBAAA,CAAuC;QAAjCgC,GAAG,EAAEN,OAAO,CAACO,KAAK;QAAEC,GAAG,EAAC;8BApB5CC,UAAA,GAqBcnC,mBAAA,CAAgD,YAA7CA,mBAAA,CAAyC,gBAAAS,gBAAA,CAA9BiB,OAAO,CAACU,UAAU,iB,GAChCpC,mBAAA,CAAyB,WAAAS,gBAAA,CAAnBiB,OAAO,CAACW,IAAI,kBAClBrC,mBAAA,CAAyC,WAAAS,gBAAA,CAAnCE,QAAA,CAAA2B,MAAM,CAACZ,OAAO,CAACa,QAAQ,KAAI,MAAI,gB,iBAvBnDC,UAAA,G;MAAAC,CAAA;qHAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}