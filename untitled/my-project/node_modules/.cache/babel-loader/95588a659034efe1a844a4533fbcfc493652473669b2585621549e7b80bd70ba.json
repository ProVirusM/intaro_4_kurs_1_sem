{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"resume-list\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Список резюме\", -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Загрузка...\")) : $data.resumes.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Нет резюме для отображения\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.resumes, resume => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: resume._id\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"h3\", null, _toDisplayString(resume.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Профессия: \" + _toDisplayString(resume.profession), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Город: \" + _toDisplayString(resume.city), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Статус: \" + _toDisplayString(resume.status), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.viewResume(resume._id)\n    }, \"Подробнее\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","resumes","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","resume","_id","_toDisplayString","name","profession","city","status","onClick","$event","$options","viewResume","_hoisted_5"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\ResumeList.vue"],"sourcesContent":["<template>\r\n  <div class=\"resume-list\">\r\n    <h2>Список резюме</h2>\r\n    <div v-if=\"loading\">Загрузка...</div>\r\n    <div v-else-if=\"resumes.length === 0\">Нет резюме для отображения</div>\r\n    <div v-else>\r\n      <ul>\r\n        <li v-for=\"resume in resumes\" :key=\"resume._id\">\r\n          <div>\r\n            <h3>{{ resume.name }}</h3>\r\n            <p>Профессия: {{ resume.profession }}</p>\r\n            <p>Город: {{ resume.city }}</p>\r\n            <p>Статус: {{ resume.status }}</p>\r\n            <button @click=\"viewResume(resume._id)\">Подробнее</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"ResumeList\",\r\n  data() {\r\n    return {\r\n      resumes: [],  // Массив для хранения всех резюме\r\n      loading: true,  // Статус загрузки\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchResumes() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/api/cv\");  // Запрос к серверу\r\n        this.resumes = response.data;  // Записываем полученные резюме в массив\r\n      } catch (error) {\r\n        console.error(\"Ошибка при получении резюме:\", error);\r\n      } finally {\r\n        this.loading = false;  // Завершаем загрузку\r\n      }\r\n    },\r\n    viewResume(resumeId) {\r\n      // Этот метод можно использовать для перехода на страницу с деталями резюме\r\n      alert(`Просмотр резюме с ID: ${resumeId}`);\r\n    }\r\n  },\r\n  onMounted() {\r\n    this.fetchResumes();  // Запрос всех резюме при монтировании компонента\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.resume-list {\r\n  margin: 20px;\r\n}\r\n\r\n.resume-list h2 {\r\n  font-size: 1.5em;\r\n  color: #007acc;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.resume-list ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.resume-list li {\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.resume-list h3 {\r\n  font-size: 1.2em;\r\n  margin: 0;\r\n}\r\n\r\n.resume-list p {\r\n  margin: 5px 0;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #007acc;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #005fa3;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAD1BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;mBAAA;;uBACEC,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAhBJC,mBAAA,CAAsB,YAAlB,eAAa,sBACNC,KAAA,CAAAC,OAAO,I,cAAlBJ,mBAAA,CAAqC,OAHzCK,UAAA,EAGwB,aAAW,KACfF,KAAA,CAAAG,OAAO,CAACC,MAAM,U,cAA9BP,mBAAA,CAAsE,OAJ1EQ,UAAA,EAI0C,4BAA0B,M,cAChER,mBAAA,CAYM,OAjBVS,UAAA,GAMMP,mBAAA,CAUK,c,kBATHF,mBAAA,CAQKU,SAAA,QAfbC,WAAA,CAO6BR,KAAA,CAAAG,OAAO,EAAjBM,MAAM;yBAAjBZ,mBAAA,CAQK;MAR0BD,GAAG,EAAEa,MAAM,CAACC;QACzCX,mBAAA,CAMM,cALJA,mBAAA,CAA0B,YAAAY,gBAAA,CAAnBF,MAAM,CAACG,IAAI,kBAClBb,mBAAA,CAAyC,WAAtC,aAAW,GAAAY,gBAAA,CAAGF,MAAM,CAACI,UAAU,kBAClCd,mBAAA,CAA+B,WAA5B,SAAO,GAAAY,gBAAA,CAAGF,MAAM,CAACK,IAAI,kBACxBf,mBAAA,CAAkC,WAA/B,UAAQ,GAAAY,gBAAA,CAAGF,MAAM,CAACM,MAAM,kBAC3BhB,mBAAA,CAA0D;MAAjDiB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACV,MAAM,CAACC,GAAG;OAAG,WAAS,iBAb7DU,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}