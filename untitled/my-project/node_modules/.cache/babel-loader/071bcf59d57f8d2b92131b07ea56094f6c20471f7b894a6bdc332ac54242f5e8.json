{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, watch, onMounted } from 'vue';\n\n// Define props to receive data from the parent component\n\nexport default {\n  __name: 'EducationInput',\n  props: {\n    modelValue: Object,\n    educationInfo: {\n      type: Array,\n      default: () => []\n    },\n    index: Number\n  },\n  emits: ['update:modelValue', 'remove'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n\n    // Define emits to send events to the parent component\n    const emit = __emit;\n\n    // Reactive state for education form data\n    const education = ref({\n      ...props.modelValue\n    });\n    const selectedEducationLevel = ref(education.value.level || 'Среднее');\n    const canRemove = ref(props.educationInfo && props.educationInfo.length > 1);\n\n    // Watch the length of educationInfo to enable/disable the remove button\n    watch(() => props.educationInfo.length, newLength => {\n      canRemove.value = newLength > 1;\n    });\n\n    // Watch the education object and emit changes to parent\n    watch(education, () => {\n      emit('update:modelValue', education.value);\n    }, {\n      deep: true\n    });\n\n    // Watch for changes in education level\n    watch(selectedEducationLevel, newLevel => {\n      education.value.level = newLevel;\n    });\n\n    // Function to remove education entry\n    const removeEducation = () => {\n      emit('remove', props.index);\n    };\n\n    // Initialize data when the component is mounted\n    onMounted(() => {\n      if (props.modelValue) {\n        education.value = {\n          ...props.modelValue\n        };\n        selectedEducationLevel.value = props.modelValue.level || 'Среднее';\n      }\n    });\n\n    // Search query and selected option\n    const searchQuery = ref(\"\");\n    const selectedOption = ref(null);\n\n    // Filtered options list\n    const filteredOptions = ref([]);\n\n    // Label for the selected item\n    const selectedLabel = ref(\"Выберите учебное заведение\");\n\n    // Handler for selecting an option\n    const selectOption = option => {\n      selectedLabel.value = option.label;\n      selectedOption.value = option;\n      emit('update:modelValue', option); // Emit the selected university to parent\n    };\n\n    // Search for universities\n    const searchUniversities = async () => {\n      if (!searchQuery.value.trim()) {\n        filteredOptions.value = [];\n        return;\n      }\n      const params = new URLSearchParams({\n        q: searchQuery.value,\n        v: '5.131',\n        // API version\n        count: '10' // Limit results\n      });\n      try {\n        const response = await fetch(`https://api.vk.com/method/database.getUniversities?${params.toString()}&access_token=YOUR_ACCESS_TOKEN`);\n        const data = await response.json();\n        if (data.response && data.response.items) {\n          filteredOptions.value = data.response.items.map(item => ({\n            label: item.title,\n            // University name\n            id: item.id // University ID\n          }));\n        } else {\n          filteredOptions.value = [];\n        }\n      } catch (error) {\n        console.error('Error fetching universities:', error);\n      }\n    };\n    const __returned__ = {\n      props,\n      emit,\n      education,\n      selectedEducationLevel,\n      canRemove,\n      removeEducation,\n      searchQuery,\n      selectedOption,\n      filteredOptions,\n      selectedLabel,\n      selectOption,\n      searchUniversities,\n      ref,\n      watch,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","props","__props","emit","__emit","education","modelValue","selectedEducationLevel","value","level","canRemove","educationInfo","length","newLength","deep","newLevel","removeEducation","index","searchQuery","selectedOption","filteredOptions","selectedLabel","selectOption","option","label","searchUniversities","trim","params","URLSearchParams","q","v","count","response","fetch","toString","data","json","items","map","item","title","id","error","console"],"sources":["D:/Users/danil/untitled/my-project/src/components/EducationInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"education-input\">\r\n    <label for=\"education-level\">Уровень образования:</label>\r\n    <select v-model=\"selectedEducationLevel\" id=\"education-level\">\r\n      <option value=\"Среднее\">Среднее</option>\r\n      <option value=\"Среднее специальное\">Среднее специальное</option>\r\n      <option value=\"Неоконченное высшее\">Неоконченное высшее</option>\r\n      <option value=\"Высшее\">Высшее</option>\r\n    </select>\r\n\r\n    <div v-if=\"selectedEducationLevel !== 'Среднее'\">\r\n      <div class=\"education-fields\">\r\n        <label for=\"institution\">Учебное заведение:</label>\r\n        <div class=\"dropdown mb-3\" id=\"dd\" style=\"position: relative;\">\r\n          <button\r\n              class=\"btn btn-outline-primary dropdown-toggle w-100 text-start\"\r\n              type=\"button\"\r\n              id=\"dropdownMenuButton\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n          >\r\n            {{ selectedLabel }}\r\n          </button>\r\n          <ul class=\"dropdown-menu w-100\" aria-labelledby=\"dropdownMenuButton\">\r\n            <!-- Поле для поиска -->\r\n            <li class=\"p-2\">\r\n              <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  v-model=\"searchQuery\"\r\n                  @input=\"searchUniversities\"\r\n                  placeholder=\"Поиск...\"\r\n              />\r\n            </li>\r\n            <li>\r\n              <hr class=\"dropdown-divider\" />\r\n            </li>\r\n            <!-- Список опций -->\r\n            <li\r\n                v-for=\"option in filteredOptions\"\r\n                :key=\"option.id\"\r\n                class=\"dropdown-item\"\r\n                @click=\"selectOption(option)\"\r\n            >\r\n              {{ option.label }}\r\n            </li>\r\n            <!-- Если опций нет -->\r\n            <li v-if=\"filteredOptions.length === 0\" class=\"dropdown-item text-muted\">\r\n              Ничего не найдено\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <label for=\"faculty\">Факультет:</label>\r\n        <input v-model=\"education.faculty\" id=\"faculty\" type=\"text\" placeholder=\"Введите факультет\" />\r\n\r\n        <label for=\"specialization\">Специализация:</label>\r\n        <input v-model=\"education.specialization\" id=\"specialization\" type=\"text\" placeholder=\"Введите специализацию\" />\r\n\r\n        <label for=\"yearOfGraduation\">Год окончания:</label>\r\n        <input v-model=\"education.yearOfGraduation\" id=\"yearOfGraduation\" type=\"date\" placeholder=\"Выберите год окончания\" />\r\n      </div>\r\n    </div>\r\n\r\n    <button v-if=\"canRemove\" @click=\"removeEducation\" class=\"remove-education-btn\">×</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, onMounted } from 'vue';\r\n\r\n// Define props to receive data from the parent component\r\nconst props = defineProps({\r\n  modelValue: Object,\r\n  educationInfo: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  index: Number,\r\n});\r\n\r\n// Define emits to send events to the parent component\r\nconst emit = defineEmits(['update:modelValue', 'remove']);\r\n\r\n// Reactive state for education form data\r\nconst education = ref({ ...props.modelValue });\r\nconst selectedEducationLevel = ref(education.value.level || 'Среднее');\r\nconst canRemove = ref(props.educationInfo && props.educationInfo.length > 1);\r\n\r\n// Watch the length of educationInfo to enable/disable the remove button\r\nwatch(() => props.educationInfo.length, (newLength) => {\r\n  canRemove.value = newLength > 1;\r\n});\r\n\r\n// Watch the education object and emit changes to parent\r\nwatch(education, () => {\r\n  emit('update:modelValue', education.value);\r\n}, { deep: true });\r\n\r\n// Watch for changes in education level\r\nwatch(selectedEducationLevel, (newLevel) => {\r\n  education.value.level = newLevel;\r\n});\r\n\r\n// Function to remove education entry\r\nconst removeEducation = () => {\r\n  emit('remove', props.index);\r\n};\r\n\r\n// Initialize data when the component is mounted\r\nonMounted(() => {\r\n  if (props.modelValue) {\r\n    education.value = { ...props.modelValue };\r\n    selectedEducationLevel.value = props.modelValue.level || 'Среднее';\r\n  }\r\n});\r\n\r\n// Search query and selected option\r\nconst searchQuery = ref(\"\");\r\nconst selectedOption = ref(null);\r\n\r\n// Filtered options list\r\nconst filteredOptions = ref([]);\r\n\r\n// Label for the selected item\r\nconst selectedLabel = ref(\"Выберите учебное заведение\");\r\n\r\n// Handler for selecting an option\r\nconst selectOption = (option) => {\r\n  selectedLabel.value = option.label;\r\n  selectedOption.value = option;\r\n  emit('update:modelValue', option);  // Emit the selected university to parent\r\n};\r\n\r\n// Search for universities\r\nconst searchUniversities = async () => {\r\n  if (!searchQuery.value.trim()) {\r\n    filteredOptions.value = [];\r\n    return;\r\n  }\r\n\r\n  const params = new URLSearchParams({\r\n    q: searchQuery.value,\r\n    v: '5.131', // API version\r\n    count: '10', // Limit results\r\n  });\r\n\r\n  try {\r\n    const response = await fetch(\r\n        `https://api.vk.com/method/database.getUniversities?${params.toString()}&access_token=YOUR_ACCESS_TOKEN`\r\n    );\r\n    const data = await response.json();\r\n\r\n    if (data.response && data.response.items) {\r\n      filteredOptions.value = data.response.items.map(item => ({\r\n        label: item.title,  // University name\r\n        id: item.id         // University ID\r\n      }));\r\n    } else {\r\n      filteredOptions.value = [];\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching universities:', error);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для кнопки и выпадающего меню */\r\n.dropdown-toggle {\r\n  background-color: #ffffff;\r\n  border-color: #cccccc;\r\n  color: #333333;\r\n  font-weight: 500;\r\n}\r\n\r\n.dropdown-toggle:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);\r\n}\r\n\r\n.dropdown-menu {\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.dropdown-item {\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f8f9fa;\r\n  color: #007bff;\r\n}\r\n\r\n.dropdown-item:active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.text-muted {\r\n  color: #6c757d !important;\r\n}\r\n\r\n/* Стили для поля поиска */\r\n.form-control {\r\n  font-size: 14px;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.form-control:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);\r\n}\r\n\r\n/* Дополнительные стили */\r\n.label {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n}\r\n</style>\r\n"],"mappings":";;;AAoEA,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,QAAQ,KAAK;;AAE3C;;;;;;;;;;;;;;;;;;IACA,MAAMC,KAAK,GAAGC,OAOZ;;IAEF;IACA,MAAMC,IAAI,GAAGC,MAA4C;;IAEzD;IACA,MAAMC,SAAS,GAAGP,GAAG,CAAC;MAAE,GAAGG,KAAK,CAACK;IAAW,CAAC,CAAC;IAC9C,MAAMC,sBAAsB,GAAGT,GAAG,CAACO,SAAS,CAACG,KAAK,CAACC,KAAK,IAAI,SAAS,CAAC;IACtE,MAAMC,SAAS,GAAGZ,GAAG,CAACG,KAAK,CAACU,aAAa,IAAIV,KAAK,CAACU,aAAa,CAACC,MAAM,GAAG,CAAC,CAAC;;IAE5E;IACAb,KAAK,CAAC,MAAME,KAAK,CAACU,aAAa,CAACC,MAAM,EAAGC,SAAS,IAAK;MACrDH,SAAS,CAACF,KAAK,GAAGK,SAAS,GAAG,CAAC;IACjC,CAAC,CAAC;;IAEF;IACAd,KAAK,CAACM,SAAS,EAAE,MAAM;MACrBF,IAAI,CAAC,mBAAmB,EAAEE,SAAS,CAACG,KAAK,CAAC;IAC5C,CAAC,EAAE;MAAEM,IAAI,EAAE;IAAK,CAAC,CAAC;;IAElB;IACAf,KAAK,CAACQ,sBAAsB,EAAGQ,QAAQ,IAAK;MAC1CV,SAAS,CAACG,KAAK,CAACC,KAAK,GAAGM,QAAQ;IAClC,CAAC,CAAC;;IAEF;IACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5Bb,IAAI,CAAC,QAAQ,EAAEF,KAAK,CAACgB,KAAK,CAAC;IAC7B,CAAC;;IAED;IACAjB,SAAS,CAAC,MAAM;MACd,IAAIC,KAAK,CAACK,UAAU,EAAE;QACpBD,SAAS,CAACG,KAAK,GAAG;UAAE,GAAGP,KAAK,CAACK;QAAW,CAAC;QACzCC,sBAAsB,CAACC,KAAK,GAAGP,KAAK,CAACK,UAAU,CAACG,KAAK,IAAI,SAAS;MACpE;IACF,CAAC,CAAC;;IAEF;IACA,MAAMS,WAAW,GAAGpB,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMqB,cAAc,GAAGrB,GAAG,CAAC,IAAI,CAAC;;IAEhC;IACA,MAAMsB,eAAe,GAAGtB,GAAG,CAAC,EAAE,CAAC;;IAE/B;IACA,MAAMuB,aAAa,GAAGvB,GAAG,CAAC,4BAA4B,CAAC;;IAEvD;IACA,MAAMwB,YAAY,GAAIC,MAAM,IAAK;MAC/BF,aAAa,CAACb,KAAK,GAAGe,MAAM,CAACC,KAAK;MAClCL,cAAc,CAACX,KAAK,GAAGe,MAAM;MAC7BpB,IAAI,CAAC,mBAAmB,EAAEoB,MAAM,CAAC,CAAC,CAAE;IACtC,CAAC;;IAED;IACA,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI,CAACP,WAAW,CAACV,KAAK,CAACkB,IAAI,CAAC,CAAC,EAAE;QAC7BN,eAAe,CAACZ,KAAK,GAAG,EAAE;QAC1B;MACF;MAEA,MAAMmB,MAAM,GAAG,IAAIC,eAAe,CAAC;QACjCC,CAAC,EAAEX,WAAW,CAACV,KAAK;QACpBsB,CAAC,EAAE,OAAO;QAAE;QACZC,KAAK,EAAE,IAAI,CAAE;MACf,CAAC,CAAC;MAEF,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,sDAAsDN,MAAM,CAACO,QAAQ,CAAC,CAAC,iCAC3E,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACH,QAAQ,IAAIG,IAAI,CAACH,QAAQ,CAACK,KAAK,EAAE;UACxCjB,eAAe,CAACZ,KAAK,GAAG2B,IAAI,CAACH,QAAQ,CAACK,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;YACvDf,KAAK,EAAEe,IAAI,CAACC,KAAK;YAAG;YACpBC,EAAE,EAAEF,IAAI,CAACE,EAAE,CAAS;UACtB,CAAC,CAAC,CAAC;QACL,CAAC,MAAM;UACLrB,eAAe,CAACZ,KAAK,GAAG,EAAE;QAC5B;MACF,CAAC,CAAC,OAAOkC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}