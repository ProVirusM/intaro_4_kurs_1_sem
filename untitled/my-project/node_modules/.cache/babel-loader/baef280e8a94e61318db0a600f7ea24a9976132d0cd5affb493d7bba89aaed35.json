{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'EditResume',\n  data() {\n    return {\n      resume: {\n        _id: '',\n        name: '',\n        profession: '',\n        birthday: '',\n        email: '',\n        phone: '',\n        address: '',\n        status: '',\n        education: '',\n        additionalEducation: '',\n        salary: '',\n        skills: '',\n        aboutMe: '',\n        photo: null // Для хранения выбранного фото\n      }\n    };\n  },\n  methods: {\n    ...mapActions(['updateResumeStatus']),\n    // Подключаем действия Vuex\n\n    // Загружаем резюме по id, когда компонент создан\n    async loadResume() {\n      const resumeId = this.$route.params.id; // Получаем id из маршрута\n      // Здесь вам нужно будет использовать правильное хранилище или API для получения данных\n      const resume = this.resumesByStatus.find(res => res._id === resumeId);\n      if (resume) {\n        this.resume = {\n          ...resume\n        }; // Заполняем поля формы\n      } else {\n        console.error('Резюме не найдено');\n      }\n    },\n    // Обрабатываем сохранение изменений\n    async saveResume() {\n      try {\n        // Отправляем запрос на сервер для обновления резюме\n        await this.updateResumeStatus({\n          id: this.resume._id,\n          ...this.resume // Отправляем все поля\n        });\n        console.log('Резюме обновлено!');\n        this.$router.push('/'); // После сохранения перенаправляем на главную страницу\n      } catch (error) {\n        console.error('Ошибка при сохранении резюме:', error);\n      }\n    },\n    // Обработка изменения фото\n    onFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.resume.photo = e.target.result; // Сохраняем путь к фото\n        };\n        reader.readAsDataURL(file); // Преобразуем изображение в base64 строку\n      }\n    }\n  },\n  async created() {\n    await this.loadResume(); // Загружаем данные резюме при создании компонента\n  }\n};","map":{"version":3,"names":["mapActions","name","data","resume","_id","profession","birthday","email","phone","address","status","education","additionalEducation","salary","skills","aboutMe","photo","methods","loadResume","resumeId","$route","params","id","resumesByStatus","find","res","console","error","saveResume","updateResumeStatus","log","$router","push","onFileChange","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","created"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\views\\EditResumePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-resume\">\r\n    <h2>Редактирование резюме</h2>\r\n\r\n    <!-- Форма редактирования -->\r\n    <form @submit.prevent=\"saveResume\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Имя</label>\r\n        <input type=\"text\" v-model=\"resume.name\" id=\"name\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"profession\">Профессия</label>\r\n        <input type=\"text\" v-model=\"resume.profession\" id=\"profession\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"birthday\">Дата рождения</label>\r\n        <input type=\"date\" v-model=\"resume.birthday\" id=\"birthday\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" v-model=\"resume.email\" id=\"email\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"phone\">Телефон</label>\r\n        <input type=\"tel\" v-model=\"resume.phone\" id=\"phone\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"address\">Город</label>\r\n        <input type=\"text\" v-model=\"resume.address\" id=\"address\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"status\">Статус</label>\r\n        <select v-model=\"resume.status\" id=\"status\">\r\n          <option value=\"Новый\">Новый</option>\r\n          <option value=\"Назначено собеседование\">Назначено собеседование</option>\r\n          <option value=\"Принят\">Принят</option>\r\n          <option value=\"Отказ\">Отказ</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"education\">Уровень образования</label>\r\n        <input type=\"text\" v-model=\"resume.education\" id=\"education\" placeholder=\"Среднее\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"additionalEducation\">Дополнительное место обучения</label>\r\n        <input type=\"text\" v-model=\"resume.additionalEducation\" id=\"additionalEducation\" />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"salary\">Желаемая зарплата</label>\r\n        <input type=\"number\" v-model=\"resume.salary\" id=\"salary\" placeholder=\"Введите желаемую зарплату\" />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"skills\">Навыки</label>\r\n        <textarea v-model=\"resume.skills\" id=\"skills\" placeholder=\"Перечислите навыки\" rows=\"4\"></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"aboutMe\">О себе</label>\r\n        <textarea v-model=\"resume.aboutMe\" id=\"aboutMe\" placeholder=\"Информация о вас\" rows=\"6\"></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"photo\">Фото</label>\r\n        <input type=\"file\" @change=\"onFileChange\" id=\"photo\" />\r\n        <img v-if=\"resume.photo\" :src=\"resume.photo\" alt=\"Фото\" style=\"width: 100px; margin-top: 10px;\" />\r\n      </div>\r\n\r\n      <button type=\"submit\">Сохранить</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\n\r\nexport default {\r\n  name: 'EditResume',\r\n  data() {\r\n    return {\r\n      resume: {\r\n        _id: '',\r\n        name: '',\r\n        profession: '',\r\n        birthday: '',\r\n        email: '',\r\n        phone: '',\r\n        address: '',\r\n        status: '',\r\n        education: '',\r\n        additionalEducation: '',\r\n        salary: '',\r\n        skills: '',\r\n        aboutMe: '',\r\n        photo: null, // Для хранения выбранного фото\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(['updateResumeStatus']), // Подключаем действия Vuex\r\n\r\n    // Загружаем резюме по id, когда компонент создан\r\n    async loadResume() {\r\n      const resumeId = this.$route.params.id; // Получаем id из маршрута\r\n      // Здесь вам нужно будет использовать правильное хранилище или API для получения данных\r\n      const resume = this.resumesByStatus.find(res => res._id === resumeId);\r\n\r\n      if (resume) {\r\n        this.resume = { ...resume }; // Заполняем поля формы\r\n      } else {\r\n        console.error('Резюме не найдено');\r\n      }\r\n    },\r\n\r\n    // Обрабатываем сохранение изменений\r\n    async saveResume() {\r\n      try {\r\n        // Отправляем запрос на сервер для обновления резюме\r\n        await this.updateResumeStatus({\r\n          id: this.resume._id,\r\n          ...this.resume, // Отправляем все поля\r\n        });\r\n        console.log('Резюме обновлено!');\r\n        this.$router.push('/'); // После сохранения перенаправляем на главную страницу\r\n      } catch (error) {\r\n        console.error('Ошибка при сохранении резюме:', error);\r\n      }\r\n    },\r\n\r\n    // Обработка изменения фото\r\n    onFileChange(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          this.resume.photo = e.target.result; // Сохраняем путь к фото\r\n        };\r\n        reader.readAsDataURL(file); // Преобразуем изображение в base64 строку\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    await this.loadResume(); // Загружаем данные резюме при создании компонента\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для формы редактирования */\r\n.edit-resume {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-weight: bold;\r\n}\r\n\r\n.form-group input,\r\n.form-group select,\r\n.form-group textarea {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 5px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #007acc;\r\n  color: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #005f99;\r\n}\r\n\r\nimg {\r\n  margin-top: 10px;\r\n  max-width: 100px;\r\n}\r\n</style>\r\n"],"mappings":";AAmFA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;QACNC,GAAG,EAAE,EAAE;QACPH,IAAI,EAAE,EAAE;QACRI,UAAU,EAAE,EAAE;QACdC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,EAAE;QACbC,mBAAmB,EAAE,EAAE;QACvBC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE,IAAI,CAAE;MACf;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGjB,UAAU,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAAE;;IAEvC;IACA,MAAMkB,UAAUA,CAAA,EAAG;MACjB,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;MACxC;MACA,MAAMnB,MAAK,GAAI,IAAI,CAACoB,eAAe,CAACC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACrB,GAAE,KAAMe,QAAQ,CAAC;MAErE,IAAIhB,MAAM,EAAE;QACV,IAAI,CAACA,MAAK,GAAI;UAAE,GAAGA;QAAO,CAAC,EAAE;MAC/B,OAAO;QACLuB,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;MACpC;IACF,CAAC;IAED;IACA,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAM,IAAI,CAACC,kBAAkB,CAAC;UAC5BP,EAAE,EAAE,IAAI,CAACnB,MAAM,CAACC,GAAG;UACnB,GAAG,IAAI,CAACD,MAAM,CAAE;QAClB,CAAC,CAAC;QACFuB,OAAO,CAACI,GAAG,CAAC,mBAAmB,CAAC;QAChC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B,EAAE,OAAOL,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAED;IACAM,YAAYA,CAACC,KAAK,EAAE;MAClB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAKC,CAAC,IAAK;UACrB,IAAI,CAACtC,MAAM,CAACa,KAAI,GAAIyB,CAAC,CAACL,MAAM,CAACM,MAAM,EAAE;QACvC,CAAC;QACDJ,MAAM,CAACK,aAAa,CAACR,IAAI,CAAC,EAAE;MAC9B;IACF;EACF,CAAC;EAED,MAAMS,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAAC1B,UAAU,CAAC,CAAC,EAAE;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}