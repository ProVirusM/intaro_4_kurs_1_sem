{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref } from \"vue\";\n\n// Объявляем событие для передачи выбранного города в родительский компонент\n\nexport default {\n  __name: 'CityInput',\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const emit = __emit;\n    const searchQuery = ref(\"\"); // Поисковый запрос\n    const selectedOption = ref(null); // Выбранный элемент\n\n    // Фильтрованные опции\n    const filteredOptions = ref([]);\n\n    // Метка для выбранного элемента\n    const selectedLabel = ref(\"\");\n\n    // Обработчик выбора элемента\n    const selectOption = option => {\n      selectedLabel.value = option.label;\n      selectedOption.value = option;\n      // Отправляем выбранный город родителю\n      emit('update:modelValue', option);\n    };\n\n    // Функция для поиска городов\n    const searchCities = async () => {\n      const params = new URLSearchParams({\n        v: '5.81',\n        country_id: '1',\n        region_id: '0',\n        offset: '0',\n        need_all: '0',\n        count: '10',\n        q: searchQuery.value\n      });\n      try {\n        const response = await fetch(`/api/method/database.getCities?${params}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': 'Bearer 95d4a79995d4a79995d4a799df96cb3f6e995d495d4a799f329b17073154c54fe52893a'\n          }\n        });\n        const data = await response.json();\n        if (data.response && data.response.items) {\n          filteredOptions.value = filterCities(data.response.items);\n        }\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      }\n    };\n\n    // Фильтрация полученных данных\n    const filterCities = cities => {\n      return cities.map(city => ({\n        label: city.title,\n        id: city.id\n      }));\n    };\n    const __returned__ = {\n      emit,\n      searchQuery,\n      selectedOption,\n      filteredOptions,\n      selectedLabel,\n      selectOption,\n      searchCities,\n      filterCities,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","emit","__emit","searchQuery","selectedOption","filteredOptions","selectedLabel","selectOption","option","value","label","searchCities","params","URLSearchParams","v","country_id","region_id","offset","need_all","count","q","response","fetch","method","headers","data","json","items","filterCities","error","console","cities","map","city","title","id"],"sources":["D:/Users/danil/untitled/my-project/src/components/CityInput.vue"],"sourcesContent":["<template>\r\n  <label for=\"dd\" class=\"form-label\">Город</label>\r\n  <div class=\"dropdown mb-3\" id=\"dd\" style=\"position: relative;\">\r\n    <button\r\n        class=\"btn btn-outline-primary dropdown-toggle w-100 text-start d-flex justify-content-between align-items-center\"\r\n        type=\"button\"\r\n        id=\"dropdownMenuButton\"\r\n        data-bs-toggle=\"dropdown\"\r\n        aria-expanded=\"false\"\r\n    >\r\n      <span :class=\"{'text-muted': !selectedLabel}\">{{ selectedLabel || 'Выберите элемент' }}</span>\r\n      <i v-if=\"selectedLabel\" class=\"bi bi-check-circle-fill text-success\"></i>\r\n    </button>\r\n    <ul class=\"dropdown-menu w-100\" aria-labelledby=\"dropdownMenuButton\">\r\n      <!-- Поле для поиска -->\r\n      <li class=\"p-2\">\r\n        <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            v-model=\"searchQuery\"\r\n            @input=\"searchCities\"\r\n            placeholder=\"Поиск...\"\r\n        />\r\n      </li>\r\n      <li>\r\n        <hr class=\"dropdown-divider\" />\r\n      </li>\r\n      <!-- Список опций -->\r\n      <li\r\n          v-for=\"option in filteredOptions\"\r\n          :key=\"option.id\"\r\n          class=\"dropdown-item\"\r\n          @click=\"selectOption(option)\"\r\n      >\r\n        {{ option.label }}\r\n      </li>\r\n      <!-- Если опций нет -->\r\n      <li v-if=\"filteredOptions.length === 0\" class=\"dropdown-item text-muted\">\r\n        Ничего не найдено\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\n// Объявляем событие для передачи выбранного города в родительский компонент\r\nconst emit = defineEmits(['update:modelValue']);\r\n\r\nconst searchQuery = ref(\"\"); // Поисковый запрос\r\nconst selectedOption = ref(null); // Выбранный элемент\r\n\r\n// Фильтрованные опции\r\nconst filteredOptions = ref([]);\r\n\r\n// Метка для выбранного элемента\r\nconst selectedLabel = ref(\"\");\r\n\r\n// Обработчик выбора элемента\r\nconst selectOption = (option) => {\r\n  selectedLabel.value = option.label;\r\n  selectedOption.value = option;\r\n  // Отправляем выбранный город родителю\r\n  emit('update:modelValue', option);\r\n};\r\n\r\n// Функция для поиска городов\r\nconst searchCities = async () => {\r\n  const params = new URLSearchParams({\r\n    v: '5.81',\r\n    country_id: '1',\r\n    region_id: '0',\r\n    offset: '0',\r\n    need_all: '0',\r\n    count: '10',\r\n    q: searchQuery.value\r\n  });\r\n\r\n  try {\r\n    const response = await fetch(`/api/method/database.getCities?${params}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        'Authorization': 'Bearer 95d4a79995d4a79995d4a799df96cb3f6e995d495d4a799f329b17073154c54fe52893a'\r\n      }\r\n    });\r\n    const data = await response.json();\r\n    if (data.response && data.response.items) {\r\n      filteredOptions.value = filterCities(data.response.items);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching cities:', error);\r\n  }\r\n};\r\n\r\n// Фильтрация полученных данных\r\nconst filterCities = (cities) => {\r\n  return cities.map(city => ({\r\n    label: city.title,\r\n    id: city.id\r\n  }));\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для кнопки и выпадающего меню */\r\n.dropdown-toggle {\r\n  background-color: #ffffff;\r\n  border-color: #cccccc;\r\n  color: #333333;\r\n  font-weight: 500;\r\n  padding-left: 1rem;\r\n}\r\n\r\n.dropdown-toggle:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);\r\n}\r\n\r\n.dropdown-menu {\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.dropdown-item {\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background-color: #f8f9fa;\r\n  color: #007bff;\r\n}\r\n\r\n.dropdown-item:active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.text-muted {\r\n  color: #6c757d !important;\r\n}\r\n\r\n/* Стили для поля поиска */\r\n.form-control {\r\n  font-size: 14px;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.form-control:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);\r\n}\r\n\r\n/* Стиль для метки выбранного элемента */\r\n.dropdown-toggle span {\r\n  font-weight: 500;\r\n  color: #333;\r\n  font-size: 14px;\r\n}\r\n\r\n.dropdown-toggle .bi {\r\n  margin-left: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n.dropdown-toggle.text-muted span {\r\n  color: #6c757d;\r\n}\r\n\r\n</style>\r\n"],"mappings":";;;AA6CA,SAASA,GAAG,QAAQ,KAAK;;AAEzB;;;;;;;;;;IACA,MAAMC,IAAI,GAAGC,MAAkC;IAE/C,MAAMC,WAAW,GAAGH,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,MAAMI,cAAc,GAAGJ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;IAElC;IACA,MAAMK,eAAe,GAAGL,GAAG,CAAC,EAAE,CAAC;;IAE/B;IACA,MAAMM,aAAa,GAAGN,GAAG,CAAC,EAAE,CAAC;;IAE7B;IACA,MAAMO,YAAY,GAAIC,MAAM,IAAK;MAC/BF,aAAa,CAACG,KAAK,GAAGD,MAAM,CAACE,KAAK;MAClCN,cAAc,CAACK,KAAK,GAAGD,MAAM;MAC7B;MACAP,IAAI,CAAC,mBAAmB,EAAEO,MAAM,CAAC;IACnC,CAAC;;IAED;IACA,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;QACjCC,CAAC,EAAE,MAAM;QACTC,UAAU,EAAE,GAAG;QACfC,SAAS,EAAE,GAAG;QACdC,MAAM,EAAE,GAAG;QACXC,QAAQ,EAAE,GAAG;QACbC,KAAK,EAAE,IAAI;QACXC,CAAC,EAAEjB,WAAW,CAACM;MACjB,CAAC,CAAC;MAEF,IAAI;QACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkCV,MAAM,EAAE,EAAE;UACvEW,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,gCAAgC;YAChD,eAAe,EAAE;UACnB;QACF,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACJ,QAAQ,IAAII,IAAI,CAACJ,QAAQ,CAACM,KAAK,EAAE;UACxCtB,eAAe,CAACI,KAAK,GAAGmB,YAAY,CAACH,IAAI,CAACJ,QAAQ,CAACM,KAAK,CAAC;QAC3D;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;;IAED;IACA,MAAMD,YAAY,GAAIG,MAAM,IAAK;MAC/B,OAAOA,MAAM,CAACC,GAAG,CAACC,IAAI,KAAK;QACzBvB,KAAK,EAAEuB,IAAI,CAACC,KAAK;QACjBC,EAAE,EAAEF,IAAI,CAACE;MACX,CAAC,CAAC,CAAC;IACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}