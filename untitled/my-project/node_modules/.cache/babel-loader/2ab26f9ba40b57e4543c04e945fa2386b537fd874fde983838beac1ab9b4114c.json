{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    resumes: [] // Массив с резюме\n  },\n  mutations: {\n    // Мутация для установки списка резюме\n    setResumes(state, resumes) {\n      state.resumes = resumes;\n    },\n    // Мутация для обновления статуса резюме\n    updateResumeStatus(state, {\n      id,\n      status\n    }) {\n      const resume = state.resumes.find(r => r._id === id);\n      if (resume) {\n        resume.status = status;\n      }\n    }\n  },\n  actions: {\n    // Получаем резюме с сервера\n    async fetchResumes({\n      commit\n    }) {\n      try {\n        const {\n          data\n        } = await axios.get('http://localhost:3000/api/cv');\n        commit('setResumes', data); // Сохраняем полученные резюме в state\n      } catch (error) {\n        console.error('Ошибка загрузки резюме:', error);\n      }\n    },\n    // Обновляем статус резюме на сервере и в Vuex\n    async updateResumeStatus({\n      commit\n    }, {\n      id,\n      status\n    }) {\n      try {\n        // Отправляем запрос на сервер для обновления статуса\n        const response = await axios.put(`http://localhost:3000/api/cv/${id}/status/update`, {\n          status\n        });\n        if (response.status === 200) {\n          commit('updateResumeStatus', {\n            id,\n            status\n          });\n        }\n      } catch (error) {\n        console.error('Ошибка обновления статуса резюме:', error);\n      }\n    }\n  },\n  getters: {\n    // Геттер для получения всех резюме (можно модифицировать для группировки)\n    resumesByStatus: state => state.resumes,\n    // Группируем резюме по статусам для более удобного отображения\n    resumesGroupedByStatus: state => {\n      return state.resumes.reduce((acc, resume) => {\n        if (!acc[resume.status]) {\n          acc[resume.status] = [];\n        }\n        acc[resume.status].push(resume);\n        return acc;\n      }, {});\n    }\n  }\n});","map":{"version":3,"names":["createStore","axios","state","resumes","mutations","setResumes","updateResumeStatus","id","status","resume","find","r","_id","actions","fetchResumes","commit","data","get","error","console","response","put","getters","resumesByStatus","resumesGroupedByStatus","reduce","acc","push"],"sources":["D:/Users/danil/untitled/my-project/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nexport default createStore({\r\n    state: {\r\n        resumes: [],  // Массив с резюме\r\n    },\r\n    mutations: {\r\n        // Мутация для установки списка резюме\r\n        setResumes(state, resumes) {\r\n            state.resumes = resumes;\r\n        },\r\n        // Мутация для обновления статуса резюме\r\n        updateResumeStatus(state, { id, status }) {\r\n            const resume = state.resumes.find((r) => r._id === id);\r\n            if (resume) {\r\n                resume.status = status;\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        // Получаем резюме с сервера\r\n        async fetchResumes({ commit }) {\r\n            try {\r\n                const { data } = await axios.get('http://localhost:3000/api/cv');\r\n                commit('setResumes', data); // Сохраняем полученные резюме в state\r\n            } catch (error) {\r\n                console.error('Ошибка загрузки резюме:', error);\r\n            }\r\n        },\r\n        // Обновляем статус резюме на сервере и в Vuex\r\n        async updateResumeStatus({ commit }, { id, status }) {\r\n            try {\r\n                // Отправляем запрос на сервер для обновления статуса\r\n                const response = await axios.put(`http://localhost:3000/api/cv/${id}/status/update`, { status });\r\n                if (response.status === 200) {\r\n                    commit('updateResumeStatus', { id, status });\r\n                }\r\n            } catch (error) {\r\n                console.error('Ошибка обновления статуса резюме:', error);\r\n            }\r\n        },\r\n    },\r\n    getters: {\r\n        // Геттер для получения всех резюме (можно модифицировать для группировки)\r\n        resumesByStatus: (state) => state.resumes,\r\n\r\n        // Группируем резюме по статусам для более удобного отображения\r\n        resumesGroupedByStatus: (state) => {\r\n            return state.resumes.reduce((acc, resume) => {\r\n                if (!acc[resume.status]) {\r\n                    acc[resume.status] = [];\r\n                }\r\n                acc[resume.status].push(resume);\r\n                return acc;\r\n            }, {});\r\n        },\r\n    },\r\n});\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeD,WAAW,CAAC;EACvBE,KAAK,EAAE;IACHC,OAAO,EAAE,EAAE,CAAG;EAClB,CAAC;EACDC,SAAS,EAAE;IACP;IACAC,UAAUA,CAACH,KAAK,EAAEC,OAAO,EAAE;MACvBD,KAAK,CAACC,OAAO,GAAGA,OAAO;IAC3B,CAAC;IACD;IACAG,kBAAkBA,CAACJ,KAAK,EAAE;MAAEK,EAAE;MAAEC;IAAO,CAAC,EAAE;MACtC,MAAMC,MAAM,GAAGP,KAAK,CAACC,OAAO,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKL,EAAE,CAAC;MACtD,IAAIE,MAAM,EAAE;QACRA,MAAM,CAACD,MAAM,GAAGA,MAAM;MAC1B;IACJ;EACJ,CAAC;EACDK,OAAO,EAAE;IACL;IACA,MAAMC,YAAYA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC3B,IAAI;QACA,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,8BAA8B,CAAC;QAChEF,MAAM,CAAC,YAAY,EAAEC,IAAI,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IACD;IACA,MAAMZ,kBAAkBA,CAAC;MAAES;IAAO,CAAC,EAAE;MAAER,EAAE;MAAEC;IAAO,CAAC,EAAE;MACjD,IAAI;QACA;QACA,MAAMY,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,gCAAgCd,EAAE,gBAAgB,EAAE;UAAEC;QAAO,CAAC,CAAC;QAChG,IAAIY,QAAQ,CAACZ,MAAM,KAAK,GAAG,EAAE;UACzBO,MAAM,CAAC,oBAAoB,EAAE;YAAER,EAAE;YAAEC;UAAO,CAAC,CAAC;QAChD;MACJ,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC7D;IACJ;EACJ,CAAC;EACDI,OAAO,EAAE;IACL;IACAC,eAAe,EAAGrB,KAAK,IAAKA,KAAK,CAACC,OAAO;IAEzC;IACAqB,sBAAsB,EAAGtB,KAAK,IAAK;MAC/B,OAAOA,KAAK,CAACC,OAAO,CAACsB,MAAM,CAAC,CAACC,GAAG,EAAEjB,MAAM,KAAK;QACzC,IAAI,CAACiB,GAAG,CAACjB,MAAM,CAACD,MAAM,CAAC,EAAE;UACrBkB,GAAG,CAACjB,MAAM,CAACD,MAAM,CAAC,GAAG,EAAE;QAC3B;QACAkB,GAAG,CAACjB,MAAM,CAACD,MAAM,CAAC,CAACmB,IAAI,CAAClB,MAAM,CAAC;QAC/B,OAAOiB,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACV;EACJ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}