{"ast":null,"code":"import { ref, watch } from 'vue';\nexport default {\n  props: {\n    modelValue: String\n  },\n  setup(props, {\n    emit\n  }) {\n    const nameValue = ref(props.modelValue);\n    const error = ref(null);\n    const validateInput = () => {\n      const namePattern = /^[A-ZА-Я][a-zа-я]*$/; // Поддерживает только первую заглавную и остальные строчные буквы\n      if (!nameValue.value) {\n        error.value = \"Поле 'Имя' обязательно для заполнения.\";\n      } else if (!namePattern.test(nameValue.value)) {\n        error.value = \"Имя должно начинаться с заглавной буквы, остальные буквы должны быть строчными и только на русском или английском.\";\n      } else {\n        error.value = null;\n      }\n    };\n    const onInputChange = () => {\n      validateInput();\n      emit('update:modelValue', nameValue.value);\n    };\n    watch(() => props.modelValue, newVal => {\n      nameValue.value = newVal;\n      validateInput();\n    });\n    return {\n      nameValue\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","props","modelValue","String","setup","emit","nameValue","error","validateInput","namePattern","value","test","onInputChange","newVal"],"sources":["D:\\Users\\danil\\untitled\\my-project\\src\\components\\NameInput.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label>Имя:</label>\r\n    <input type=\"text\" v-model=\"nameValue\" @input=\"onInputChange\" />\r\n    <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch } from 'vue'\r\n\r\nexport default {\r\n  props: {\r\n    modelValue: String\r\n  },\r\n  setup(props, {emit}) {\r\n    const nameValue = ref(props.modelValue)\r\n    const error = ref(null)\r\n    const validateInput = () => {\r\n      const namePattern = /^[A-ZА-Я][a-zа-я]*$/ // Поддерживает только первую заглавную и остальные строчные буквы\r\n      if(!nameValue.value){\r\n        error.value=\"Поле 'Имя' обязательно для заполнения.\"\r\n      } else if(!namePattern.test(nameValue.value)){\r\n        error.value = \"Имя должно начинаться с заглавной буквы, остальные буквы должны быть строчными и только на русском или английском.\"\r\n      } else {\r\n        error.value = null\r\n      }\r\n\r\n\r\n    }\r\n    const onInputChange = () => {\r\n      validateInput()\r\n      emit('update:modelValue', nameValue.value)\r\n    }\r\n    watch(() => props.modelValue, (newVal) => {\r\n      nameValue.value = newVal\r\n      validateInput()\r\n    })\r\n\r\n    return { nameValue }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.error-message {\r\n  color: red;\r\n  font-size: 0.9em;\r\n}\r\n</style>"],"mappings":"AASA,SAASA,GAAG,EAAEC,KAAI,QAAS,KAAI;AAE/B,eAAe;EACbC,KAAK,EAAE;IACLC,UAAU,EAAEC;EACd,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IAACI;EAAI,CAAC,EAAE;IACnB,MAAMC,SAAQ,GAAIP,GAAG,CAACE,KAAK,CAACC,UAAU;IACtC,MAAMK,KAAI,GAAIR,GAAG,CAAC,IAAI;IACtB,MAAMS,aAAY,GAAIA,CAAA,KAAM;MAC1B,MAAMC,WAAU,GAAI,qBAAoB,EAAE;MAC1C,IAAG,CAACH,SAAS,CAACI,KAAK,EAAC;QAClBH,KAAK,CAACG,KAAK,GAAC,wCAAuC;MACrD,OAAO,IAAG,CAACD,WAAW,CAACE,IAAI,CAACL,SAAS,CAACI,KAAK,CAAC,EAAC;QAC3CH,KAAK,CAACG,KAAI,GAAI,oHAAmH;MACnI,OAAO;QACLH,KAAK,CAACG,KAAI,GAAI,IAAG;MACnB;IAGF;IACA,MAAME,aAAY,GAAIA,CAAA,KAAM;MAC1BJ,aAAa,CAAC;MACdH,IAAI,CAAC,mBAAmB,EAAEC,SAAS,CAACI,KAAK;IAC3C;IACAV,KAAK,CAAC,MAAMC,KAAK,CAACC,UAAU,EAAGW,MAAM,IAAK;MACxCP,SAAS,CAACI,KAAI,GAAIG,MAAK;MACvBL,aAAa,CAAC;IAChB,CAAC;IAED,OAAO;MAAEF;IAAU;EACrB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}